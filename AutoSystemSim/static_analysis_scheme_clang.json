{
    "functions": [
        {
            "function_id_key": "_ZN22ecu_powertrain_control13EngineManagerC1Ev",
            "display_signature": "ecu_powertrain_control::EngineManager",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/engine_manager.cpp",
            "line": 19,
            "end_line": 33,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"EngineManager: Initializing. Engine status: STOPPED.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Initializing. Engine status: STOPPED.\"",
                    "line": 27,
                    "raw_log_statement": "LOG_INFO(\"EngineManager: Initializing. Engine status: STOPPED.\")"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"EngineManager: PowerMonitor service acquired.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: PowerMonitor service acquired.\"",
                    "line": 32,
                    "raw_log_statement": "LOG_DEBUG(\"EngineManager: PowerMonitor service acquired.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "fuel_system_()",
                    "callee_name_at_call_site": "FuelSystem",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control10FuelSystemC1Ev",
                    "callee_resolved_display_name": "ecu_powertrain_control::FuelSystem::FuelSystem",
                    "line": 24
                },
                {
                    "callee_expression": "ecu_power_management::PowerMonitor()",
                    "callee_name_at_call_site": "PowerMonitor",
                    "callee_resolved_key": "_ZN20ecu_power_management12PowerMonitorC1Ev",
                    "callee_resolved_display_name": "ecu_power_management::PowerMonitor::PowerMonitor",
                    "line": 31
                }
            ]
        },
        {
            "function_id_key": "_ZN22ecu_powertrain_control13EngineManagerD1Ev",
            "display_signature": "ecu_powertrain_control::~EngineManager",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/engine_manager.cpp",
            "line": 35,
            "end_line": 43,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"EngineManager: Shutting down. Current RPM: %d\", current_rpm_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Shutting down. Current RPM: %d\", current_rpm_",
                    "line": 36,
                    "raw_log_statement": "LOG_INFO(\"EngineManager: Shutting down. Current RPM: %d\", current_rpm_)"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"EngineManager: Engine was still running during shutdown. Forcing stop.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Engine was still running during shutdown. Forcing stop.\"",
                    "line": 38,
                    "raw_log_statement": "LOG_WARNING(\"EngineManager: Engine was still running during shutdown. Forcing stop.\")"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"EngineManager: PowerMonitor service released.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: PowerMonitor service released.\"",
                    "line": 42,
                    "raw_log_statement": "LOG_DEBUG(\"EngineManager: PowerMonitor service released.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "stopEngine()",
                    "callee_name_at_call_site": "stopEngine",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control13EngineManager10stopEngineEv",
                    "callee_resolved_display_name": "ecu_powertrain_control::EngineManager::stopEngine",
                    "line": 39
                }
            ]
        },
        {
            "function_id_key": "_ZN22ecu_powertrain_control13EngineManager16checkSystemPowerEv",
            "display_signature": "ecu_powertrain_control::checkSystemPower",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/engine_manager.cpp",
            "line": 45,
            "end_line": 59,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"EngineManager: Checking system power status via PowerMonitor service.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Checking system power status via PowerMonitor service.\"",
                    "line": 46,
                    "raw_log_statement": "LOG_INFO(\"EngineManager: Checking system power status via PowerMonitor service.\")"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"EngineManager: PowerMonitor service not available!\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: PowerMonitor service not available!\"",
                    "line": 48,
                    "raw_log_statement": "LOG_ERROR(\"EngineManager: PowerMonitor service not available!\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"EngineManager: System power is stable.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: System power is stable.\"",
                    "line": 54,
                    "raw_log_statement": "LOG_INFO(\"EngineManager: System power is stable.\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"EngineManager: System power is UNSTABLE. This might affect engine operations.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: System power is UNSTABLE. This might affect engine operations.\"",
                    "line": 56,
                    "raw_log_statement": "LOG_WARNING(\"EngineManager: System power is UNSTABLE. This might affect engine operations.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "power_monitor_service_->isPowerStable()",
                    "callee_name_at_call_site": "isPowerStable",
                    "callee_resolved_key": "_ZNK20ecu_power_management12PowerMonitor13isPowerStableEv",
                    "callee_resolved_display_name": "ecu_power_management::PowerMonitor::isPowerStable",
                    "line": 52
                }
            ]
        },
        {
            "function_id_key": "_ZN22ecu_powertrain_control13EngineManager23performIgnitionSequenceEv",
            "display_signature": "ecu_powertrain_control::performIgnitionSequence",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/engine_manager.cpp",
            "line": 62,
            "end_line": 92,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"EngineManager: Starting ignition sequence.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Starting ignition sequence.\"",
                    "line": 63,
                    "raw_log_statement": "LOG_INFO(\"EngineManager: Starting ignition sequence.\")"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"EngineManager: Ignition aborted. Low fuel pressure.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Ignition aborted. Low fuel pressure.\"",
                    "line": 67,
                    "raw_log_statement": "LOG_ERROR(\"EngineManager: Ignition aborted. Low fuel pressure.\")"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"EngineManager: Fuel pressure OK for ignition.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Fuel pressure OK for ignition.\"",
                    "line": 71,
                    "raw_log_statement": "LOG_DEBUG(\"EngineManager: Fuel pressure OK for ignition.\")"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"EngineManager: Ignition attempt %d...\", i + 1",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Ignition attempt %d...\", i + 1",
                    "line": 74,
                    "raw_log_statement": "LOG_DEBUG(\"EngineManager: Ignition attempt %d...\", i + 1)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"EngineManager: Engine crank detected. RPM: %d\", current_rpm_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Engine crank detected. RPM: %d\", current_rpm_",
                    "line": 79,
                    "raw_log_statement": "LOG_INFO(\"EngineManager: Engine crank detected. RPM: %d\", current_rpm_)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"EngineManager: Initial fuel injected. Engine should start.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Initial fuel injected. Engine should start.\"",
                    "line": 81,
                    "raw_log_statement": "LOG_INFO(\"EngineManager: Initial fuel injected. Engine should start.\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"EngineManager: Initial fuel injection failed during ignition. Attempt %d\", i+1",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Initial fuel injection failed during ignition. Attempt %d\", i+1",
                    "line": 84,
                    "raw_log_statement": "LOG_WARNING(\"EngineManager: Initial fuel injection failed during ignition. Attempt %d\", i+1)"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"EngineManager: Ignition sequence failed after 3 attempts.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Ignition sequence failed after 3 attempts.\"",
                    "line": 88,
                    "raw_log_statement": "LOG_ERROR(\"EngineManager: Ignition sequence failed after 3 attempts.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "fuel_system_.checkFuelPressure()",
                    "callee_name_at_call_site": "checkFuelPressure",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control10FuelSystem17checkFuelPressureEv",
                    "callee_resolved_display_name": "ecu_powertrain_control::FuelSystem::checkFuelPressure",
                    "line": 66
                },
                {
                    "callee_expression": "fuel_system_.injectFuel(1, 5.0)",
                    "callee_name_at_call_site": "injectFuel",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control10FuelSystem10injectFuelEid",
                    "callee_resolved_display_name": "ecu_powertrain_control::FuelSystem::injectFuel",
                    "line": 80
                }
            ]
        },
        {
            "function_id_key": "_ZN22ecu_powertrain_control13EngineManager16checkOilPressureEv",
            "display_signature": "ecu_powertrain_control::checkOilPressure",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/engine_manager.cpp",
            "line": 94,
            "end_line": 104,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"EngineManager: Checking oil pressure.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Checking oil pressure.\"",
                    "line": 95,
                    "raw_log_statement": "LOG_DEBUG(\"EngineManager: Checking oil pressure.\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"EngineManager: Low oil pressure detected!\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Low oil pressure detected!\"",
                    "line": 99,
                    "raw_log_statement": "LOG_WARNING(\"EngineManager: Low oil pressure detected!\")"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN22ecu_powertrain_control13EngineManager11startEngineEv",
            "display_signature": "ecu_powertrain_control::startEngine",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/engine_manager.cpp",
            "line": 106,
            "end_line": 154,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"EngineManager: Received start engine request.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Received start engine request.\"",
                    "line": 107,
                    "raw_log_statement": "LOG_INFO(\"EngineManager: Received start engine request.\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"EngineManager: Engine is already running. RPM: %d\", current_rpm_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Engine is already running. RPM: %d\", current_rpm_",
                    "line": 109,
                    "raw_log_statement": "LOG_WARNING(\"EngineManager: Engine is already running. RPM: %d\", current_rpm_)"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"EngineManager: Engine is already in starting sequence.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Engine is already in starting sequence.\"",
                    "line": 113,
                    "raw_log_statement": "LOG_WARNING(\"EngineManager: Engine is already in starting sequence.\")"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"EngineManager: Current engine temperature: %.1f C\", engine_temperature_celsius_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Current engine temperature: %.1f C\", engine_temperature_celsius_",
                    "line": 117,
                    "raw_log_statement": "LOG_DEBUG(\"EngineManager: Current engine temperature: %.1f C\", engine_temperature_celsius_)"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"EngineManager: Cannot start engine. Overheated! Temp: %.1f C\", engine_temperature_celsius_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Cannot start engine. Overheated! Temp: %.1f C\", engine_temperature_celsius_",
                    "line": 119,
                    "raw_log_statement": "LOG_ERROR(\"EngineManager: Cannot start engine. Overheated! Temp: %.1f C\", engine_temperature_celsius_)"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"EngineManager: Cannot start engine due to system power issues.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Cannot start engine due to system power issues.\"",
                    "line": 127,
                    "raw_log_statement": "LOG_ERROR(\"EngineManager: Cannot start engine due to system power issues.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"EngineManager: Engine started successfully. Idling at %d RPM.\", current_rpm_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Engine started successfully. Idling at %d RPM.\", current_rpm_",
                    "line": 138,
                    "raw_log_statement": "LOG_INFO(\"EngineManager: Engine started successfully. Idling at %d RPM.\", current_rpm_)"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"EngineManager: Engine started but low oil pressure detected! Risk of damage.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Engine started but low oil pressure detected! Risk of damage.\"",
                    "line": 142,
                    "raw_log_statement": "LOG_ERROR(\"EngineManager: Engine started but low oil pressure detected! Risk of damage.\")"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"EngineManager: Failed to start engine.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Failed to start engine.\"",
                    "line": 150,
                    "raw_log_statement": "LOG_ERROR(\"EngineManager: Failed to start engine.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "reportCriticalFault(\"Engine Overheat on Start Attempt\")",
                    "callee_name_at_call_site": "reportCriticalFault",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control13EngineManager19reportCriticalFaultERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE",
                    "callee_resolved_display_name": "ecu_powertrain_control::EngineManager::reportCriticalFault",
                    "line": 120
                },
                {
                    "callee_expression": "checkSystemPower()",
                    "callee_name_at_call_site": "checkSystemPower",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control13EngineManager16checkSystemPowerEv",
                    "callee_resolved_display_name": "ecu_powertrain_control::checkSystemPower",
                    "line": 126
                },
                {
                    "callee_expression": "fuel_system_.primePump()",
                    "callee_name_at_call_site": "primePump",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control10FuelSystem9primePumpEv",
                    "callee_resolved_display_name": "ecu_powertrain_control::FuelSystem::primePump",
                    "line": 132
                },
                {
                    "callee_expression": "performIgnitionSequence()",
                    "callee_name_at_call_site": "performIgnitionSequence",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control13EngineManager23performIgnitionSequenceEv",
                    "callee_resolved_display_name": "ecu_powertrain_control::performIgnitionSequence",
                    "line": 134
                },
                {
                    "callee_expression": "checkOilPressure()",
                    "callee_name_at_call_site": "checkOilPressure",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control13EngineManager16checkOilPressureEv",
                    "callee_resolved_display_name": "ecu_powertrain_control::checkOilPressure",
                    "line": 141
                },
                {
                    "callee_expression": "reportCriticalFault(\"Low oil pressure after start\")",
                    "callee_name_at_call_site": "reportCriticalFault",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control13EngineManager19reportCriticalFaultERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE",
                    "callee_resolved_display_name": "ecu_powertrain_control::EngineManager::reportCriticalFault",
                    "line": 145
                }
            ]
        },
        {
            "function_id_key": "_ZN22ecu_powertrain_control13EngineManager10stopEngineEv",
            "display_signature": "ecu_powertrain_control::stopEngine",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/engine_manager.cpp",
            "line": 156,
            "end_line": 188,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"EngineManager: Received stop engine request.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Received stop engine request.\"",
                    "line": 157,
                    "raw_log_statement": "LOG_INFO(\"EngineManager: Received stop engine request.\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"EngineManager: Engine is already stopped.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Engine is already stopped.\"",
                    "line": 159,
                    "raw_log_statement": "LOG_WARNING(\"EngineManager: Engine is already stopped.\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"EngineManager: Engine is already in stopping sequence.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Engine is already in stopping sequence.\"",
                    "line": 163,
                    "raw_log_statement": "LOG_WARNING(\"EngineManager: Engine is already in stopping sequence.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"EngineManager: Initiating engine shutdown sequence. Current RPM: %d\", current_rpm_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Initiating engine shutdown sequence. Current RPM: %d\", current_rpm_",
                    "line": 168,
                    "raw_log_statement": "LOG_INFO(\"EngineManager: Initiating engine shutdown sequence. Current RPM: %d\", current_rpm_)"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"EngineManager: Engine decelerating. RPM: %d\", current_rpm_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Engine decelerating. RPM: %d\", current_rpm_",
                    "line": 176,
                    "raw_log_statement": "LOG_DEBUG(\"EngineManager: Engine decelerating. RPM: %d\", current_rpm_)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"EngineManager: Cutting fuel supply (simulated).\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Cutting fuel supply (simulated).\"",
                    "line": 179,
                    "raw_log_statement": "LOG_INFO(\"EngineManager: Cutting fuel supply (simulated).\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"EngineManager: Engine stopped successfully.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Engine stopped successfully.\"",
                    "line": 186,
                    "raw_log_statement": "LOG_INFO(\"EngineManager: Engine stopped successfully.\")"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN22ecu_powertrain_control13EngineManager12setTargetRPMEi",
            "display_signature": "ecu_powertrain_control::setTargetRPM",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/engine_manager.cpp",
            "line": 190,
            "end_line": 217,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"EngineManager: Setting target RPM to %d.\", rpm",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Setting target RPM to %d.\", rpm",
                    "line": 191,
                    "raw_log_statement": "LOG_INFO(\"EngineManager: Setting target RPM to %d.\", rpm)"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"EngineManager: Cannot set target RPM. Engine not running. Status: %d\", static_cast<int>(current_status_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Cannot set target RPM. Engine not running. Status: %d\", static_cast<int>(current_status_)",
                    "line": 193,
                    "raw_log_statement": "LOG_WARNING(\"EngineManager: Cannot set target RPM. Engine not running. Status: %d\", static_cast<int>(current_status_))"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"EngineManager: Invalid target RPM: %d. Must be between 0 and 7000.\", rpm",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Invalid target RPM: %d. Must be between 0 and 7000.\", rpm",
                    "line": 197,
                    "raw_log_statement": "LOG_ERROR(\"EngineManager: Invalid target RPM: %d. Must be between 0 and 7000.\", rpm)"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"EngineManager: Target RPM updated. Simulating RPM change...\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Target RPM updated. Simulating RPM change...\"",
                    "line": 202,
                    "raw_log_statement": "LOG_DEBUG(\"EngineManager: Target RPM updated. Simulating RPM change...\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"EngineManager: RPM changed from %d to %d (target: %d).\", old_rpm, current_rpm_, target_rpm_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: RPM changed from %d to %d (target: %d).\", old_rpm, current_rpm_, target_rpm_",
                    "line": 212,
                    "raw_log_statement": "LOG_INFO(\"EngineManager: RPM changed from %d to %d (target: %d).\", old_rpm, current_rpm_, target_rpm_)"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "updateEngineParameters()",
                    "callee_name_at_call_site": "updateEngineParameters",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control13EngineManager22updateEngineParametersEv",
                    "callee_resolved_display_name": "ecu_powertrain_control::EngineManager::updateEngineParameters",
                    "line": 215
                }
            ]
        },
        {
            "function_id_key": "_ZNK22ecu_powertrain_control13EngineManager13getCurrentRPMEv",
            "display_signature": "ecu_powertrain_control::getCurrentRPM",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/engine_manager.cpp",
            "line": 219,
            "end_line": 222,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"EngineManager: Current RPM requested: %d\", current_rpm_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Current RPM requested: %d\", current_rpm_",
                    "line": 220,
                    "raw_log_statement": "LOG_DEBUG(\"EngineManager: Current RPM requested: %d\", current_rpm_)"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZNK22ecu_powertrain_control13EngineManager20getEngineTemperatureEv",
            "display_signature": "ecu_powertrain_control::getEngineTemperature",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/engine_manager.cpp",
            "line": 224,
            "end_line": 227,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"EngineManager: Engine temperature requested: %.1f C\", engine_temperature_celsius_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Engine temperature requested: %.1f C\", engine_temperature_celsius_",
                    "line": 225,
                    "raw_log_statement": "LOG_DEBUG(\"EngineManager: Engine temperature requested: %.1f C\", engine_temperature_celsius_)"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZNK22ecu_powertrain_control13EngineManager14getEngineStateEv",
            "display_signature": "ecu_powertrain_control::getEngineState",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/engine_manager.cpp",
            "line": 229,
            "end_line": 236,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"EngineManager: Engine state requested.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Engine state requested.\"",
                    "line": 230,
                    "raw_log_statement": "LOG_DEBUG(\"EngineManager: Engine state requested.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "state",
                    "callee_name_at_call_site": "VehicleState",
                    "callee_resolved_key": "_ZN12VehicleStateC1Ev",
                    "callee_resolved_display_name": "VehicleState::VehicleState",
                    "line": 231
                },
                {
                    "callee_expression": "state",
                    "callee_name_at_call_site": "(anonymous_call)",
                    "callee_resolved_key": null,
                    "callee_resolved_display_name": "(unknown_callee_expr)",
                    "line": 235
                }
            ]
        },
        {
            "function_id_key": "_ZN22ecu_powertrain_control13EngineManager22updateEngineParametersEv",
            "display_signature": "ecu_powertrain_control::updateEngineParameters",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/engine_manager.cpp",
            "line": 238,
            "end_line": 275,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"EngineManager: Updating engine parameters based on current RPM and load (simulated).\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Updating engine parameters based on current RPM and load (simulated).\"",
                    "line": 239,
                    "raw_log_statement": "LOG_DEBUG(\"EngineManager: Updating engine parameters based on current RPM and load (simulated).\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"EngineManager: Engine temperature high: %.1f C\", engine_temperature_celsius_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Engine temperature high: %.1f C\", engine_temperature_celsius_",
                    "line": 246,
                    "raw_log_statement": "LOG_WARNING(\"EngineManager: Engine temperature high: %.1f C\", engine_temperature_celsius_)"
                },
                {
                    "level": "FATAL",
                    "log_format_string": "\"EngineManager: CRITICAL OVERHEAT! %.1f C. Shutting down immediately!\", engine_temperature_celsius_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: CRITICAL OVERHEAT! %.1f C. Shutting down immediately!\", engine_temperature_celsius_",
                    "line": 249,
                    "raw_log_statement": "LOG_FATAL(\"EngineManager: CRITICAL OVERHEAT! %.1f C. Shutting down immediately!\", engine_temperature_celsius_)"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"EngineManager: Fuel injection failed for cylinder %d during update.\", cyl",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Fuel injection failed for cylinder %d during update.\", cyl",
                    "line": 264,
                    "raw_log_statement": "LOG_WARNING(\"EngineManager: Fuel injection failed for cylinder %d during update.\", cyl)"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "reportCriticalFault(\"Engine Overheat Critical\")",
                    "callee_name_at_call_site": "reportCriticalFault",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control13EngineManager19reportCriticalFaultERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE",
                    "callee_resolved_display_name": "ecu_powertrain_control::EngineManager::reportCriticalFault",
                    "line": 248
                },
                {
                    "callee_expression": "fuel_system_.injectFuel(cyl, fuel_amount / 4.0)",
                    "callee_name_at_call_site": "injectFuel",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control10FuelSystem10injectFuelEid",
                    "callee_resolved_display_name": "ecu_powertrain_control::FuelSystem::injectFuel",
                    "line": 263
                }
            ]
        },
        {
            "function_id_key": "_ZN22ecu_powertrain_control13EngineManager19reportCriticalFaultERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE",
            "display_signature": "ecu_powertrain_control::reportCriticalFault",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/engine_manager.cpp",
            "line": 277,
            "end_line": 284,
            "logs_in_order": [
                {
                    "level": "ERROR",
                    "log_format_string": "\"EngineManager: CRITICAL FAULT DETECTED: %s. Current RPM: %d, Temp: %.1f C\",         fault_description.c_str(), current_rpm_, engine_temperature_celsius_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: CRITICAL FAULT DETECTED: %s. Current RPM: %d, Temp: %.1f C\",         fault_description.c_str(), current_rpm_, engine_temperature_celsius_",
                    "line": 278,
                    "raw_log_statement": "LOG_ERROR(\"EngineManager: CRITICAL FAULT DETECTED: %s. Current RPM: %d, Temp: %.1f C\",         fault_description.c_str(), current_rpm_, engine_temperature_celsius_)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"EngineManager: Engine status set to FAULT due to: %s\", fault_description.c_str()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"EngineManager: Engine status set to FAULT due to: %s\", fault_description.c_str()",
                    "line": 283,
                    "raw_log_statement": "LOG_INFO(\"EngineManager: Engine status set to FAULT due to: %s\", fault_description.c_str())"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN22ecu_powertrain_control10FuelSystemC1Ev",
            "display_signature": "ecu_powertrain_control::FuelSystem",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/fuel_system.cpp",
            "line": 8,
            "end_line": 10,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"FuelSystem: Initializing. Fuel level: %.1f%%\", current_fuel_level_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"FuelSystem: Initializing. Fuel level: %.1f%%\", current_fuel_level_",
                    "line": 9,
                    "raw_log_statement": "LOG_INFO(\"FuelSystem: Initializing. Fuel level: %.1f%%\", current_fuel_level_)"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN22ecu_powertrain_control10FuelSystemD1Ev",
            "display_signature": "ecu_powertrain_control::~FuelSystem",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/fuel_system.cpp",
            "line": 12,
            "end_line": 14,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"FuelSystem: Shutting down.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"FuelSystem: Shutting down.\"",
                    "line": 13,
                    "raw_log_statement": "LOG_INFO(\"FuelSystem: Shutting down.\")"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN22ecu_powertrain_control10FuelSystem9primePumpEv",
            "display_signature": "ecu_powertrain_control::primePump",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/fuel_system.cpp",
            "line": 16,
            "end_line": 22,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"FuelSystem: Priming fuel pump...\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"FuelSystem: Priming fuel pump...\"",
                    "line": 17,
                    "raw_log_statement": "LOG_DEBUG(\"FuelSystem: Priming fuel pump...\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"FuelSystem: Fuel pump primed.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"FuelSystem: Fuel pump primed.\"",
                    "line": 21,
                    "raw_log_statement": "LOG_INFO(\"FuelSystem: Fuel pump primed.\")"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN22ecu_powertrain_control10FuelSystem17checkFuelPressureEv",
            "display_signature": "ecu_powertrain_control::checkFuelPressure",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/fuel_system.cpp",
            "line": 24,
            "end_line": 38,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"FuelSystem: Checking fuel pressure.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"FuelSystem: Checking fuel pressure.\"",
                    "line": 25,
                    "raw_log_statement": "LOG_DEBUG(\"FuelSystem: Checking fuel pressure.\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"FuelSystem: Fuel pump not primed, cannot check pressure accurately.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"FuelSystem: Fuel pump not primed, cannot check pressure accurately.\"",
                    "line": 27,
                    "raw_log_statement": "LOG_WARNING(\"FuelSystem: Fuel pump not primed, cannot check pressure accurately.\")"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"FuelSystem: Low fuel pressure detected: %.2f PSI. Required: %.2f PSI\", current_pressure, required_pressure_psi_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"FuelSystem: Low fuel pressure detected: %.2f PSI. Required: %.2f PSI\", current_pressure, required_pressure_psi_",
                    "line": 33,
                    "raw_log_statement": "LOG_ERROR(\"FuelSystem: Low fuel pressure detected: %.2f PSI. Required: %.2f PSI\", current_pressure, required_pressure_psi_)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"FuelSystem: Fuel pressure OK: %.2f PSI\", current_pressure",
                    "log_arguments": [],
                    "message_args_str_combined": "\"FuelSystem: Fuel pressure OK: %.2f PSI\", current_pressure",
                    "line": 36,
                    "raw_log_statement": "LOG_INFO(\"FuelSystem: Fuel pressure OK: %.2f PSI\", current_pressure)"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN22ecu_powertrain_control10FuelSystem10injectFuelEid",
            "display_signature": "ecu_powertrain_control::injectFuel",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/fuel_system.cpp",
            "line": 40,
            "end_line": 66,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"FuelSystem: Attempting to inject %.2f ml of fuel into cylinder %d.\", amount_ml, cylinder_id",
                    "log_arguments": [],
                    "message_args_str_combined": "\"FuelSystem: Attempting to inject %.2f ml of fuel into cylinder %d.\", amount_ml, cylinder_id",
                    "line": 41,
                    "raw_log_statement": "LOG_DEBUG(\"FuelSystem: Attempting to inject %.2f ml of fuel into cylinder %d.\", amount_ml, cylinder_id)"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"FuelSystem: Cannot inject fuel. Fuel tank empty!\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"FuelSystem: Cannot inject fuel. Fuel tank empty!\"",
                    "line": 44,
                    "raw_log_statement": "LOG_ERROR(\"FuelSystem: Cannot inject fuel. Fuel tank empty!\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"FuelSystem: Fuel pump not primed. Priming now.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"FuelSystem: Fuel pump not primed. Priming now.\"",
                    "line": 49,
                    "raw_log_statement": "LOG_WARNING(\"FuelSystem: Fuel pump not primed. Priming now.\")"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"FuelSystem: Failed to prime pump. Cannot inject fuel for cylinder %d.\", cylinder_id",
                    "log_arguments": [],
                    "message_args_str_combined": "\"FuelSystem: Failed to prime pump. Cannot inject fuel for cylinder %d.\", cylinder_id",
                    "line": 52,
                    "raw_log_statement": "LOG_ERROR(\"FuelSystem: Failed to prime pump. Cannot inject fuel for cylinder %d.\", cylinder_id)"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"FuelSystem: Fuel injection aborted for cylinder %d due to low pressure.\", cylinder_id",
                    "log_arguments": [],
                    "message_args_str_combined": "\"FuelSystem: Fuel injection aborted for cylinder %d due to low pressure.\", cylinder_id",
                    "line": 58,
                    "raw_log_statement": "LOG_ERROR(\"FuelSystem: Fuel injection aborted for cylinder %d due to low pressure.\", cylinder_id)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"FuelSystem: Injecting %.2f ml fuel into cylinder %d.\", amount_ml, cylinder_id",
                    "log_arguments": [],
                    "message_args_str_combined": "\"FuelSystem: Injecting %.2f ml fuel into cylinder %d.\", amount_ml, cylinder_id",
                    "line": 63,
                    "raw_log_statement": "LOG_INFO(\"FuelSystem: Injecting %.2f ml fuel into cylinder %d.\", amount_ml, cylinder_id)"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "primePump()",
                    "callee_name_at_call_site": "primePump",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control10FuelSystem9primePumpEv",
                    "callee_resolved_display_name": "ecu_powertrain_control::primePump",
                    "line": 50
                },
                {
                    "callee_expression": "checkFuelPressure()",
                    "callee_name_at_call_site": "checkFuelPressure",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control10FuelSystem17checkFuelPressureEv",
                    "callee_resolved_display_name": "ecu_powertrain_control::checkFuelPressure",
                    "line": 57
                },
                {
                    "callee_expression": "simulateFuelConsumption(amount_ml)",
                    "callee_name_at_call_site": "simulateFuelConsumption",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control10FuelSystem23simulateFuelConsumptionEd",
                    "callee_resolved_display_name": "ecu_powertrain_control::FuelSystem::simulateFuelConsumption",
                    "line": 64
                }
            ]
        },
        {
            "function_id_key": "_ZNK22ecu_powertrain_control10FuelSystem12getFuelLevelEv",
            "display_signature": "ecu_powertrain_control::getFuelLevel",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/fuel_system.cpp",
            "line": 68,
            "end_line": 71,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"FuelSystem: Current fuel level requested: %.1f%%\", current_fuel_level_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"FuelSystem: Current fuel level requested: %.1f%%\", current_fuel_level_",
                    "line": 69,
                    "raw_log_statement": "LOG_DEBUG(\"FuelSystem: Current fuel level requested: %.1f%%\", current_fuel_level_)"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN22ecu_powertrain_control10FuelSystem23simulateFuelConsumptionEd",
            "display_signature": "ecu_powertrain_control::simulateFuelConsumption",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/fuel_system.cpp",
            "line": 73,
            "end_line": 79,
            "logs_in_order": [],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN22ecu_powertrain_control19TransmissionManagerC1EPNS_13EngineManagerE",
            "display_signature": "ecu_powertrain_control::TransmissionManager",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/transmission_manager.cpp",
            "line": 10,
            "end_line": 25,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"TransmissionManager: Initializing. Mode: PARK, Gear: %d\", current_gear_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Initializing. Mode: PARK, Gear: %d\", current_gear_",
                    "line": 20,
                    "raw_log_statement": "LOG_INFO(\"TransmissionManager: Initializing. Mode: PARK, Gear: %d\", current_gear_)"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"TransmissionManager: EngineManager instance is NULL. Some functionalities might be limited.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: EngineManager instance is NULL. Some functionalities might be limited.\"",
                    "line": 22,
                    "raw_log_statement": "LOG_WARNING(\"TransmissionManager: EngineManager instance is NULL. Some functionalities might be limited.\")"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN22ecu_powertrain_control19TransmissionManagerD1Ev",
            "display_signature": "ecu_powertrain_control::~TransmissionManager",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/transmission_manager.cpp",
            "line": 27,
            "end_line": 30,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"TransmissionManager: Shutting down. Mode: %d, Gear: %d\",              static_cast<int>(current_mode_), current_gear_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Shutting down. Mode: %d, Gear: %d\",              static_cast<int>(current_mode_), current_gear_",
                    "line": 28,
                    "raw_log_statement": "LOG_INFO(\"TransmissionManager: Shutting down. Mode: %d, Gear: %d\",              static_cast<int>(current_mode_), current_gear_)"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZNK22ecu_powertrain_control19TransmissionManager14canShiftToModeENS_16TransmissionModeERK12VehicleState",
            "display_signature": "ecu_powertrain_control::canShiftToMode",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/transmission_manager.cpp",
            "line": 32,
            "end_line": 85,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"TransmissionManager: Checking if can shift from mode %d to %d. Speed: %.1f km/h\",               static_cast<int>(current_mode_), static_cast<int>(new_mode), vehicle_state.speed_kmh",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Checking if can shift from mode %d to %d. Speed: %.1f km/h\",               static_cast<int>(current_mode_), static_cast<int>(new_mode), vehicle_state.speed_kmh",
                    "line": 33,
                    "raw_log_statement": "LOG_DEBUG(\"TransmissionManager: Checking if can shift from mode %d to %d. Speed: %.1f km/h\",               static_cast<int>(current_mode_), static_cast<int>(new_mode), vehicle_state.speed_kmh)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"TransmissionManager: Already in requested mode %d.\", static_cast<int>(new_mode)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Already in requested mode %d.\", static_cast<int>(new_mode)",
                    "line": 37,
                    "raw_log_statement": "LOG_INFO(\"TransmissionManager: Already in requested mode %d.\", static_cast<int>(new_mode))"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"TransmissionManager: Cannot shift to PARK. Vehicle speed %.1f km/h is too high.\", vehicle_state.speed_kmh",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Cannot shift to PARK. Vehicle speed %.1f km/h is too high.\", vehicle_state.speed_kmh",
                    "line": 45,
                    "raw_log_statement": "LOG_WARNING(\"TransmissionManager: Cannot shift to PARK. Vehicle speed %.1f km/h is too high.\", vehicle_state.speed_kmh)"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"TransmissionManager: Cannot shift to REVERSE. Vehicle speed %.1f km/h is too high.\", vehicle_state.speed_kmh",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Cannot shift to REVERSE. Vehicle speed %.1f km/h is too high.\", vehicle_state.speed_kmh",
                    "line": 52,
                    "raw_log_statement": "LOG_WARNING(\"TransmissionManager: Cannot shift to REVERSE. Vehicle speed %.1f km/h is too high.\", vehicle_state.speed_kmh)"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"TransmissionManager: Cannot shift to REVERSE from DRIVE at %.1f km/h.\", vehicle_state.speed_kmh",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Cannot shift to REVERSE from DRIVE at %.1f km/h.\", vehicle_state.speed_kmh",
                    "line": 57,
                    "raw_log_statement": "LOG_WARNING(\"TransmissionManager: Cannot shift to REVERSE from DRIVE at %.1f km/h.\", vehicle_state.speed_kmh)"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"TransmissionManager: Cannot shift to DRIVE/SPORT from REVERSE at %.1f km/h.\", vehicle_state.speed_kmh",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Cannot shift to DRIVE/SPORT from REVERSE at %.1f km/h.\", vehicle_state.speed_kmh",
                    "line": 66,
                    "raw_log_statement": "LOG_WARNING(\"TransmissionManager: Cannot shift to DRIVE/SPORT from REVERSE at %.1f km/h.\", vehicle_state.speed_kmh)"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"TransmissionManager: Can only shift to MANUAL from DRIVE or SPORT. Current mode: %d\", static_cast<int>(current_mode_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Can only shift to MANUAL from DRIVE or SPORT. Current mode: %d\", static_cast<int>(current_mode_)",
                    "line": 75,
                    "raw_log_statement": "LOG_WARNING(\"TransmissionManager: Can only shift to MANUAL from DRIVE or SPORT. Current mode: %d\", static_cast<int>(current_mode_))"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"TransmissionManager: Unknown target mode %d for shift check.\", static_cast<int>(new_mode)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Unknown target mode %d for shift check.\", static_cast<int>(new_mode)",
                    "line": 80,
                    "raw_log_statement": "LOG_ERROR(\"TransmissionManager: Unknown target mode %d for shift check.\", static_cast<int>(new_mode))"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"TransmissionManager: Mode shift to %d is permissible.\", static_cast<int>(new_mode)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Mode shift to %d is permissible.\", static_cast<int>(new_mode)",
                    "line": 83,
                    "raw_log_statement": "LOG_INFO(\"TransmissionManager: Mode shift to %d is permissible.\", static_cast<int>(new_mode))"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN22ecu_powertrain_control19TransmissionManager19setTransmissionModeENS_16TransmissionModeE",
            "display_signature": "ecu_powertrain_control::setTransmissionMode",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/transmission_manager.cpp",
            "line": 87,
            "end_line": 143,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"TransmissionManager: Request to set transmission mode to %d.\", static_cast<int>(mode)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Request to set transmission mode to %d.\", static_cast<int>(mode)",
                    "line": 88,
                    "raw_log_statement": "LOG_INFO(\"TransmissionManager: Request to set transmission mode to %d.\", static_cast<int>(mode))"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"TransmissionManager: Cannot change mode. Gear shift currently in progress.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Cannot change mode. Gear shift currently in progress.\"",
                    "line": 90,
                    "raw_log_statement": "LOG_WARNING(\"TransmissionManager: Cannot change mode. Gear shift currently in progress.\")"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"TransmissionManager: Mode change to %d denied by safety checks.\", static_cast<int>(mode)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Mode change to %d denied by safety checks.\", static_cast<int>(mode)",
                    "line": 101,
                    "raw_log_statement": "LOG_ERROR(\"TransmissionManager: Mode change to %d denied by safety checks.\", static_cast<int>(mode))"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"TransmissionManager: Transmission mode change to %d initiated. Will apply on next update cycle.\", static_cast<int>(requested_mode_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Transmission mode change to %d initiated. Will apply on next update cycle.\", static_cast<int>(requested_mode_)",
                    "line": 106,
                    "raw_log_statement": "LOG_INFO(\"TransmissionManager: Transmission mode change to %d initiated. Will apply on next update cycle.\", static_cast<int>(requested_mode_))"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"TransmissionManager: Mode changed from %d to %d.\", static_cast<int>(old_mode), static_cast<int>(current_mode_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Mode changed from %d to %d.\", static_cast<int>(old_mode), static_cast<int>(current_mode_)",
                    "line": 113,
                    "raw_log_statement": "LOG_INFO(\"TransmissionManager: Mode changed from %d to %d.\", static_cast<int>(old_mode), static_cast<int>(current_mode_))"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"TransmissionManager: Engaged PARK.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Engaged PARK.\"",
                    "line": 118,
                    "raw_log_statement": "LOG_INFO(\"TransmissionManager: Engaged PARK.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"TransmissionManager: Engaged REVERSE (Gear %d).\", current_gear_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Engaged REVERSE (Gear %d).\", current_gear_",
                    "line": 122,
                    "raw_log_statement": "LOG_INFO(\"TransmissionManager: Engaged REVERSE (Gear %d).\", current_gear_)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"TransmissionManager: Engaged NEUTRAL (Gear %d).\", current_gear_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Engaged NEUTRAL (Gear %d).\", current_gear_",
                    "line": 126,
                    "raw_log_statement": "LOG_INFO(\"TransmissionManager: Engaged NEUTRAL (Gear %d).\", current_gear_)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"TransmissionManager: Engaged %s mode, starting in Gear %d.\",                      (current_mode_ == TransmissionMode::DRIVE ? \"DRIVE\" : \"SPORT\"), current_gear_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Engaged %s mode, starting in Gear %d.\",                      (current_mode_ == TransmissionMode::DRIVE ? \"DRIVE\" : \"SPORT\"), current_gear_",
                    "line": 131,
                    "raw_log_statement": "LOG_INFO(\"TransmissionManager: Engaged %s mode, starting in Gear %d.\",                      (current_mode_ == TransmissionMode::DRIVE ? \"DRIVE\" : \"SPORT\"), current_gear_)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"TransmissionManager: Engaged MANUAL mode, current Gear %d.\", current_gear_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Engaged MANUAL mode, current Gear %d.\", current_gear_",
                    "line": 139,
                    "raw_log_statement": "LOG_INFO(\"TransmissionManager: Engaged MANUAL mode, current Gear %d.\", current_gear_)"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "temp_state",
                    "callee_name_at_call_site": "VehicleState",
                    "callee_resolved_key": "_ZN12VehicleStateC1Ev",
                    "callee_resolved_display_name": "VehicleState::VehicleState",
                    "line": 97
                },
                {
                    "callee_expression": "engine_manager_->getEngineState()",
                    "callee_name_at_call_site": "getEngineState",
                    "callee_resolved_key": "_ZNK22ecu_powertrain_control13EngineManager14getEngineStateEv",
                    "callee_resolved_display_name": "ecu_powertrain_control::EngineManager::getEngineState",
                    "line": 98
                },
                {
                    "callee_expression": "canShiftToMode(mode, temp_state)",
                    "callee_name_at_call_site": "canShiftToMode",
                    "callee_resolved_key": "_ZNK22ecu_powertrain_control19TransmissionManager14canShiftToModeENS_16TransmissionModeERK12VehicleState",
                    "callee_resolved_display_name": "ecu_powertrain_control::canShiftToMode",
                    "line": 100
                }
            ]
        },
        {
            "function_id_key": "_ZN22ecu_powertrain_control19TransmissionManager16performGearShiftEi",
            "display_signature": "ecu_powertrain_control::performGearShift",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/transmission_manager.cpp",
            "line": 145,
            "end_line": 198,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"TransmissionManager: Attempting to shift from gear %d to gear %d.\", current_gear_, to_gear",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Attempting to shift from gear %d to gear %d.\", current_gear_, to_gear",
                    "line": 146,
                    "raw_log_statement": "LOG_INFO(\"TransmissionManager: Attempting to shift from gear %d to gear %d.\", current_gear_, to_gear)"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"TransmissionManager: Requesting torque reduction from EngineManager for gear shift.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Requesting torque reduction from EngineManager for gear shift.\"",
                    "line": 152,
                    "raw_log_statement": "LOG_DEBUG(\"TransmissionManager: Requesting torque reduction from EngineManager for gear shift.\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"TransmissionManager: EngineManager not available. Cannot request torque reduction for shift.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: EngineManager not available. Cannot request torque reduction for shift.\"",
                    "line": 158,
                    "raw_log_statement": "LOG_WARNING(\"TransmissionManager: EngineManager not available. Cannot request torque reduction for shift.\")"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"TransmissionManager: Shifting to gear %d...\", target_gear_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Shifting to gear %d...\", target_gear_",
                    "line": 162,
                    "raw_log_statement": "LOG_DEBUG(\"TransmissionManager: Shifting to gear %d...\", target_gear_)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"TransmissionManager: Shift to gear %d successful and SMOOTH.\", current_gear_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Shift to gear %d successful and SMOOTH.\", current_gear_",
                    "line": 174,
                    "raw_log_statement": "LOG_INFO(\"TransmissionManager: Shift to gear %d successful and SMOOTH.\", current_gear_)"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"TransmissionManager: Shift to gear %d complete but %s.\",                     current_gear_, (quality == GearShiftQuality::ACCEPTABLE ? \"ACCEPTABLE\" : \"ROUGH\")",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Shift to gear %d complete but %s.\",                     current_gear_, (quality == GearShiftQuality::ACCEPTABLE ? \"ACCEPTABLE\" : \"ROUGH\")",
                    "line": 178,
                    "raw_log_statement": "LOG_WARNING(\"TransmissionManager: Shift to gear %d complete but %s.\",                     current_gear_, (quality == GearShiftQuality::ACCEPTABLE ? \"ACCEPTABLE\" : \"ROUGH\"))"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"TransmissionManager: FAILED to shift to gear %d! Staying in gear %d.\", target_gear_, current_gear_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: FAILED to shift to gear %d! Staying in gear %d.\", target_gear_, current_gear_",
                    "line": 182,
                    "raw_log_statement": "LOG_ERROR(\"TransmissionManager: FAILED to shift to gear %d! Staying in gear %d.\", target_gear_, current_gear_)"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"TransmissionManager: Signaling EngineManager to restore torque.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Signaling EngineManager to restore torque.\"",
                    "line": 191,
                    "raw_log_statement": "LOG_DEBUG(\"TransmissionManager: Signaling EngineManager to restore torque.\")"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZNK22ecu_powertrain_control19TransmissionManager12canShiftGearEbRK12VehicleState",
            "display_signature": "ecu_powertrain_control::canShiftGear",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/transmission_manager.cpp",
            "line": 200,
            "end_line": 236,
            "logs_in_order": [
                {
                    "level": "WARNING",
                    "log_format_string": "\"TransmissionManager: Cannot shift gears. Not in DRIVE, SPORT, or MANUAL mode. Current mode: %d\",                     static_cast<int>(current_mode_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Cannot shift gears. Not in DRIVE, SPORT, or MANUAL mode. Current mode: %d\",                     static_cast<int>(current_mode_)",
                    "line": 204,
                    "raw_log_statement": "LOG_WARNING(\"TransmissionManager: Cannot shift gears. Not in DRIVE, SPORT, or MANUAL mode. Current mode: %d\",                     static_cast<int>(current_mode_))"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"TransmissionManager: Already in highest gear (%d). Cannot upshift.\", current_gear_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Already in highest gear (%d). Cannot upshift.\", current_gear_",
                    "line": 213,
                    "raw_log_statement": "LOG_INFO(\"TransmissionManager: Already in highest gear (%d). Cannot upshift.\", current_gear_)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"TransmissionManager: Already in lowest gear (1). Cannot downshift further.\", current_gear_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Already in lowest gear (1). Cannot downshift further.\", current_gear_",
                    "line": 223,
                    "raw_log_statement": "LOG_INFO(\"TransmissionManager: Already in lowest gear (1). Cannot downshift further.\", current_gear_)"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"TransmissionManager: Gear shift to %d is permissible.\", next_gear",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Gear shift to %d is permissible.\", next_gear",
                    "line": 234,
                    "raw_log_statement": "LOG_DEBUG(\"TransmissionManager: Gear shift to %d is permissible.\", next_gear)"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "engine_manager_->getCurrentRPM()",
                    "callee_name_at_call_site": "getCurrentRPM",
                    "callee_resolved_key": "_ZNK22ecu_powertrain_control13EngineManager13getCurrentRPMEv",
                    "callee_resolved_display_name": "ecu_powertrain_control::EngineManager::getCurrentRPM",
                    "line": 217
                },
                {
                    "callee_expression": "engine_manager_->getCurrentRPM()",
                    "callee_name_at_call_site": "getCurrentRPM",
                    "callee_resolved_key": "_ZNK22ecu_powertrain_control13EngineManager13getCurrentRPMEv",
                    "callee_resolved_display_name": "ecu_powertrain_control::EngineManager::getCurrentRPM",
                    "line": 227
                }
            ]
        },
        {
            "function_id_key": "_ZN22ecu_powertrain_control19TransmissionManager7shiftUpEv",
            "display_signature": "ecu_powertrain_control::shiftUp",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/transmission_manager.cpp",
            "line": 238,
            "end_line": 257,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"TransmissionManager: Request to SHIFT UP from gear %d.\", current_gear_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Request to SHIFT UP from gear %d.\", current_gear_",
                    "line": 239,
                    "raw_log_statement": "LOG_INFO(\"TransmissionManager: Request to SHIFT UP from gear %d.\", current_gear_)"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"TransmissionManager: Cannot SHIFT UP. Another shift is already in progress.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Cannot SHIFT UP. Another shift is already in progress.\"",
                    "line": 241,
                    "raw_log_statement": "LOG_WARNING(\"TransmissionManager: Cannot SHIFT UP. Another shift is already in progress.\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"TransmissionManager: Manual SHIFT UP ignored. Not in MANUAL or SPORT mode.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Manual SHIFT UP ignored. Not in MANUAL or SPORT mode.\"",
                    "line": 245,
                    "raw_log_statement": "LOG_WARNING(\"TransmissionManager: Manual SHIFT UP ignored. Not in MANUAL or SPORT mode.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "temp_state",
                    "callee_name_at_call_site": "VehicleState",
                    "callee_resolved_key": "_ZN12VehicleStateC1Ev",
                    "callee_resolved_display_name": "VehicleState::VehicleState",
                    "line": 249
                },
                {
                    "callee_expression": "engine_manager_->getEngineState()",
                    "callee_name_at_call_site": "getEngineState",
                    "callee_resolved_key": "_ZNK22ecu_powertrain_control13EngineManager14getEngineStateEv",
                    "callee_resolved_display_name": "ecu_powertrain_control::EngineManager::getEngineState",
                    "line": 250
                },
                {
                    "callee_expression": "canShiftGear(true, temp_state)",
                    "callee_name_at_call_site": "canShiftGear",
                    "callee_resolved_key": "_ZNK22ecu_powertrain_control19TransmissionManager12canShiftGearEbRK12VehicleState",
                    "callee_resolved_display_name": "ecu_powertrain_control::canShiftGear",
                    "line": 252
                },
                {
                    "callee_expression": "performGearShift(current_gear_ + 1)",
                    "callee_name_at_call_site": "performGearShift",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control19TransmissionManager16performGearShiftEi",
                    "callee_resolved_display_name": "ecu_powertrain_control::performGearShift",
                    "line": 253
                }
            ]
        },
        {
            "function_id_key": "_ZN22ecu_powertrain_control19TransmissionManager9shiftDownEv",
            "display_signature": "ecu_powertrain_control::shiftDown",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/transmission_manager.cpp",
            "line": 259,
            "end_line": 278,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"TransmissionManager: Request to SHIFT DOWN from gear %d.\", current_gear_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Request to SHIFT DOWN from gear %d.\", current_gear_",
                    "line": 260,
                    "raw_log_statement": "LOG_INFO(\"TransmissionManager: Request to SHIFT DOWN from gear %d.\", current_gear_)"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"TransmissionManager: Cannot SHIFT DOWN. Another shift is already in progress.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Cannot SHIFT DOWN. Another shift is already in progress.\"",
                    "line": 262,
                    "raw_log_statement": "LOG_WARNING(\"TransmissionManager: Cannot SHIFT DOWN. Another shift is already in progress.\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"TransmissionManager: Manual SHIFT DOWN ignored. Not in MANUAL or SPORT mode.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Manual SHIFT DOWN ignored. Not in MANUAL or SPORT mode.\"",
                    "line": 266,
                    "raw_log_statement": "LOG_WARNING(\"TransmissionManager: Manual SHIFT DOWN ignored. Not in MANUAL or SPORT mode.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "temp_state",
                    "callee_name_at_call_site": "VehicleState",
                    "callee_resolved_key": "_ZN12VehicleStateC1Ev",
                    "callee_resolved_display_name": "VehicleState::VehicleState",
                    "line": 270
                },
                {
                    "callee_expression": "engine_manager_->getEngineState()",
                    "callee_name_at_call_site": "getEngineState",
                    "callee_resolved_key": "_ZNK22ecu_powertrain_control13EngineManager14getEngineStateEv",
                    "callee_resolved_display_name": "ecu_powertrain_control::EngineManager::getEngineState",
                    "line": 271
                },
                {
                    "callee_expression": "canShiftGear(false, temp_state)",
                    "callee_name_at_call_site": "canShiftGear",
                    "callee_resolved_key": "_ZNK22ecu_powertrain_control19TransmissionManager12canShiftGearEbRK12VehicleState",
                    "callee_resolved_display_name": "ecu_powertrain_control::canShiftGear",
                    "line": 273
                },
                {
                    "callee_expression": "performGearShift(current_gear_ - 1)",
                    "callee_name_at_call_site": "performGearShift",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control19TransmissionManager16performGearShiftEi",
                    "callee_resolved_display_name": "ecu_powertrain_control::performGearShift",
                    "line": 274
                }
            ]
        },
        {
            "function_id_key": "_ZN22ecu_powertrain_control19TransmissionManager14requestNeutralEv",
            "display_signature": "ecu_powertrain_control::requestNeutral",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/transmission_manager.cpp",
            "line": 280,
            "end_line": 290,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"TransmissionManager: Neutral requested explicitly.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Neutral requested explicitly.\"",
                    "line": 281,
                    "raw_log_statement": "LOG_INFO(\"TransmissionManager: Neutral requested explicitly.\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"TransmissionManager: Explicit request for NEUTRAL denied by safety checks.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Explicit request for NEUTRAL denied by safety checks.\"",
                    "line": 288,
                    "raw_log_statement": "LOG_WARNING(\"TransmissionManager: Explicit request for NEUTRAL denied by safety checks.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "temp_state",
                    "callee_name_at_call_site": "VehicleState",
                    "callee_resolved_key": "_ZN12VehicleStateC1Ev",
                    "callee_resolved_display_name": "VehicleState::VehicleState",
                    "line": 282
                },
                {
                    "callee_expression": "engine_manager_->getEngineState()",
                    "callee_name_at_call_site": "getEngineState",
                    "callee_resolved_key": "_ZNK22ecu_powertrain_control13EngineManager14getEngineStateEv",
                    "callee_resolved_display_name": "ecu_powertrain_control::EngineManager::getEngineState",
                    "line": 283
                },
                {
                    "callee_expression": "canShiftToMode(TransmissionMode::NEUTRAL, temp_state)",
                    "callee_name_at_call_site": "canShiftToMode",
                    "callee_resolved_key": "_ZNK22ecu_powertrain_control19TransmissionManager14canShiftToModeENS_16TransmissionModeERK12VehicleState",
                    "callee_resolved_display_name": "ecu_powertrain_control::canShiftToMode",
                    "line": 285
                },
                {
                    "callee_expression": "setTransmissionMode(TransmissionMode::NEUTRAL)",
                    "callee_name_at_call_site": "setTransmissionMode",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control19TransmissionManager19setTransmissionModeENS_16TransmissionModeE",
                    "callee_resolved_display_name": "ecu_powertrain_control::setTransmissionMode",
                    "line": 286
                }
            ]
        },
        {
            "function_id_key": "_ZNK22ecu_powertrain_control19TransmissionManager14getCurrentModeEv",
            "display_signature": "ecu_powertrain_control::getCurrentMode",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/transmission_manager.cpp",
            "line": 292,
            "end_line": 295,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"TransmissionManager: getCurrentMode() called. Mode: %d\", static_cast<int>(current_mode_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: getCurrentMode() called. Mode: %d\", static_cast<int>(current_mode_)",
                    "line": 293,
                    "raw_log_statement": "LOG_DEBUG(\"TransmissionManager: getCurrentMode() called. Mode: %d\", static_cast<int>(current_mode_))"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZNK22ecu_powertrain_control19TransmissionManager14getCurrentGearEv",
            "display_signature": "ecu_powertrain_control::getCurrentGear",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/transmission_manager.cpp",
            "line": 297,
            "end_line": 300,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"TransmissionManager: getCurrentGear() called. Gear: %d\", current_gear_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: getCurrentGear() called. Gear: %d\", current_gear_",
                    "line": 298,
                    "raw_log_statement": "LOG_DEBUG(\"TransmissionManager: getCurrentGear() called. Gear: %d\", current_gear_)"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZNK22ecu_powertrain_control19TransmissionManager17isShiftInProgressEv",
            "display_signature": "ecu_powertrain_control::isShiftInProgress",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/transmission_manager.cpp",
            "line": 302,
            "end_line": 304,
            "logs_in_order": [],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN22ecu_powertrain_control19TransmissionManager23manageAutomaticShiftingERK12VehicleStatei",
            "display_signature": "ecu_powertrain_control::manageAutomaticShifting",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/transmission_manager.cpp",
            "line": 306,
            "end_line": 340,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"TransmissionManager: Auto-shift logic. Speed: %.1f km/h, RPM: %d, Gear: %d, Mode: %d\",               vehicle_state.speed_kmh, engine_rpm, current_gear_, static_cast<int>(current_mode_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Auto-shift logic. Speed: %.1f km/h, RPM: %d, Gear: %d, Mode: %d\",               vehicle_state.speed_kmh, engine_rpm, current_gear_, static_cast<int>(current_mode_)",
                    "line": 311,
                    "raw_log_statement": "LOG_DEBUG(\"TransmissionManager: Auto-shift logic. Speed: %.1f km/h, RPM: %d, Gear: %d, Mode: %d\",               vehicle_state.speed_kmh, engine_rpm, current_gear_, static_cast<int>(current_mode_))"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"TransmissionManager: Auto UP-SHIFTING from %d. RPM: %d, Speed: %.1f km/h\",                      current_gear_, engine_rpm, vehicle_state.speed_kmh",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Auto UP-SHIFTING from %d. RPM: %d, Speed: %.1f km/h\",                      current_gear_, engine_rpm, vehicle_state.speed_kmh",
                    "line": 319,
                    "raw_log_statement": "LOG_INFO(\"TransmissionManager: Auto UP-SHIFTING from %d. RPM: %d, Speed: %.1f km/h\",                      current_gear_, engine_rpm, vehicle_state.speed_kmh)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"TransmissionManager: Auto DOWN-SHIFTING from %d. RPM: %d, Speed: %.1f km/h\",                          current_gear_, engine_rpm, vehicle_state.speed_kmh",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Auto DOWN-SHIFTING from %d. RPM: %d, Speed: %.1f km/h\",                          current_gear_, engine_rpm, vehicle_state.speed_kmh",
                    "line": 330,
                    "raw_log_statement": "LOG_INFO(\"TransmissionManager: Auto DOWN-SHIFTING from %d. RPM: %d, Speed: %.1f km/h\",                          current_gear_, engine_rpm, vehicle_state.speed_kmh)"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"TransmissionManager: RPM low for downshift, but speed %.1f km/h is also low for current gear %d. Holding gear.\",                 vehicle_state.speed_kmh, current_gear_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: RPM low for downshift, but speed %.1f km/h is also low for current gear %d. Holding gear.\",                 vehicle_state.speed_kmh, current_gear_",
                    "line": 335,
                    "raw_log_statement": "LOG_DEBUG(\"TransmissionManager: RPM low for downshift, but speed %.1f km/h is also low for current gear %d. Holding gear.\",                 vehicle_state.speed_kmh, current_gear_)"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "canShiftGear(true, vehicle_state)",
                    "callee_name_at_call_site": "canShiftGear",
                    "callee_resolved_key": "_ZNK22ecu_powertrain_control19TransmissionManager12canShiftGearEbRK12VehicleState",
                    "callee_resolved_display_name": "ecu_powertrain_control::canShiftGear",
                    "line": 318
                },
                {
                    "callee_expression": "performGearShift(current_gear_ + 1)",
                    "callee_name_at_call_site": "performGearShift",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control19TransmissionManager16performGearShiftEi",
                    "callee_resolved_display_name": "ecu_powertrain_control::performGearShift",
                    "line": 321
                },
                {
                    "callee_expression": "canShiftGear(false, vehicle_state)",
                    "callee_name_at_call_site": "canShiftGear",
                    "callee_resolved_key": "_ZNK22ecu_powertrain_control19TransmissionManager12canShiftGearEbRK12VehicleState",
                    "callee_resolved_display_name": "ecu_powertrain_control::canShiftGear",
                    "line": 329
                },
                {
                    "callee_expression": "performGearShift(current_gear_ - 1)",
                    "callee_name_at_call_site": "performGearShift",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control19TransmissionManager16performGearShiftEi",
                    "callee_resolved_display_name": "ecu_powertrain_control::performGearShift",
                    "line": 332
                }
            ]
        },
        {
            "function_id_key": "_ZN22ecu_powertrain_control19TransmissionManager29updateTransmissionTemperatureERK12VehicleState",
            "display_signature": "ecu_powertrain_control::updateTransmissionTemperature",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/transmission_manager.cpp",
            "line": 342,
            "end_line": 370,
            "logs_in_order": [
                {
                    "level": "WARNING",
                    "log_format_string": "\"TransmissionManager: Oil temperature HIGH: %.1f C\", transmission_oil_temp_celsius_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Oil temperature HIGH: %.1f C\", transmission_oil_temp_celsius_",
                    "line": 356,
                    "raw_log_statement": "LOG_WARNING(\"TransmissionManager: Oil temperature HIGH: %.1f C\", transmission_oil_temp_celsius_)"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"TransmissionManager: Oil temperature CRITICAL: %.1f C! Risk of damage. Limiting performance.\", transmission_oil_temp_celsius_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Oil temperature CRITICAL: %.1f C! Risk of damage. Limiting performance.\", transmission_oil_temp_celsius_",
                    "line": 358,
                    "raw_log_statement": "LOG_ERROR(\"TransmissionManager: Oil temperature CRITICAL: %.1f C! Risk of damage. Limiting performance.\", transmission_oil_temp_celsius_)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"TransmissionManager: Oil temperature elevated: %.1f C\", transmission_oil_temp_celsius_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Oil temperature elevated: %.1f C\", transmission_oil_temp_celsius_",
                    "line": 366,
                    "raw_log_statement": "LOG_INFO(\"TransmissionManager: Oil temperature elevated: %.1f C\", transmission_oil_temp_celsius_)"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN22ecu_powertrain_control19TransmissionManager23checkTransmissionHealthEv",
            "display_signature": "ecu_powertrain_control::checkTransmissionHealth",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/transmission_manager.cpp",
            "line": 373,
            "end_line": 390,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"TransmissionManager: Performing transmission health check.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Performing transmission health check.\"",
                    "line": 374,
                    "raw_log_statement": "LOG_DEBUG(\"TransmissionManager: Performing transmission health check.\")"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"TransmissionManager: DIAGNOSTIC FAULT DETECTED! Code: DTC_TRN_%03d. Possible clutch slip or solenoid issue.\", fault_code",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: DIAGNOSTIC FAULT DETECTED! Code: DTC_TRN_%03d. Possible clutch slip or solenoid issue.\", fault_code",
                    "line": 382,
                    "raw_log_statement": "LOG_ERROR(\"TransmissionManager: DIAGNOSTIC FAULT DETECTED! Code: DTC_TRN_%03d. Possible clutch slip or solenoid issue.\", fault_code)"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN22ecu_powertrain_control19TransmissionManager11updateStateERK12VehicleStatei",
            "display_signature": "ecu_powertrain_control::updateState",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/transmission_manager.cpp",
            "line": 393,
            "end_line": 422,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"TransmissionManager: Updating state. Mode: %d, Gear: %d, Speed: %.1f km/h, RPM: %d\",               static_cast<int>(current_mode_), current_gear_, vehicle_state.speed_kmh, engine_rpm",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Updating state. Mode: %d, Gear: %d, Speed: %.1f km/h, RPM: %d\",               static_cast<int>(current_mode_), current_gear_, vehicle_state.speed_kmh, engine_rpm",
                    "line": 394,
                    "raw_log_statement": "LOG_DEBUG(\"TransmissionManager: Updating state. Mode: %d, Gear: %d, Speed: %.1f km/h, RPM: %d\",               static_cast<int>(current_mode_), current_gear_, vehicle_state.speed_kmh, engine_rpm)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"TransmissionManager: Processing pending mode change from %d to %d.\",                  static_cast<int>(current_mode_), static_cast<int>(requested_mode_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Processing pending mode change from %d to %d.\",                  static_cast<int>(current_mode_), static_cast<int>(requested_mode_)",
                    "line": 399,
                    "raw_log_statement": "LOG_INFO(\"TransmissionManager: Processing pending mode change from %d to %d.\",                  static_cast<int>(current_mode_), static_cast<int>(requested_mode_))"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"TransmissionManager: Skipping auto-shift logic as a shift is already in progress.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: Skipping auto-shift logic as a shift is already in progress.\"",
                    "line": 410,
                    "raw_log_statement": "LOG_DEBUG(\"TransmissionManager: Skipping auto-shift logic as a shift is already in progress.\")"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"TransmissionManager: State update cycle complete.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"TransmissionManager: State update cycle complete.\"",
                    "line": 421,
                    "raw_log_statement": "LOG_DEBUG(\"TransmissionManager: State update cycle complete.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "manageAutomaticShifting(vehicle_state, engine_rpm)",
                    "callee_name_at_call_site": "manageAutomaticShifting",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control19TransmissionManager23manageAutomaticShiftingERK12VehicleStatei",
                    "callee_resolved_display_name": "ecu_powertrain_control::manageAutomaticShifting",
                    "line": 408
                },
                {
                    "callee_expression": "updateTransmissionTemperature(vehicle_state)",
                    "callee_name_at_call_site": "updateTransmissionTemperature",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control19TransmissionManager29updateTransmissionTemperatureERK12VehicleState",
                    "callee_resolved_display_name": "ecu_powertrain_control::updateTransmissionTemperature",
                    "line": 413
                },
                {
                    "callee_expression": "checkTransmissionHealth()",
                    "callee_name_at_call_site": "checkTransmissionHealth",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control19TransmissionManager23checkTransmissionHealthEv",
                    "callee_resolved_display_name": "ecu_powertrain_control::checkTransmissionHealth",
                    "line": 418
                }
            ]
        },
        {
            "function_id_key": "_ZN20ecu_power_management12PowerMonitorC1Ev",
            "display_signature": "ecu_power_management::PowerMonitor",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_power_management/power_monitor.cpp",
            "line": 9,
            "end_line": 16,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"PowerMonitor: Initializing. Battery Voltage: %.2fV. System Stable: %s\",              current_battery_voltage_V_, system_stable_ ? \"true\" : \"false\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"PowerMonitor: Initializing. Battery Voltage: %.2fV. System Stable: %s\",              current_battery_voltage_V_, system_stable_ ? \"true\" : \"false\"",
                    "line": 14,
                    "raw_log_statement": "LOG_INFO(\"PowerMonitor: Initializing. Battery Voltage: %.2fV. System Stable: %s\",              current_battery_voltage_V_, system_stable_ ? \"true\" : \"false\")"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN20ecu_power_management12PowerMonitorD1Ev",
            "display_signature": "ecu_power_management::~PowerMonitor",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_power_management/power_monitor.cpp",
            "line": 18,
            "end_line": 20,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"PowerMonitor: Shutting down. Final Battery Voltage: %.2fV\", current_battery_voltage_V_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"PowerMonitor: Shutting down. Final Battery Voltage: %.2fV\", current_battery_voltage_V_",
                    "line": 19,
                    "raw_log_statement": "LOG_INFO(\"PowerMonitor: Shutting down. Final Battery Voltage: %.2fV\", current_battery_voltage_V_)"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZNK20ecu_power_management12PowerMonitor13isPowerStableEv",
            "display_signature": "ecu_power_management::isPowerStable",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_power_management/power_monitor.cpp",
            "line": 22,
            "end_line": 29,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"PowerMonitor: isPowerStable() called. Current stability: %s\", system_stable_ ? \"true\" : \"false\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"PowerMonitor: isPowerStable() called. Current stability: %s\", system_stable_ ? \"true\" : \"false\"",
                    "line": 24,
                    "raw_log_statement": "LOG_DEBUG(\"PowerMonitor: isPowerStable() called. Current stability: %s\", system_stable_ ? \"true\" : \"false\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"PowerMonitor: Reporting system power as UNSTABLE.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"PowerMonitor: Reporting system power as UNSTABLE.\"",
                    "line": 26,
                    "raw_log_statement": "LOG_WARNING(\"PowerMonitor: Reporting system power as UNSTABLE.\")"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZNK20ecu_power_management12PowerMonitor17getBatteryVoltageEv",
            "display_signature": "ecu_power_management::getBatteryVoltage",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_power_management/power_monitor.cpp",
            "line": 31,
            "end_line": 34,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"PowerMonitor: getBatteryVoltage() called. Voltage: %.2fV\", current_battery_voltage_V_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"PowerMonitor: getBatteryVoltage() called. Voltage: %.2fV\", current_battery_voltage_V_",
                    "line": 32,
                    "raw_log_statement": "LOG_DEBUG(\"PowerMonitor: getBatteryVoltage() called. Voltage: %.2fV\", current_battery_voltage_V_)"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN20ecu_power_management12PowerMonitor18checkVoltageLevelsEv",
            "display_signature": "ecu_power_management::checkVoltageLevels",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_power_management/power_monitor.cpp",
            "line": 36,
            "end_line": 59,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"PowerMonitor: Checking voltage levels. Current: %.2fV\", current_battery_voltage_V_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"PowerMonitor: Checking voltage levels. Current: %.2fV\", current_battery_voltage_V_",
                    "line": 37,
                    "raw_log_statement": "LOG_DEBUG(\"PowerMonitor: Checking voltage levels. Current: %.2fV\", current_battery_voltage_V_)"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"PowerMonitor: Battery voltage critically low: %.2fV!\", current_battery_voltage_V_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"PowerMonitor: Battery voltage critically low: %.2fV!\", current_battery_voltage_V_",
                    "line": 50,
                    "raw_log_statement": "LOG_WARNING(\"PowerMonitor: Battery voltage critically low: %.2fV!\", current_battery_voltage_V_)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"PowerMonitor: Battery voltage low: %.2fV. Consider charging.\", current_battery_voltage_V_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"PowerMonitor: Battery voltage low: %.2fV. Consider charging.\", current_battery_voltage_V_",
                    "line": 53,
                    "raw_log_statement": "LOG_INFO(\"PowerMonitor: Battery voltage low: %.2fV. Consider charging.\", current_battery_voltage_V_)"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN20ecu_power_management12PowerMonitor21assessSystemStabilityEv",
            "display_signature": "ecu_power_management::assessSystemStability",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_power_management/power_monitor.cpp",
            "line": 61,
            "end_line": 78,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"PowerMonitor: Assessing overall system stability.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"PowerMonitor: Assessing overall system stability.\"",
                    "line": 62,
                    "raw_log_statement": "LOG_DEBUG(\"PowerMonitor: Assessing overall system stability.\")"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"PowerMonitor: Multiple consecutive high load events detected. System declared UNSTABLE.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"PowerMonitor: Multiple consecutive high load events detected. System declared UNSTABLE.\"",
                    "line": 65,
                    "raw_log_statement": "LOG_ERROR(\"PowerMonitor: Multiple consecutive high load events detected. System declared UNSTABLE.\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"PowerMonitor: System unstable due to critically low voltage (%.2fV).\", current_battery_voltage_V_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"PowerMonitor: System unstable due to critically low voltage (%.2fV).\", current_battery_voltage_V_",
                    "line": 69,
                    "raw_log_statement": "LOG_WARNING(\"PowerMonitor: System unstable due to critically low voltage (%.2fV).\", current_battery_voltage_V_)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"PowerMonitor: System stability RESTORED. Voltage: %.2fV\", current_battery_voltage_V_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"PowerMonitor: System stability RESTORED. Voltage: %.2fV\", current_battery_voltage_V_",
                    "line": 74,
                    "raw_log_statement": "LOG_INFO(\"PowerMonitor: System stability RESTORED. Voltage: %.2fV\", current_battery_voltage_V_)"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN20ecu_power_management12PowerMonitor17updatePowerStatusEv",
            "display_signature": "ecu_power_management::updatePowerStatus",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_power_management/power_monitor.cpp",
            "line": 80,
            "end_line": 95,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"PowerMonitor: Updating power status cycle.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"PowerMonitor: Updating power status cycle.\"",
                    "line": 81,
                    "raw_log_statement": "LOG_INFO(\"PowerMonitor: Updating power status cycle.\")"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"PowerMonitor: Performing peripheral power checks (simulated).\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"PowerMonitor: Performing peripheral power checks (simulated).\"",
                    "line": 86,
                    "raw_log_statement": "LOG_DEBUG(\"PowerMonitor: Performing peripheral power checks (simulated).\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"PowerMonitor: Power status update complete. System is STABLE. Voltage: %.2fV\", current_battery_voltage_V_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"PowerMonitor: Power status update complete. System is STABLE. Voltage: %.2fV\", current_battery_voltage_V_",
                    "line": 91,
                    "raw_log_statement": "LOG_INFO(\"PowerMonitor: Power status update complete. System is STABLE. Voltage: %.2fV\", current_battery_voltage_V_)"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"PowerMonitor: Power status update complete. System is UNSTABLE. Voltage: %.2fV\", current_battery_voltage_V_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"PowerMonitor: Power status update complete. System is UNSTABLE. Voltage: %.2fV\", current_battery_voltage_V_",
                    "line": 93,
                    "raw_log_statement": "LOG_WARNING(\"PowerMonitor: Power status update complete. System is UNSTABLE. Voltage: %.2fV\", current_battery_voltage_V_)"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "checkVoltageLevels()",
                    "callee_name_at_call_site": "checkVoltageLevels",
                    "callee_resolved_key": "_ZN20ecu_power_management12PowerMonitor18checkVoltageLevelsEv",
                    "callee_resolved_display_name": "ecu_power_management::checkVoltageLevels",
                    "line": 82
                },
                {
                    "callee_expression": "assessSystemStability()",
                    "callee_name_at_call_site": "assessSystemStability",
                    "callee_resolved_key": "_ZN20ecu_power_management12PowerMonitor21assessSystemStabilityEv",
                    "callee_resolved_display_name": "ecu_power_management::assessSystemStability",
                    "line": 88
                }
            ]
        },
        {
            "function_id_key": "_ZN20ecu_power_management12PowerMonitor21simulateHighLoadEventEb",
            "display_signature": "ecu_power_management::simulateHighLoadEvent",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_power_management/power_monitor.cpp",
            "line": 97,
            "end_line": 115,
            "logs_in_order": [
                {
                    "level": "WARNING",
                    "log_format_string": "\"PowerMonitor: High electrical load event STARTED (e.g., AC compressor, multiple window motors).\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"PowerMonitor: High electrical load event STARTED (e.g., AC compressor, multiple window motors).\"",
                    "line": 99,
                    "raw_log_statement": "LOG_WARNING(\"PowerMonitor: High electrical load event STARTED (e.g., AC compressor, multiple window motors).\")"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"PowerMonitor: System became UNSTABLE during high load event!\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"PowerMonitor: System became UNSTABLE during high load event!\"",
                    "line": 105,
                    "raw_log_statement": "LOG_ERROR(\"PowerMonitor: System became UNSTABLE during high load event!\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"PowerMonitor: High electrical load event ENDED.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"PowerMonitor: High electrical load event ENDED.\"",
                    "line": 108,
                    "raw_log_statement": "LOG_INFO(\"PowerMonitor: High electrical load event ENDED.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "checkVoltageLevels()",
                    "callee_name_at_call_site": "checkVoltageLevels",
                    "callee_resolved_key": "_ZN20ecu_power_management12PowerMonitor18checkVoltageLevelsEv",
                    "callee_resolved_display_name": "ecu_power_management::checkVoltageLevels",
                    "line": 102
                },
                {
                    "callee_expression": "assessSystemStability()",
                    "callee_name_at_call_site": "assessSystemStability",
                    "callee_resolved_key": "_ZN20ecu_power_management12PowerMonitor21assessSystemStabilityEv",
                    "callee_resolved_display_name": "ecu_power_management::assessSystemStability",
                    "line": 103
                },
                {
                    "callee_expression": "checkVoltageLevels()",
                    "callee_name_at_call_site": "checkVoltageLevels",
                    "callee_resolved_key": "_ZN20ecu_power_management12PowerMonitor18checkVoltageLevelsEv",
                    "callee_resolved_display_name": "ecu_power_management::checkVoltageLevels",
                    "line": 112
                },
                {
                    "callee_expression": "assessSystemStability()",
                    "callee_name_at_call_site": "assessSystemStability",
                    "callee_resolved_key": "_ZN20ecu_power_management12PowerMonitor21assessSystemStabilityEv",
                    "callee_resolved_display_name": "ecu_power_management::assessSystemStability",
                    "line": 113
                }
            ]
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module9BulbStateC1ENS_9LightTypeE",
            "display_signature": "ecu_body_control_module::BulbState::BulbState",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/lighting_control.h",
            "line": 41,
            "end_line": 41,
            "logs_in_order": [],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module17SingleWindowStateC1ENS_8WindowIDE",
            "display_signature": "ecu_body_control_module::SingleWindowState::SingleWindowState",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/window_control.h",
            "line": 40,
            "end_line": 43,
            "logs_in_order": [],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module19airDistModeToStringENS_19AirDistributionModeE",
            "display_signature": "ecu_body_control_module::airDistModeToString",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/calimate_control.cpp",
            "line": 10,
            "end_line": 20,
            "logs_in_order": [],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module16acStatusToStringENS_18ACCompressorStatusE",
            "display_signature": "ecu_body_control_module::acStatusToString",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/calimate_control.cpp",
            "line": 23,
            "end_line": 33,
            "logs_in_order": [],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module14ClimateControlC1EPN20ecu_power_management12PowerMonitorE",
            "display_signature": "ecu_body_control_module::ClimateControl",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/calimate_control.cpp",
            "line": 35,
            "end_line": 53,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"ClimateControl: Initializing. Target Temp: %.1fC, Fan: %d, AC User Req: %s, Auto: %s\",              target_temperature_celsius_, fan_speed_level_, ac_requested_by_user_ ? \"ON\" : \"OFF\", auto_mode_enabled_ ? \"ON\" : \"OFF\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: Initializing. Target Temp: %.1fC, Fan: %d, AC User Req: %s, Auto: %s\",              target_temperature_celsius_, fan_speed_level_, ac_requested_by_user_ ? \"ON\" : \"OFF\", auto_mode_enabled_ ? \"ON\" : \"OFF\"",
                    "line": 48,
                    "raw_log_statement": "LOG_INFO(\"ClimateControl: Initializing. Target Temp: %.1fC, Fan: %d, AC User Req: %s, Auto: %s\",              target_temperature_celsius_, fan_speed_level_, ac_requested_by_user_ ? \"ON\" : \"OFF\", auto_mode_enabled_ ? \"ON\" : \"OFF\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"ClimateControl: PowerMonitor service is NULL. AC compressor management might be impaired.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: PowerMonitor service is NULL. AC compressor management might be impaired.\"",
                    "line": 51,
                    "raw_log_statement": "LOG_WARNING(\"ClimateControl: PowerMonitor service is NULL. AC compressor management might be impaired.\")"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module14ClimateControlD1Ev",
            "display_signature": "ecu_body_control_module::~ClimateControl",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/calimate_control.cpp",
            "line": 55,
            "end_line": 58,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"ClimateControl: Shutting down. Final Target Temp: %.1fC, AC Status: %s\",              target_temperature_celsius_, acStatusToString(ac_compressor_status_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: Shutting down. Final Target Temp: %.1fC, AC Status: %s\",              target_temperature_celsius_, acStatusToString(ac_compressor_status_)",
                    "line": 56,
                    "raw_log_statement": "LOG_INFO(\"ClimateControl: Shutting down. Final Target Temp: %.1fC, AC Status: %s\",              target_temperature_celsius_, acStatusToString(ac_compressor_status_))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "acStatusToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16acStatusToStringENS_18ACCompressorStatusE",
                    "callee_resolved_display_name": "ecu_body_control_module::acStatusToString",
                    "line": 56
                }
            ]
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module14ClimateControl20setTargetTemperatureEd",
            "display_signature": "ecu_body_control_module::setTargetTemperature",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/calimate_control.cpp",
            "line": 60,
            "end_line": 74,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"ClimateControl: Set target temperature to %.1fC (was %.1fC).\", celsius, target_temperature_celsius_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: Set target temperature to %.1fC (was %.1fC).\", celsius, target_temperature_celsius_",
                    "line": 63,
                    "raw_log_statement": "LOG_INFO(\"ClimateControl: Set target temperature to %.1fC (was %.1fC).\", celsius, target_temperature_celsius_)"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ClimateControl: Target temperature already set to %.1fC or auto mode is off.\", celsius",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: Target temperature already set to %.1fC or auto mode is off.\", celsius",
                    "line": 65,
                    "raw_log_statement": "LOG_DEBUG(\"ClimateControl: Target temperature already set to %.1fC or auto mode is off.\", celsius)"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ClimateControl: Auto mode is ON. Temperature change may trigger recalculation of fan/distribution.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: Auto mode is ON. Temperature change may trigger recalculation of fan/distribution.\"",
                    "line": 70,
                    "raw_log_statement": "LOG_DEBUG(\"ClimateControl: Auto mode is ON. Temperature change may trigger recalculation of fan/distribution.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "fabs(target_temperature_celsius_ - celsius)",
                    "callee_name_at_call_site": "fabs",
                    "callee_resolved_key": "fabs",
                    "callee_resolved_display_name": "fabs",
                    "line": 64
                }
            ]
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module14ClimateControl11setFanSpeedEi",
            "display_signature": "ecu_body_control_module::setFanSpeed",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/calimate_control.cpp",
            "line": 76,
            "end_line": 93,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"ClimateControl: Set fan speed to level %d (was %d).\", level, fan_speed_level_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: Set fan speed to level %d (was %d).\", level, fan_speed_level_",
                    "line": 78,
                    "raw_log_statement": "LOG_INFO(\"ClimateControl: Set fan speed to level %d (was %d).\", level, fan_speed_level_)"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ClimateControl: Fan speed already at level %d.\", level",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: Fan speed already at level %d.\", level",
                    "line": 80,
                    "raw_log_statement": "LOG_DEBUG(\"ClimateControl: Fan speed already at level %d.\", level)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"ClimateControl: Fan turned OFF. This might also turn off AC compressor if it's not needed for defrost.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: Fan turned OFF. This might also turn off AC compressor if it's not needed for defrost.\"",
                    "line": 84,
                    "raw_log_statement": "LOG_INFO(\"ClimateControl: Fan turned OFF. This might also turn off AC compressor if it's not needed for defrost.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"ClimateControl: Manual fan speed change. Disabling AUTO mode.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: Manual fan speed change. Disabling AUTO mode.\"",
                    "line": 89,
                    "raw_log_statement": "LOG_INFO(\"ClimateControl: Manual fan speed change. Disabling AUTO mode.\")"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module14ClimateControl18setAirDistributionENS_19AirDistributionModeE",
            "display_signature": "ecu_body_control_module::setAirDistribution",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/calimate_control.cpp",
            "line": 95,
            "end_line": 111,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"ClimateControl: Set air distribution to %s (was %s).\",              airDistModeToString(mode), airDistModeToString(current_air_distribution_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: Set air distribution to %s (was %s).\",              airDistModeToString(mode), airDistModeToString(current_air_distribution_)",
                    "line": 96,
                    "raw_log_statement": "LOG_INFO(\"ClimateControl: Set air distribution to %s (was %s).\",              airDistModeToString(mode), airDistModeToString(current_air_distribution_))"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ClimateControl: Air distribution already %s.\", airDistModeToString(mode)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: Air distribution already %s.\", airDistModeToString(mode)",
                    "line": 99,
                    "raw_log_statement": "LOG_DEBUG(\"ClimateControl: Air distribution already %s.\", airDistModeToString(mode))"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"ClimateControl: Manual air distribution change. Disabling AUTO mode.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: Manual air distribution change. Disabling AUTO mode.\"",
                    "line": 103,
                    "raw_log_statement": "LOG_INFO(\"ClimateControl: Manual air distribution change. Disabling AUTO mode.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"ClimateControl: Windshield defrost selected. AC might be activated for dehumidification.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: Windshield defrost selected. AC might be activated for dehumidification.\"",
                    "line": 107,
                    "raw_log_statement": "LOG_INFO(\"ClimateControl: Windshield defrost selected. AC might be activated for dehumidification.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "airDistModeToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module19airDistModeToStringENS_19AirDistributionModeE",
                    "callee_resolved_display_name": "ecu_body_control_module::airDistModeToString",
                    "line": 96
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "airDistModeToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module19airDistModeToStringENS_19AirDistributionModeE",
                    "callee_resolved_display_name": "ecu_body_control_module::airDistModeToString",
                    "line": 96
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "airDistModeToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module19airDistModeToStringENS_19AirDistributionModeE",
                    "callee_resolved_display_name": "ecu_body_control_module::airDistModeToString",
                    "line": 99
                }
            ]
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module14ClimateControl11setACActiveEb",
            "display_signature": "ecu_body_control_module::setACActive",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/calimate_control.cpp",
            "line": 113,
            "end_line": 126,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"ClimateControl: User request to set AC to %s (was %s).\",              active ? \"ON\" : \"OFF\", ac_requested_by_user_ ? \"ON\" : \"OFF\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: User request to set AC to %s (was %s).\",              active ? \"ON\" : \"OFF\", ac_requested_by_user_ ? \"ON\" : \"OFF\"",
                    "line": 114,
                    "raw_log_statement": "LOG_INFO(\"ClimateControl: User request to set AC to %s (was %s).\",              active ? \"ON\" : \"OFF\", ac_requested_by_user_ ? \"ON\" : \"OFF\")"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ClimateControl: AC user request already %s.\", active ? \"ON\" : \"OFF\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: AC user request already %s.\", active ? \"ON\" : \"OFF\"",
                    "line": 117,
                    "raw_log_statement": "LOG_DEBUG(\"ClimateControl: AC user request already %s.\", active ? \"ON\" : \"OFF\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"ClimateControl: Manual AC OFF request. Disabling AUTO mode.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: Manual AC OFF request. Disabling AUTO mode.\"",
                    "line": 121,
                    "raw_log_statement": "LOG_INFO(\"ClimateControl: Manual AC OFF request. Disabling AUTO mode.\")"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module14ClimateControl22setRecirculationActiveEb",
            "display_signature": "ecu_body_control_module::setRecirculationActive",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/calimate_control.cpp",
            "line": 128,
            "end_line": 141,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"ClimateControl: Set air recirculation to %s (was %s).\",              active ? \"ON\" : \"OFF\", recirculation_active_ ? \"ON\" : \"OFF\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: Set air recirculation to %s (was %s).\",              active ? \"ON\" : \"OFF\", recirculation_active_ ? \"ON\" : \"OFF\"",
                    "line": 129,
                    "raw_log_statement": "LOG_INFO(\"ClimateControl: Set air recirculation to %s (was %s).\",              active ? \"ON\" : \"OFF\", recirculation_active_ ? \"ON\" : \"OFF\")"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ClimateControl: Recirculation already %s.\", active ? \"ON\" : \"OFF\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: Recirculation already %s.\", active ? \"ON\" : \"OFF\"",
                    "line": 132,
                    "raw_log_statement": "LOG_DEBUG(\"ClimateControl: Recirculation already %s.\", active ? \"ON\" : \"OFF\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"ClimateControl: Recirculation requested during WINDSHIELD_DEFROST. This is often overridden to FRESH AIR for safety/effectiveness.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: Recirculation requested during WINDSHIELD_DEFROST. This is often overridden to FRESH AIR for safety/effectiveness.\"",
                    "line": 137,
                    "raw_log_statement": "LOG_WARNING(\"ClimateControl: Recirculation requested during WINDSHIELD_DEFROST. This is often overridden to FRESH AIR for safety/effectiveness.\")"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module14ClimateControl11setAutoModeEb",
            "display_signature": "ecu_body_control_module::setAutoMode",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/calimate_control.cpp",
            "line": 143,
            "end_line": 157,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"ClimateControl: AUTO mode set to %s (was %s).\",              enabled ? \"ENABLED\" : \"DISABLED\", auto_mode_enabled_ ? \"ENABLED\" : \"DISABLED\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: AUTO mode set to %s (was %s).\",              enabled ? \"ENABLED\" : \"DISABLED\", auto_mode_enabled_ ? \"ENABLED\" : \"DISABLED\"",
                    "line": 144,
                    "raw_log_statement": "LOG_INFO(\"ClimateControl: AUTO mode set to %s (was %s).\",              enabled ? \"ENABLED\" : \"DISABLED\", auto_mode_enabled_ ? \"ENABLED\" : \"DISABLED\")"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ClimateControl: AUTO mode already %s.\", enabled ? \"ENABLED\" : \"DISABLED\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: AUTO mode already %s.\", enabled ? \"ENABLED\" : \"DISABLED\"",
                    "line": 147,
                    "raw_log_statement": "LOG_DEBUG(\"ClimateControl: AUTO mode already %s.\", enabled ? \"ENABLED\" : \"DISABLED\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"ClimateControl: AUTO mode enabled. System will now manage fan, distribution, and AC.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: AUTO mode enabled. System will now manage fan, distribution, and AC.\"",
                    "line": 151,
                    "raw_log_statement": "LOG_INFO(\"ClimateControl: AUTO mode enabled. System will now manage fan, distribution, and AC.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"ClimateControl: AUTO mode disabled. System reverts to last manual settings.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: AUTO mode disabled. System reverts to last manual settings.\"",
                    "line": 154,
                    "raw_log_statement": "LOG_INFO(\"ClimateControl: AUTO mode disabled. System reverts to last manual settings.\")"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZNK23ecu_body_control_module14ClimateControl22getCurrentInteriorTempEv",
            "display_signature": "ecu_body_control_module::getCurrentInteriorTemp",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/calimate_control.cpp",
            "line": 159,
            "end_line": 162,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ClimateControl: getCurrentInteriorTemp() -> %.1fC\", current_interior_temperature_celsius_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: getCurrentInteriorTemp() -> %.1fC\", current_interior_temperature_celsius_",
                    "line": 160,
                    "raw_log_statement": "LOG_DEBUG(\"ClimateControl: getCurrentInteriorTemp() -> %.1fC\", current_interior_temperature_celsius_)"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZNK23ecu_body_control_module14ClimateControl20getTargetTemperatureEv",
            "display_signature": "ecu_body_control_module::getTargetTemperature",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/calimate_control.cpp",
            "line": 163,
            "end_line": 166,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ClimateControl: getTargetTemperature() -> %.1fC\", target_temperature_celsius_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: getTargetTemperature() -> %.1fC\", target_temperature_celsius_",
                    "line": 164,
                    "raw_log_statement": "LOG_DEBUG(\"ClimateControl: getTargetTemperature() -> %.1fC\", target_temperature_celsius_)"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZNK23ecu_body_control_module14ClimateControl11getFanSpeedEv",
            "display_signature": "ecu_body_control_module::getFanSpeed",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/calimate_control.cpp",
            "line": 167,
            "end_line": 170,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ClimateControl: getFanSpeed() -> Level %d\", fan_speed_level_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: getFanSpeed() -> Level %d\", fan_speed_level_",
                    "line": 168,
                    "raw_log_statement": "LOG_DEBUG(\"ClimateControl: getFanSpeed() -> Level %d\", fan_speed_level_)"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZNK23ecu_body_control_module14ClimateControl18getAirDistributionEv",
            "display_signature": "ecu_body_control_module::getAirDistribution",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/calimate_control.cpp",
            "line": 171,
            "end_line": 174,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ClimateControl: getAirDistribution() -> %s\", airDistModeToString(current_air_distribution_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: getAirDistribution() -> %s\", airDistModeToString(current_air_distribution_)",
                    "line": 172,
                    "raw_log_statement": "LOG_DEBUG(\"ClimateControl: getAirDistribution() -> %s\", airDistModeToString(current_air_distribution_))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "airDistModeToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module19airDistModeToStringENS_19AirDistributionModeE",
                    "callee_resolved_display_name": "ecu_body_control_module::airDistModeToString",
                    "line": 172
                }
            ]
        },
        {
            "function_id_key": "_ZNK23ecu_body_control_module14ClimateControl10isACActiveEv",
            "display_signature": "ecu_body_control_module::isACActive",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/calimate_control.cpp",
            "line": 175,
            "end_line": 180,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ClimateControl: isACActive() (effective) -> %s (Compressor status: %s)\",               active ? \"YES\" : \"NO\", acStatusToString(ac_compressor_status_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: isACActive() (effective) -> %s (Compressor status: %s)\",               active ? \"YES\" : \"NO\", acStatusToString(ac_compressor_status_)",
                    "line": 177,
                    "raw_log_statement": "LOG_DEBUG(\"ClimateControl: isACActive() (effective) -> %s (Compressor status: %s)\",               active ? \"YES\" : \"NO\", acStatusToString(ac_compressor_status_))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "acStatusToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16acStatusToStringENS_18ACCompressorStatusE",
                    "callee_resolved_display_name": "ecu_body_control_module::acStatusToString",
                    "line": 177
                }
            ]
        },
        {
            "function_id_key": "_ZNK23ecu_body_control_module14ClimateControl21getACCompressorStatusEv",
            "display_signature": "ecu_body_control_module::getACCompressorStatus",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/calimate_control.cpp",
            "line": 181,
            "end_line": 184,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ClimateControl: getACCompressorStatus() -> %s\", acStatusToString(ac_compressor_status_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: getACCompressorStatus() -> %s\", acStatusToString(ac_compressor_status_)",
                    "line": 182,
                    "raw_log_statement": "LOG_DEBUG(\"ClimateControl: getACCompressorStatus() -> %s\", acStatusToString(ac_compressor_status_))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "acStatusToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16acStatusToStringENS_18ACCompressorStatusE",
                    "callee_resolved_display_name": "ecu_body_control_module::acStatusToString",
                    "line": 182
                }
            ]
        },
        {
            "function_id_key": "_ZNK23ecu_body_control_module14ClimateControl21isRecirculationActiveEv",
            "display_signature": "ecu_body_control_module::isRecirculationActive",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/calimate_control.cpp",
            "line": 185,
            "end_line": 188,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ClimateControl: isRecirculationActive() -> %s\", recirculation_active_ ? \"YES\" : \"NO\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: isRecirculationActive() -> %s\", recirculation_active_ ? \"YES\" : \"NO\"",
                    "line": 186,
                    "raw_log_statement": "LOG_DEBUG(\"ClimateControl: isRecirculationActive() -> %s\", recirculation_active_ ? \"YES\" : \"NO\")"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZNK23ecu_body_control_module14ClimateControl17isAutoModeEnabledEv",
            "display_signature": "ecu_body_control_module::isAutoModeEnabled",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/calimate_control.cpp",
            "line": 189,
            "end_line": 192,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ClimateControl: isAutoModeEnabled() -> %s\", auto_mode_enabled_ ? \"YES\" : \"NO\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: isAutoModeEnabled() -> %s\", auto_mode_enabled_ ? \"YES\" : \"NO\"",
                    "line": 190,
                    "raw_log_statement": "LOG_DEBUG(\"ClimateControl: isAutoModeEnabled() -> %s\", auto_mode_enabled_ ? \"YES\" : \"NO\")"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZNK23ecu_body_control_module14ClimateControl13canActivateACEbb",
            "display_signature": "ecu_body_control_module::canActivateAC",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/calimate_control.cpp",
            "line": 195,
            "end_line": 220,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"ClimateControl: Cannot activate AC. Engine is not running.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: Cannot activate AC. Engine is not running.\"",
                    "line": 197,
                    "raw_log_statement": "LOG_INFO(\"ClimateControl: Cannot activate AC. Engine is not running.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"ClimateControl: Cannot activate AC. High engine load detected (e.g. full throttle).\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: Cannot activate AC. High engine load detected (e.g. full throttle).\"",
                    "line": 201,
                    "raw_log_statement": "LOG_INFO(\"ClimateControl: Cannot activate AC. High engine load detected (e.g. full throttle).\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"ClimateControl: Power system unstable. AC activation deferred by PowerMonitor.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: Power system unstable. AC activation deferred by PowerMonitor.\"",
                    "line": 207,
                    "raw_log_statement": "LOG_WARNING(\"ClimateControl: Power system unstable. AC activation deferred by PowerMonitor.\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"ClimateControl: Battery voltage (%.2fV) too low for AC compressor. Activation deferred.\", power_monitor_->getBatteryVoltage()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: Battery voltage (%.2fV) too low for AC compressor. Activation deferred.\", power_monitor_->getBatteryVoltage()",
                    "line": 211,
                    "raw_log_statement": "LOG_WARNING(\"ClimateControl: Battery voltage (%.2fV) too low for AC compressor. Activation deferred.\", power_monitor_->getBatteryVoltage())"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"ClimateControl: Exterior temperature (%.1fC) very low. AC compressor might not engage for cooling.\", current_exterior_temperature_celsius_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: Exterior temperature (%.1fC) very low. AC compressor might not engage for cooling.\", current_exterior_temperature_celsius_",
                    "line": 216,
                    "raw_log_statement": "LOG_INFO(\"ClimateControl: Exterior temperature (%.1fC) very low. AC compressor might not engage for cooling.\", current_exterior_temperature_celsius_)"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "power_monitor_->isPowerStable()",
                    "callee_name_at_call_site": "isPowerStable",
                    "callee_resolved_key": "_ZNK20ecu_power_management12PowerMonitor13isPowerStableEv",
                    "callee_resolved_display_name": "ecu_power_management::PowerMonitor::isPowerStable",
                    "line": 206
                },
                {
                    "callee_expression": "power_monitor_->getBatteryVoltage()",
                    "callee_name_at_call_site": "getBatteryVoltage",
                    "callee_resolved_key": "_ZNK20ecu_power_management12PowerMonitor17getBatteryVoltageEv",
                    "callee_resolved_display_name": "ecu_power_management::PowerMonitor::getBatteryVoltage",
                    "line": 210
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "getBatteryVoltage",
                    "callee_resolved_key": "_ZNK20ecu_power_management12PowerMonitor17getBatteryVoltageEv",
                    "callee_resolved_display_name": "ecu_power_management::PowerMonitor::getBatteryVoltage",
                    "line": 211
                }
            ]
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module14ClimateControl19controlACCompressorEbb",
            "display_signature": "ecu_body_control_module::controlACCompressor",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/calimate_control.cpp",
            "line": 222,
            "end_line": 277,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ClimateControl: Fan is OFF and not defrosting. AC compressor should be OFF.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: Fan is OFF and not defrosting. AC compressor should be OFF.\"",
                    "line": 228,
                    "raw_log_statement": "LOG_DEBUG(\"ClimateControl: Fan is OFF and not defrosting. AC compressor should be OFF.\")"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ClimateControl: AC potentially needed. UserReq: %d, AutoCool: %d, Defrost: %d\",                   ac_requested_by_user_,                   (auto_mode_enabled_ && current_interior_temperature_celsius_ > target_temperature_celsius_ + 0.5),                   (current_air_distribution_ == AirDistributionMode::WINDSHIELD_DEFROST)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: AC potentially needed. UserReq: %d, AutoCool: %d, Defrost: %d\",                   ac_requested_by_user_,                   (auto_mode_enabled_ && current_interior_temperature_celsius_ > target_temperature_celsius_ + 0.5),                   (current_air_distribution_ == AirDistributionMode::WINDSHIELD_DEFROST)",
                    "line": 233,
                    "raw_log_statement": "LOG_DEBUG(\"ClimateControl: AC potentially needed. UserReq: %d, AutoCool: %d, Defrost: %d\",                   ac_requested_by_user_,                   (auto_mode_enabled_ && current_interior_temperature_celsius_ > target_temperature_celsius_ + 0.5),                   (current_air_distribution_ == AirDistributionMode::WINDSHIELD_DEFROST)                   )"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"ClimateControl: AC Compressor ACTIVATED.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: AC Compressor ACTIVATED.\"",
                    "line": 247,
                    "raw_log_statement": "LOG_INFO(\"ClimateControl: AC Compressor ACTIVATED.\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"ClimateControl: AC Compressor activation DENIED. Reason: %s. Denial count: %d\",                         acStatusToString(ac_compressor_status_), ac_power_denial_counter_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: AC Compressor activation DENIED. Reason: %s. Denial count: %d\",                         acStatusToString(ac_compressor_status_), ac_power_denial_counter_",
                    "line": 257,
                    "raw_log_statement": "LOG_WARNING(\"ClimateControl: AC Compressor activation DENIED. Reason: %s. Denial count: %d\",                         acStatusToString(ac_compressor_status_), ac_power_denial_counter_)"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"ClimateControl: AC compressor denied %d consecutive times. Potential underlying issue or prolonged condition.\", ac_power_denial_counter_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: AC compressor denied %d consecutive times. Potential underlying issue or prolonged condition.\", ac_power_denial_counter_",
                    "line": 260,
                    "raw_log_statement": "LOG_ERROR(\"ClimateControl: AC compressor denied %d consecutive times. Potential underlying issue or prolonged condition.\", ac_power_denial_counter_)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"ClimateControl: AC Compressor DEACTIVATED (no longer needed).\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: AC Compressor DEACTIVATED (no longer needed).\"",
                    "line": 266,
                    "raw_log_statement": "LOG_INFO(\"ClimateControl: AC Compressor DEACTIVATED (no longer needed).\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"ClimateControl: AC Compressor status changed from %s to %s.\",                  acStatusToString(old_status), acStatusToString(ac_compressor_status_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: AC Compressor status changed from %s to %s.\",                  acStatusToString(old_status), acStatusToString(ac_compressor_status_)",
                    "line": 274,
                    "raw_log_statement": "LOG_INFO(\"ClimateControl: AC Compressor status changed from %s to %s.\",                  acStatusToString(old_status), acStatusToString(ac_compressor_status_))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "canActivateAC(engine_running, high_engine_load_simulated)",
                    "callee_name_at_call_site": "canActivateAC",
                    "callee_resolved_key": "_ZNK23ecu_body_control_module14ClimateControl13canActivateACEbb",
                    "callee_resolved_display_name": "ecu_body_control_module::canActivateAC",
                    "line": 243
                },
                {
                    "callee_expression": "power_monitor_->simulateHighLoadEvent(true)",
                    "callee_name_at_call_site": "simulateHighLoadEvent",
                    "callee_resolved_key": "_ZN20ecu_power_management12PowerMonitor21simulateHighLoadEventEb",
                    "callee_resolved_display_name": "ecu_power_management::PowerMonitor::simulateHighLoadEvent",
                    "line": 248
                },
                {
                    "callee_expression": "power_monitor_->simulateHighLoadEvent(false)",
                    "callee_name_at_call_site": "simulateHighLoadEvent",
                    "callee_resolved_key": "_ZN20ecu_power_management12PowerMonitor21simulateHighLoadEventEb",
                    "callee_resolved_display_name": "ecu_power_management::PowerMonitor::simulateHighLoadEvent",
                    "line": 255
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "acStatusToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16acStatusToStringENS_18ACCompressorStatusE",
                    "callee_resolved_display_name": "ecu_body_control_module::acStatusToString",
                    "line": 257
                },
                {
                    "callee_expression": "power_monitor_->simulateHighLoadEvent(false)",
                    "callee_name_at_call_site": "simulateHighLoadEvent",
                    "callee_resolved_key": "_ZN20ecu_power_management12PowerMonitor21simulateHighLoadEventEb",
                    "callee_resolved_display_name": "ecu_power_management::PowerMonitor::simulateHighLoadEvent",
                    "line": 267
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "acStatusToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16acStatusToStringENS_18ACCompressorStatusE",
                    "callee_resolved_display_name": "ecu_body_control_module::acStatusToString",
                    "line": 274
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "acStatusToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16acStatusToStringENS_18ACCompressorStatusE",
                    "callee_resolved_display_name": "ecu_body_control_module::acStatusToString",
                    "line": 274
                }
            ]
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module14ClimateControl23adjustFanForTemperatureEv",
            "display_signature": "ecu_body_control_module::adjustFanForTemperature",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/calimate_control.cpp",
            "line": 279,
            "end_line": 307,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ClimateControl: Auto fan: Cold exterior/interior, limiting fan speed to %d for heating comfort.\", new_fan_speed",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: Auto fan: Cold exterior/interior, limiting fan speed to %d for heating comfort.\", new_fan_speed",
                    "line": 298,
                    "raw_log_statement": "LOG_DEBUG(\"ClimateControl: Auto fan: Cold exterior/interior, limiting fan speed to %d for heating comfort.\", new_fan_speed)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"ClimateControl: AUTO Fan Speed: Adjusting from %d to %d due to temp diff %.1fC.\",                  fan_speed_level_, new_fan_speed, temp_diff",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: AUTO Fan Speed: Adjusting from %d to %d due to temp diff %.1fC.\",                  fan_speed_level_, new_fan_speed, temp_diff",
                    "line": 303,
                    "raw_log_statement": "LOG_INFO(\"ClimateControl: AUTO Fan Speed: Adjusting from %d to %d due to temp diff %.1fC.\",                  fan_speed_level_, new_fan_speed, temp_diff)"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "fabs(temp_diff)",
                    "callee_name_at_call_site": "fabs",
                    "callee_resolved_key": "fabs",
                    "callee_resolved_display_name": "fabs",
                    "line": 284
                },
                {
                    "callee_expression": "fabs(temp_diff)",
                    "callee_name_at_call_site": "fabs",
                    "callee_resolved_key": "fabs",
                    "callee_resolved_display_name": "fabs",
                    "line": 286
                },
                {
                    "callee_expression": "fabs(temp_diff)",
                    "callee_name_at_call_site": "fabs",
                    "callee_resolved_key": "fabs",
                    "callee_resolved_display_name": "fabs",
                    "line": 288
                },
                {
                    "callee_expression": "fabs(temp_diff)",
                    "callee_name_at_call_site": "fabs",
                    "callee_resolved_key": "fabs",
                    "callee_resolved_display_name": "fabs",
                    "line": 291
                }
            ]
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module14ClimateControl28adjustAirDistributionForModeEv",
            "display_signature": "ecu_body_control_module::adjustAirDistributionForMode",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/calimate_control.cpp",
            "line": 309,
            "end_line": 328,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"ClimateControl: AUTO Air Distribution: Changing from %s to %s.\",                  airDistModeToString(current_air_distribution_), airDistModeToString(new_dist_mode)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: AUTO Air Distribution: Changing from %s to %s.\",                  airDistModeToString(current_air_distribution_), airDistModeToString(new_dist_mode)",
                    "line": 324,
                    "raw_log_statement": "LOG_INFO(\"ClimateControl: AUTO Air Distribution: Changing from %s to %s.\",                  airDistModeToString(current_air_distribution_), airDistModeToString(new_dist_mode))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "airDistModeToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module19airDistModeToStringENS_19AirDistributionModeE",
                    "callee_resolved_display_name": "ecu_body_control_module::airDistModeToString",
                    "line": 324
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "airDistModeToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module19airDistModeToStringENS_19AirDistributionModeE",
                    "callee_resolved_display_name": "ecu_body_control_module::airDistModeToString",
                    "line": 324
                }
            ]
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module14ClimateControl24manageAutomaticOperationEv",
            "display_signature": "ecu_body_control_module::manageAutomaticOperation",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/calimate_control.cpp",
            "line": 330,
            "end_line": 361,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"ClimateControl: Managing automatic climate operation. Target: %.1fC, Interior: %.1fC, Exterior: %.1fC.\",              target_temperature_celsius_, current_interior_temperature_celsius_, current_exterior_temperature_celsius_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: Managing automatic climate operation. Target: %.1fC, Interior: %.1fC, Exterior: %.1fC.\",              target_temperature_celsius_, current_interior_temperature_celsius_, current_exterior_temperature_celsius_",
                    "line": 333,
                    "raw_log_statement": "LOG_INFO(\"ClimateControl: Managing automatic climate operation. Target: %.1fC, Interior: %.1fC, Exterior: %.1fC.\",              target_temperature_celsius_, current_interior_temperature_celsius_, current_exterior_temperature_celsius_)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"ClimateControl: AUTO mode requesting AC ON.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: AUTO mode requesting AC ON.\"",
                    "line": 344,
                    "raw_log_statement": "LOG_INFO(\"ClimateControl: AUTO mode requesting AC ON.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"ClimateControl: AUTO mode requesting AC OFF (heating phase).\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: AUTO mode requesting AC OFF (heating phase).\"",
                    "line": 351,
                    "raw_log_statement": "LOG_INFO(\"ClimateControl: AUTO mode requesting AC OFF (heating phase).\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"ClimateControl: AUTO mode set fan to 0. System effectively OFF.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: AUTO mode set fan to 0. System effectively OFF.\"",
                    "line": 359,
                    "raw_log_statement": "LOG_INFO(\"ClimateControl: AUTO mode set fan to 0. System effectively OFF.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "adjustFanForTemperature()",
                    "callee_name_at_call_site": "adjustFanForTemperature",
                    "callee_resolved_key": "_ZN23ecu_body_control_module14ClimateControl23adjustFanForTemperatureEv",
                    "callee_resolved_display_name": "ecu_body_control_module::adjustFanForTemperature",
                    "line": 336
                },
                {
                    "callee_expression": "adjustAirDistributionForMode()",
                    "callee_name_at_call_site": "adjustAirDistributionForMode",
                    "callee_resolved_key": "_ZN23ecu_body_control_module14ClimateControl28adjustAirDistributionForModeEv",
                    "callee_resolved_display_name": "ecu_body_control_module::adjustAirDistributionForMode",
                    "line": 337
                }
            ]
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module14ClimateControl25simulateTemperatureChangeEv",
            "display_signature": "ecu_body_control_module::simulateTemperatureChange",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/calimate_control.cpp",
            "line": 363,
            "end_line": 405,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ClimateControl: Interior temperature simulated to %.1fC. (Rate: %.2f, Ext: %.1fC)\",               current_interior_temperature_celsius_, rate_of_change, current_exterior_temperature_celsius_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: Interior temperature simulated to %.1fC. (Rate: %.2f, Ext: %.1fC)\",               current_interior_temperature_celsius_, rate_of_change, current_exterior_temperature_celsius_",
                    "line": 403,
                    "raw_log_statement": "LOG_DEBUG(\"ClimateControl: Interior temperature simulated to %.1fC. (Rate: %.2f, Ext: %.1fC)\",               current_interior_temperature_celsius_, rate_of_change, current_exterior_temperature_celsius_)"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module14ClimateControl18updateClimateStateERK12VehicleStateRK10SensorDataS6_",
            "display_signature": "ecu_body_control_module::updateClimateState",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/calimate_control.cpp",
            "line": 408,
            "end_line": 459,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ClimateControl: Updating climate state. AutoMode: %s, Target: %.1fC, Fan: %d, AC Req: %s\",               auto_mode_enabled_ ? \"ON\" : \"OFF\", target_temperature_celsius_, fan_speed_level_, ac_requested_by_user_ ? \"ON\" : \"OFF\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: Updating climate state. AutoMode: %s, Target: %.1fC, Fan: %d, AC Req: %s\",               auto_mode_enabled_ ? \"ON\" : \"OFF\", target_temperature_celsius_, fan_speed_level_, ac_requested_by_user_ ? \"ON\" : \"OFF\"",
                    "line": 411,
                    "raw_log_statement": "LOG_DEBUG(\"ClimateControl: Updating climate state. AutoMode: %s, Target: %.1fC, Fan: %d, AC Req: %s\",               auto_mode_enabled_ ? \"ON\" : \"OFF\", target_temperature_celsius_, fan_speed_level_, ac_requested_by_user_ ? \"ON\" : \"OFF\")"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ClimateControl: Simulated high engine load detected.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: Simulated high engine load detected.\"",
                    "line": 426,
                    "raw_log_statement": "LOG_DEBUG(\"ClimateControl: Simulated high engine load detected.\")"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ClimateControl: Fan is off, ensuring air distribution is also OFF.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: Fan is off, ensuring air distribution is also OFF.\"",
                    "line": 451,
                    "raw_log_statement": "LOG_DEBUG(\"ClimateControl: Fan is off, ensuring air distribution is also OFF.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"ClimateControl: Update cycle complete. Interior: %.1fC, Fan: %d, AC: %s, Dist: %s\",              current_interior_temperature_celsius_, fan_speed_level_,              acStatusToString(ac_compressor_status_), airDistModeToString(current_air_distribution_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ClimateControl: Update cycle complete. Interior: %.1fC, Fan: %d, AC: %s, Dist: %s\",              current_interior_temperature_celsius_, fan_speed_level_,              acStatusToString(ac_compressor_status_), airDistModeToString(current_air_distribution_)",
                    "line": 456,
                    "raw_log_statement": "LOG_INFO(\"ClimateControl: Update cycle complete. Interior: %.1fC, Fan: %d, AC: %s, Dist: %s\",              current_interior_temperature_celsius_, fan_speed_level_,              acStatusToString(ac_compressor_status_), airDistModeToString(current_air_distribution_))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "manageAutomaticOperation()",
                    "callee_name_at_call_site": "manageAutomaticOperation",
                    "callee_resolved_key": "_ZN23ecu_body_control_module14ClimateControl24manageAutomaticOperationEv",
                    "callee_resolved_display_name": "ecu_body_control_module::manageAutomaticOperation",
                    "line": 430
                },
                {
                    "callee_expression": "controlACCompressor(engine_is_running, high_engine_load)",
                    "callee_name_at_call_site": "controlACCompressor",
                    "callee_resolved_key": "_ZN23ecu_body_control_module14ClimateControl19controlACCompressorEbb",
                    "callee_resolved_display_name": "ecu_body_control_module::controlACCompressor",
                    "line": 434
                },
                {
                    "callee_expression": "simulateTemperatureChange()",
                    "callee_name_at_call_site": "simulateTemperatureChange",
                    "callee_resolved_key": "_ZN23ecu_body_control_module14ClimateControl25simulateTemperatureChangeEv",
                    "callee_resolved_display_name": "ecu_body_control_module::simulateTemperatureChange",
                    "line": 440
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "acStatusToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16acStatusToStringENS_18ACCompressorStatusE",
                    "callee_resolved_display_name": "ecu_body_control_module::acStatusToString",
                    "line": 456
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "airDistModeToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module19airDistModeToStringENS_19AirDistributionModeE",
                    "callee_resolved_display_name": "ecu_body_control_module::airDistModeToString",
                    "line": 456
                }
            ]
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module17windowPosToStringENS_14WindowPositionE",
            "display_signature": "ecu_body_control_module::windowPosToString",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/window_control.cpp",
            "line": 11,
            "end_line": 22,
            "logs_in_order": [],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module16windowIdToStringENS_8WindowIDE",
            "display_signature": "ecu_body_control_module::windowIdToString",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/window_control.cpp",
            "line": 24,
            "end_line": 33,
            "logs_in_order": [],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module13WindowControlC1EPN20ecu_power_management12PowerMonitorE",
            "display_signature": "ecu_body_control_module::WindowControl",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/window_control.cpp",
            "line": 36,
            "end_line": 51,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"WindowControl: Initializing...\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Initializing...\"",
                    "line": 39,
                    "raw_log_statement": "LOG_INFO(\"WindowControl: Initializing...\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"WindowControl: PowerMonitor service is NULL. Window operations might be affected by power availability.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: PowerMonitor service is NULL. Window operations might be affected by power availability.\"",
                    "line": 41,
                    "raw_log_statement": "LOG_WARNING(\"WindowControl: PowerMonitor service is NULL. Window operations might be affected by power availability.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"WindowControl: Initialization complete. %zu windows registered.\", windows_.size()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Initialization complete. %zu windows registered.\", windows_.size()",
                    "line": 50,
                    "raw_log_statement": "LOG_INFO(\"WindowControl: Initialization complete. %zu windows registered.\", windows_.size())"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module13WindowControlD1Ev",
            "display_signature": "ecu_body_control_module::~WindowControl",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/window_control.cpp",
            "line": 53,
            "end_line": 55,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"WindowControl: Shutting down.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Shutting down.\"",
                    "line": 54,
                    "raw_log_statement": "LOG_INFO(\"WindowControl: Shutting down.\")"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module13WindowControl10findWindowENS_8WindowIDE",
            "display_signature": "ecu_body_control_module::findWindow",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/window_control.cpp",
            "line": 57,
            "end_line": 65,
            "logs_in_order": [
                {
                    "level": "WARNING",
                    "log_format_string": "\"WindowControl: findWindow: WindowID %s not found.\", windowIdToString(id)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: findWindow: WindowID %s not found.\", windowIdToString(id)",
                    "line": 63,
                    "raw_log_statement": "LOG_WARNING(\"WindowControl: findWindow: WindowID %s not found.\", windowIdToString(id))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowIdToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16windowIdToStringENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowIdToString",
                    "line": 63
                }
            ]
        },
        {
            "function_id_key": "_ZNK23ecu_body_control_module13WindowControl10findWindowENS_8WindowIDE",
            "display_signature": "ecu_body_control_module::findWindow",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/window_control.cpp",
            "line": 67,
            "end_line": 75,
            "logs_in_order": [
                {
                    "level": "WARNING",
                    "log_format_string": "\"WindowControl: findWindow (const): WindowID %s not found.\", windowIdToString(id)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: findWindow (const): WindowID %s not found.\", windowIdToString(id)",
                    "line": 73,
                    "raw_log_statement": "LOG_WARNING(\"WindowControl: findWindow (const): WindowID %s not found.\", windowIdToString(id))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowIdToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16windowIdToStringENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowIdToString",
                    "line": 73
                }
            ]
        },
        {
            "function_id_key": "_ZNK23ecu_body_control_module13WindowControl16canOperateWindowERKNS_17SingleWindowStateEb",
            "display_signature": "ecu_body_control_module::canOperateWindow",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/window_control.cpp",
            "line": 77,
            "end_line": 104,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"WindowControl: Operation for window %s denied by driver master lock.\", windowIdToString(window.id)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Operation for window %s denied by driver master lock.\", windowIdToString(window.id)",
                    "line": 79,
                    "raw_log_statement": "LOG_INFO(\"WindowControl: Operation for window %s denied by driver master lock.\", windowIdToString(window.id))"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"WindowControl: Power system unstable. Window %s operation might be slow or denied.\", windowIdToString(window.id)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Power system unstable. Window %s operation might be slow or denied.\", windowIdToString(window.id)",
                    "line": 90,
                    "raw_log_statement": "LOG_WARNING(\"WindowControl: Power system unstable. Window %s operation might be slow or denied.\", windowIdToString(window.id))"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"WindowControl: Battery too low (%.2fV) to operate window %s.\",                       power_monitor_->getBatteryVoltage(), windowIdToString(window.id)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Battery too low (%.2fV) to operate window %s.\",                       power_monitor_->getBatteryVoltage(), windowIdToString(window.id)",
                    "line": 92,
                    "raw_log_statement": "LOG_ERROR(\"WindowControl: Battery too low (%.2fV) to operate window %s.\",                       power_monitor_->getBatteryVoltage(), windowIdToString(window.id))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowIdToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16windowIdToStringENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowIdToString",
                    "line": 79
                },
                {
                    "callee_expression": "power_monitor_->isPowerStable()",
                    "callee_name_at_call_site": "isPowerStable",
                    "callee_resolved_key": "_ZNK20ecu_power_management12PowerMonitor13isPowerStableEv",
                    "callee_resolved_display_name": "ecu_power_management::PowerMonitor::isPowerStable",
                    "line": 89
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowIdToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16windowIdToStringENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowIdToString",
                    "line": 90
                },
                {
                    "callee_expression": "power_monitor_->getBatteryVoltage()",
                    "callee_name_at_call_site": "getBatteryVoltage",
                    "callee_resolved_key": "_ZNK20ecu_power_management12PowerMonitor17getBatteryVoltageEv",
                    "callee_resolved_display_name": "ecu_power_management::PowerMonitor::getBatteryVoltage",
                    "line": 91
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "getBatteryVoltage",
                    "callee_resolved_key": "_ZNK20ecu_power_management12PowerMonitor17getBatteryVoltageEv",
                    "callee_resolved_display_name": "ecu_power_management::PowerMonitor::getBatteryVoltage",
                    "line": 92
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowIdToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16windowIdToStringENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowIdToString",
                    "line": 92
                }
            ]
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module13WindowControl10moveWindowENS_8WindowIDEdb",
            "display_signature": "ecu_body_control_module::moveWindow",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/window_control.cpp",
            "line": 107,
            "end_line": 159,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"WindowControl: Request to move window %s to %.0f%%, one-touch: %s.\",              windowIdToString(id), target_position_percent * 100.0, one_touch ? \"YES\" : \"NO\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Request to move window %s to %.0f%%, one-touch: %s.\",              windowIdToString(id), target_position_percent * 100.0, one_touch ? \"YES\" : \"NO\"",
                    "line": 108,
                    "raw_log_statement": "LOG_INFO(\"WindowControl: Request to move window %s to %.0f%%, one-touch: %s.\",              windowIdToString(id), target_position_percent * 100.0, one_touch ? \"YES\" : \"NO\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"WindowControl: Move request for window %s denied by operational checks.\", windowIdToString(id)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Move request for window %s denied by operational checks.\", windowIdToString(id)",
                    "line": 130,
                    "raw_log_statement": "LOG_WARNING(\"WindowControl: Move request for window %s denied by operational checks.\", windowIdToString(id))"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"WindowControl: Window %s already moving towards target %s.\",                   windowIdToString(id), windowPosToString(target_enum_pos)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Window %s already moving towards target %s.\",                   windowIdToString(id), windowPosToString(target_enum_pos)",
                    "line": 135,
                    "raw_log_statement": "LOG_DEBUG(\"WindowControl: Window %s already moving towards target %s.\",                   windowIdToString(id), windowPosToString(target_enum_pos))"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"WindowControl: Window %s motor activated. Current: %s, Target: %s.\",              windowIdToString(id), windowPosToString(window->current_pos), windowPosToString(window->target_pos)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Window %s motor activated. Current: %s, Target: %s.\",              windowIdToString(id), windowPosToString(window->current_pos), windowPosToString(window->target_pos)",
                    "line": 145,
                    "raw_log_statement": "LOG_INFO(\"WindowControl: Window %s motor activated. Current: %s, Target: %s.\",              windowIdToString(id), windowPosToString(window->current_pos), windowPosToString(window->target_pos))"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"WindowControl: Non-one-touch for %s. Motor will stop if not periodically re-commanded (simulated).\", windowIdToString(id)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Non-one-touch for %s. Motor will stop if not periodically re-commanded (simulated).\", windowIdToString(id)",
                    "line": 153,
                    "raw_log_statement": "LOG_DEBUG(\"WindowControl: Non-one-touch for %s. Motor will stop if not periodically re-commanded (simulated).\", windowIdToString(id))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowIdToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16windowIdToStringENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowIdToString",
                    "line": 108
                },
                {
                    "callee_expression": "findWindow(id)",
                    "callee_name_at_call_site": "findWindow",
                    "callee_resolved_key": "_ZN23ecu_body_control_module13WindowControl10findWindowENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::findWindow",
                    "line": 111
                },
                {
                    "callee_expression": "canOperateWindow(*window, opening)",
                    "callee_name_at_call_site": "canOperateWindow",
                    "callee_resolved_key": "_ZNK23ecu_body_control_module13WindowControl16canOperateWindowERKNS_17SingleWindowStateEb",
                    "callee_resolved_display_name": "ecu_body_control_module::canOperateWindow",
                    "line": 129
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowIdToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16windowIdToStringENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowIdToString",
                    "line": 130
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowIdToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16windowIdToStringENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowIdToString",
                    "line": 135
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowPosToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module17windowPosToStringENS_14WindowPositionE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowPosToString",
                    "line": 135
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowIdToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16windowIdToStringENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowIdToString",
                    "line": 145
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowPosToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module17windowPosToStringENS_14WindowPositionE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowPosToString",
                    "line": 145
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowPosToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module17windowPosToStringENS_14WindowPositionE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowPosToString",
                    "line": 145
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowIdToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16windowIdToStringENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowIdToString",
                    "line": 153
                }
            ]
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module13WindowControl18stopWindowMovementENS_8WindowIDE",
            "display_signature": "ecu_body_control_module::stopWindowMovement",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/window_control.cpp",
            "line": 161,
            "end_line": 178,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"WindowControl: Request to STOP movement for window %s.\", windowIdToString(id)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Request to STOP movement for window %s.\", windowIdToString(id)",
                    "line": 162,
                    "raw_log_statement": "LOG_INFO(\"WindowControl: Request to STOP movement for window %s.\", windowIdToString(id))"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"WindowControl: Window %s motor is not active. No action needed for stop.\", windowIdToString(id)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Window %s motor is not active. No action needed for stop.\", windowIdToString(id)",
                    "line": 169,
                    "raw_log_statement": "LOG_DEBUG(\"WindowControl: Window %s motor is not active. No action needed for stop.\", windowIdToString(id))"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"WindowControl: Window %s motor DEACTIVATED by stop request.\", windowIdToString(id)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Window %s motor DEACTIVATED by stop request.\", windowIdToString(id)",
                    "line": 176,
                    "raw_log_statement": "LOG_INFO(\"WindowControl: Window %s motor DEACTIVATED by stop request.\", windowIdToString(id))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowIdToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16windowIdToStringENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowIdToString",
                    "line": 162
                },
                {
                    "callee_expression": "findWindow(id)",
                    "callee_name_at_call_site": "findWindow",
                    "callee_resolved_key": "_ZN23ecu_body_control_module13WindowControl10findWindowENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::findWindow",
                    "line": 163
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowIdToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16windowIdToStringENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowIdToString",
                    "line": 169
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowIdToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16windowIdToStringENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowIdToString",
                    "line": 176
                }
            ]
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module13WindowControl12setChildLockENS_8WindowIDEb",
            "display_signature": "ecu_body_control_module::setChildLock",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/window_control.cpp",
            "line": 180,
            "end_line": 190,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"WindowControl: Child lock for window %s set to %s (SIMULATED - not fully implemented).\",              windowIdToString(id), locked ? \"LOCKED\" : \"UNLOCKED\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Child lock for window %s set to %s (SIMULATED - not fully implemented).\",              windowIdToString(id), locked ? \"LOCKED\" : \"UNLOCKED\"",
                    "line": 182,
                    "raw_log_statement": "LOG_INFO(\"WindowControl: Child lock for window %s set to %s (SIMULATED - not fully implemented).\",              windowIdToString(id), locked ? \"LOCKED\" : \"UNLOCKED\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"WindowControl: Child lock typically applies to rear windows or sunroof. Ignored for %s.\", windowIdToString(id)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Child lock typically applies to rear windows or sunroof. Ignored for %s.\", windowIdToString(id)",
                    "line": 188,
                    "raw_log_statement": "LOG_WARNING(\"WindowControl: Child lock typically applies to rear windows or sunroof. Ignored for %s.\", windowIdToString(id))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowIdToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16windowIdToStringENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowIdToString",
                    "line": 182
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowIdToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16windowIdToStringENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowIdToString",
                    "line": 188
                }
            ]
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module13WindowControl17setAllWindowsLockEb",
            "display_signature": "ecu_body_control_module::setAllWindowsLock",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/window_control.cpp",
            "line": 192,
            "end_line": 206,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"WindowControl: Driver master window lock set to %s.\", locked ? \"LOCKED\" : \"UNLOCKED\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Driver master window lock set to %s.\", locked ? \"LOCKED\" : \"UNLOCKED\"",
                    "line": 193,
                    "raw_log_statement": "LOG_INFO(\"WindowControl: Driver master window lock set to %s.\", locked ? \"LOCKED\" : \"UNLOCKED\")"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"WindowControl: All passenger windows (except driver) are now locked from local operation.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: All passenger windows (except driver) are now locked from local operation.\"",
                    "line": 196,
                    "raw_log_statement": "LOG_DEBUG(\"WindowControl: All passenger windows (except driver) are now locked from local operation.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"WindowControl: Stopping passenger window %s due to master lock activation.\", windowIdToString(win.id)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Stopping passenger window %s due to master lock activation.\", windowIdToString(win.id)",
                    "line": 200,
                    "raw_log_statement": "LOG_INFO(\"WindowControl: Stopping passenger window %s due to master lock activation.\", windowIdToString(win.id))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowIdToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16windowIdToStringENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowIdToString",
                    "line": 200
                },
                {
                    "callee_expression": "stopWindowMovement(win.id)",
                    "callee_name_at_call_site": "stopWindowMovement",
                    "callee_resolved_key": "_ZN23ecu_body_control_module13WindowControl18stopWindowMovementENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::stopWindowMovement",
                    "line": 201
                }
            ]
        },
        {
            "function_id_key": "_ZNK23ecu_body_control_module13WindowControl17getWindowPositionENS_8WindowIDE",
            "display_signature": "ecu_body_control_module::getWindowPosition",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/window_control.cpp",
            "line": 208,
            "end_line": 216,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"WindowControl: Position of window %s is %s.\", windowIdToString(id), windowPosToString(window->current_pos)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Position of window %s is %s.\", windowIdToString(id), windowPosToString(window->current_pos)",
                    "line": 211,
                    "raw_log_statement": "LOG_DEBUG(\"WindowControl: Position of window %s is %s.\", windowIdToString(id), windowPosToString(window->current_pos))"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"WindowControl: getWindowPosition: Could not find window %s. Reporting FULLY_CLOSED.\", windowIdToString(id)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: getWindowPosition: Could not find window %s. Reporting FULLY_CLOSED.\", windowIdToString(id)",
                    "line": 214,
                    "raw_log_statement": "LOG_WARNING(\"WindowControl: getWindowPosition: Could not find window %s. Reporting FULLY_CLOSED.\", windowIdToString(id))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "findWindow(id)",
                    "callee_name_at_call_site": "findWindow",
                    "callee_resolved_key": "_ZNK23ecu_body_control_module13WindowControl10findWindowENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::findWindow",
                    "line": 209
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowIdToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16windowIdToStringENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowIdToString",
                    "line": 211
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowPosToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module17windowPosToStringENS_14WindowPositionE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowPosToString",
                    "line": 211
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowIdToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16windowIdToStringENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowIdToString",
                    "line": 214
                }
            ]
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module13WindowControl14checkAntiPinchERNS_17SingleWindowStateE",
            "display_signature": "ecu_body_control_module::checkAntiPinch",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/window_control.cpp",
            "line": 218,
            "end_line": 243,
            "logs_in_order": [
                {
                    "level": "WARNING",
                    "log_format_string": "\"WindowControl: ANTI-PINCH DETECTED for window %s! Reversing direction.\", windowIdToString(window.id)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: ANTI-PINCH DETECTED for window %s! Reversing direction.\", windowIdToString(window.id)",
                    "line": 225,
                    "raw_log_statement": "LOG_WARNING(\"WindowControl: ANTI-PINCH DETECTED for window %s! Reversing direction.\", windowIdToString(window.id))"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"WindowControl: Window %s has detected obstruction %d times. Disabling one-touch for safety.\",                           windowIdToString(window.id), window.obstruction_counter",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Window %s has detected obstruction %d times. Disabling one-touch for safety.\",                           windowIdToString(window.id), window.obstruction_counter",
                    "line": 234,
                    "raw_log_statement": "LOG_ERROR(\"WindowControl: Window %s has detected obstruction %d times. Disabling one-touch for safety.\",                           windowIdToString(window.id), window.obstruction_counter)"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowIdToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16windowIdToStringENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowIdToString",
                    "line": 225
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowIdToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16windowIdToStringENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowIdToString",
                    "line": 234
                }
            ]
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module13WindowControl21simulateMotorMovementERNS_17SingleWindowStateEd",
            "display_signature": "ecu_body_control_module::simulateMotorMovement",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/window_control.cpp",
            "line": 245,
            "end_line": 290,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"WindowControl: Window %s reached target %s (was MOVING_UP). Motor stopped.\",                       windowIdToString(window.id), windowPosToString(window.current_pos)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Window %s reached target %s (was MOVING_UP). Motor stopped.\",                       windowIdToString(window.id), windowPosToString(window.current_pos)",
                    "line": 261,
                    "raw_log_statement": "LOG_INFO(\"WindowControl: Window %s reached target %s (was MOVING_UP). Motor stopped.\",                       windowIdToString(window.id), windowPosToString(window.current_pos))"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"WindowControl: Window %s reached target %s (was MOVING_DOWN). Motor stopped.\",                       windowIdToString(window.id), windowPosToString(window.current_pos)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Window %s reached target %s (was MOVING_DOWN). Motor stopped.\",                       windowIdToString(window.id), windowPosToString(window.current_pos)",
                    "line": 274,
                    "raw_log_statement": "LOG_INFO(\"WindowControl: Window %s reached target %s (was MOVING_DOWN). Motor stopped.\",                       windowIdToString(window.id), windowPosToString(window.current_pos))"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"WindowControl: Window %s reversing due to obstruction. New target: HALF_OPEN.\", windowIdToString(window.id)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Window %s reversing due to obstruction. New target: HALF_OPEN.\", windowIdToString(window.id)",
                    "line": 281,
                    "raw_log_statement": "LOG_DEBUG(\"WindowControl: Window %s reversing due to obstruction. New target: HALF_OPEN.\", windowIdToString(window.id))"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"WindowControl: Window %s moved from %s to %s. Target: %s\",                   windowIdToString(window.id), windowPosToString(old_discrete_pos),                   windowPosToString(window.current_pos), windowPosToString(window.target_pos)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Window %s moved from %s to %s. Target: %s\",                   windowIdToString(window.id), windowPosToString(old_discrete_pos),                   windowPosToString(window.current_pos), windowPosToString(window.target_pos)",
                    "line": 286,
                    "raw_log_statement": "LOG_DEBUG(\"WindowControl: Window %s moved from %s to %s. Target: %s\",                   windowIdToString(window.id), windowPosToString(old_discrete_pos),                   windowPosToString(window.current_pos), windowPosToString(window.target_pos))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowIdToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16windowIdToStringENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowIdToString",
                    "line": 261
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowPosToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module17windowPosToStringENS_14WindowPositionE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowPosToString",
                    "line": 261
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowIdToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16windowIdToStringENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowIdToString",
                    "line": 274
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowPosToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module17windowPosToStringENS_14WindowPositionE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowPosToString",
                    "line": 274
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowIdToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16windowIdToStringENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowIdToString",
                    "line": 281
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowIdToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16windowIdToStringENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowIdToString",
                    "line": 286
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowPosToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module17windowPosToStringENS_14WindowPositionE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowPosToString",
                    "line": 286
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowPosToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module17windowPosToStringENS_14WindowPositionE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowPosToString",
                    "line": 286
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowPosToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module17windowPosToStringENS_14WindowPositionE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowPosToString",
                    "line": 286
                }
            ]
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module13WindowControl18updateWindowStatesEv",
            "display_signature": "ecu_body_control_module::updateWindowStates",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/window_control.cpp",
            "line": 293,
            "end_line": 343,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"WindowControl: Updating all window states...\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Updating all window states...\"",
                    "line": 294,
                    "raw_log_statement": "LOG_DEBUG(\"WindowControl: Updating all window states...\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"WindowControl: Signaled high power load to PowerMonitor due to active window motor(s).\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Signaled high power load to PowerMonitor due to active window motor(s).\"",
                    "line": 301,
                    "raw_log_statement": "LOG_INFO(\"WindowControl: Signaled high power load to PowerMonitor due to active window motor(s).\")"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"WindowControl: Updating active window %s. Current: %s, Target: %s\",                   windowIdToString(window.id), windowPosToString(window.current_pos), windowPosToString(window.target_pos)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Updating active window %s. Current: %s, Target: %s\",                   windowIdToString(window.id), windowPosToString(window.current_pos), windowPosToString(window.target_pos)",
                    "line": 309,
                    "raw_log_statement": "LOG_DEBUG(\"WindowControl: Updating active window %s. Current: %s, Target: %s\",                   windowIdToString(window.id), windowPosToString(window.current_pos), windowPosToString(window.target_pos))"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"WindowControl: Anti-pinch for %s modified state. Continuing update.\", windowIdToString(window.id)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Anti-pinch for %s modified state. Continuing update.\", windowIdToString(window.id)",
                    "line": 318,
                    "raw_log_statement": "LOG_DEBUG(\"WindowControl: Anti-pinch for %s modified state. Continuing update.\", windowIdToString(window.id))"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"WindowControl: Window %s has stopped at %s.\",                       windowIdToString(window.id), windowPosToString(window.current_pos)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Window %s has stopped at %s.\",                       windowIdToString(window.id), windowPosToString(window.current_pos)",
                    "line": 329,
                    "raw_log_statement": "LOG_INFO(\"WindowControl: Window %s has stopped at %s.\",                       windowIdToString(window.id), windowPosToString(window.current_pos))"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"WindowControl: Signaled end of high power load to PowerMonitor as all window motors stopped.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Signaled end of high power load to PowerMonitor as all window motors stopped.\"",
                    "line": 340,
                    "raw_log_statement": "LOG_INFO(\"WindowControl: Signaled end of high power load to PowerMonitor as all window motors stopped.\")"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"WindowControl: Window states update cycle complete.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"WindowControl: Window states update cycle complete.\"",
                    "line": 342,
                    "raw_log_statement": "LOG_DEBUG(\"WindowControl: Window states update cycle complete.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "power_monitor_->simulateHighLoadEvent(true)",
                    "callee_name_at_call_site": "simulateHighLoadEvent",
                    "callee_resolved_key": "_ZN20ecu_power_management12PowerMonitor21simulateHighLoadEventEb",
                    "callee_resolved_display_name": "ecu_power_management::PowerMonitor::simulateHighLoadEvent",
                    "line": 300
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowIdToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16windowIdToStringENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowIdToString",
                    "line": 309
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowPosToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module17windowPosToStringENS_14WindowPositionE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowPosToString",
                    "line": 309
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowPosToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module17windowPosToStringENS_14WindowPositionE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowPosToString",
                    "line": 309
                },
                {
                    "callee_expression": "checkAntiPinch(window)",
                    "callee_name_at_call_site": "checkAntiPinch",
                    "callee_resolved_key": "_ZN23ecu_body_control_module13WindowControl14checkAntiPinchERNS_17SingleWindowStateE",
                    "callee_resolved_display_name": "ecu_body_control_module::checkAntiPinch",
                    "line": 314
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowIdToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16windowIdToStringENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowIdToString",
                    "line": 318
                },
                {
                    "callee_expression": "simulateMotorMovement(window, 0.1)",
                    "callee_name_at_call_site": "simulateMotorMovement",
                    "callee_resolved_key": "_ZN23ecu_body_control_module13WindowControl21simulateMotorMovementERNS_17SingleWindowStateEd",
                    "callee_resolved_display_name": "ecu_body_control_module::simulateMotorMovement",
                    "line": 324
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowIdToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module16windowIdToStringENS_8WindowIDE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowIdToString",
                    "line": 329
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "windowPosToString",
                    "callee_resolved_key": "_ZN23ecu_body_control_module17windowPosToStringENS_14WindowPositionE",
                    "callee_resolved_display_name": "ecu_body_control_module::windowPosToString",
                    "line": 329
                },
                {
                    "callee_expression": "power_monitor_->simulateHighLoadEvent(false)",
                    "callee_name_at_call_site": "simulateHighLoadEvent",
                    "callee_resolved_key": "_ZN20ecu_power_management12PowerMonitor21simulateHighLoadEventEb",
                    "callee_resolved_display_name": "ecu_power_management::PowerMonitor::simulateHighLoadEvent",
                    "line": 339
                }
            ]
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module15LightingControlC1EPN20ecu_power_management12PowerMonitorE",
            "display_signature": "ecu_body_control_module::LightingControl",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/lighting_control.cpp",
            "line": 9,
            "end_line": 36,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"LightingControl: Initializing...\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Initializing...\"",
                    "line": 15,
                    "raw_log_statement": "LOG_INFO(\"LightingControl: Initializing...\")"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"LightingControl: PowerMonitor service is NULL! Lighting functions may be impaired.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: PowerMonitor service is NULL! Lighting functions may be impaired.\"",
                    "line": 17,
                    "raw_log_statement": "LOG_ERROR(\"LightingControl: PowerMonitor service is NULL! Lighting functions may be impaired.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"LightingControl: Initialization complete. %zu light types registered.\", all_lights_.size()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Initialization complete. %zu light types registered.\", all_lights_.size()",
                    "line": 34,
                    "raw_log_statement": "LOG_INFO(\"LightingControl: Initialization complete. %zu light types registered.\", all_lights_.size())"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "performBulbCheck()",
                    "callee_name_at_call_site": "performBulbCheck",
                    "callee_resolved_key": "_ZN23ecu_body_control_module15LightingControl16performBulbCheckEv",
                    "callee_resolved_display_name": "ecu_body_control_module::LightingControl::performBulbCheck",
                    "line": 35
                }
            ]
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module15LightingControlD1Ev",
            "display_signature": "ecu_body_control_module::~LightingControl",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/lighting_control.cpp",
            "line": 38,
            "end_line": 40,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"LightingControl: Shutting down.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Shutting down.\"",
                    "line": 39,
                    "raw_log_statement": "LOG_INFO(\"LightingControl: Shutting down.\")"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module15LightingControl8findBulbENS_9LightTypeE",
            "display_signature": "ecu_body_control_module::findBulb",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/lighting_control.cpp",
            "line": 42,
            "end_line": 50,
            "logs_in_order": [
                {
                    "level": "WARNING",
                    "log_format_string": "\"LightingControl: findBulb: LightType %d not found.\", static_cast<int>(type)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: findBulb: LightType %d not found.\", static_cast<int>(type)",
                    "line": 48,
                    "raw_log_statement": "LOG_WARNING(\"LightingControl: findBulb: LightType %d not found.\", static_cast<int>(type))"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZNK23ecu_body_control_module15LightingControl8findBulbENS_9LightTypeE",
            "display_signature": "ecu_body_control_module::findBulb",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/lighting_control.cpp",
            "line": 52,
            "end_line": 61,
            "logs_in_order": [
                {
                    "level": "WARNING",
                    "log_format_string": "\"LightingControl: findBulb (const): LightType %d not found.\", static_cast<int>(type)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: findBulb (const): LightType %d not found.\", static_cast<int>(type)",
                    "line": 59,
                    "raw_log_statement": "LOG_WARNING(\"LightingControl: findBulb (const): LightType %d not found.\", static_cast<int>(type))"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module15LightingControl16setSpecificLightENS_9LightTypeEb",
            "display_signature": "ecu_body_control_module::setSpecificLight",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/lighting_control.cpp",
            "line": 64,
            "end_line": 114,
            "logs_in_order": [
                {
                    "level": "ERROR",
                    "log_format_string": "\"LightingControl: Cannot set state for unknown LightType %d.\", static_cast<int>(type)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Cannot set state for unknown LightType %d.\", static_cast<int>(type)",
                    "line": 67,
                    "raw_log_statement": "LOG_ERROR(\"LightingControl: Cannot set state for unknown LightType %d.\", static_cast<int>(type))"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"LightingControl: Cannot turn %s LightType %d. It's faulty (Status: %d).\",                     on ? \"ON\" : \"OFF\", static_cast<int>(type), static_cast<int>(bulb->status)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Cannot turn %s LightType %d. It's faulty (Status: %d).\",                     on ? \"ON\" : \"OFF\", static_cast<int>(type), static_cast<int>(bulb->status)",
                    "line": 72,
                    "raw_log_statement": "LOG_WARNING(\"LightingControl: Cannot turn %s LightType %d. It's faulty (Status: %d).\",                     on ? \"ON\" : \"OFF\", static_cast<int>(type), static_cast<int>(bulb->status))"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"LightingControl: LightType %d already %s.\", static_cast<int>(type), on ? \"ON\" : \"OFF\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: LightType %d already %s.\", static_cast<int>(type), on ? \"ON\" : \"OFF\"",
                    "line": 79,
                    "raw_log_statement": "LOG_DEBUG(\"LightingControl: LightType %d already %s.\", static_cast<int>(type), on ? \"ON\" : \"OFF\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"LightingControl: Power system unstable. Deferring turning ON LightType %d.\", static_cast<int>(type)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Power system unstable. Deferring turning ON LightType %d.\", static_cast<int>(type)",
                    "line": 86,
                    "raw_log_statement": "LOG_WARNING(\"LightingControl: Power system unstable. Deferring turning ON LightType %d.\", static_cast<int>(type))"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"LightingControl: CRITICAL: Battery too low (%.2fV) to activate LightType %d.\", power_monitor_->getBatteryVoltage(), static_cast<int>(type)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: CRITICAL: Battery too low (%.2fV) to activate LightType %d.\", power_monitor_->getBatteryVoltage(), static_cast<int>(type)",
                    "line": 89,
                    "raw_log_statement": "LOG_ERROR(\"LightingControl: CRITICAL: Battery too low (%.2fV) to activate LightType %d.\", power_monitor_->getBatteryVoltage(), static_cast<int>(type))"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"LightingControl: LightType %d turned %s.\", static_cast<int>(type), on ? \"ON\" : \"OFF\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: LightType %d turned %s.\", static_cast<int>(type), on ? \"ON\" : \"OFF\"",
                    "line": 96,
                    "raw_log_statement": "LOG_INFO(\"LightingControl: LightType %d turned %s.\", static_cast<int>(type), on ? \"ON\" : \"OFF\")"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"LightingControl: High beams activated, ensuring low beams are also ON.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: High beams activated, ensuring low beams are also ON.\"",
                    "line": 102,
                    "raw_log_statement": "LOG_DEBUG(\"LightingControl: High beams activated, ensuring low beams are also ON.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"LightingControl: Low beams turned OFF while high beams were ON. Turning OFF high beams for safety.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Low beams turned OFF while high beams were ON. Turning OFF high beams for safety.\"",
                    "line": 110,
                    "raw_log_statement": "LOG_INFO(\"LightingControl: Low beams turned OFF while high beams were ON. Turning OFF high beams for safety.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "findBulb(type)",
                    "callee_name_at_call_site": "findBulb",
                    "callee_resolved_key": "_ZN23ecu_body_control_module15LightingControl8findBulbENS_9LightTypeE",
                    "callee_resolved_display_name": "ecu_body_control_module::findBulb",
                    "line": 65
                },
                {
                    "callee_expression": "power_monitor_->isPowerStable()",
                    "callee_name_at_call_site": "isPowerStable",
                    "callee_resolved_key": "_ZNK20ecu_power_management12PowerMonitor13isPowerStableEv",
                    "callee_resolved_display_name": "ecu_power_management::PowerMonitor::isPowerStable",
                    "line": 85
                },
                {
                    "callee_expression": "power_monitor_->getBatteryVoltage()",
                    "callee_name_at_call_site": "getBatteryVoltage",
                    "callee_resolved_key": "_ZNK20ecu_power_management12PowerMonitor17getBatteryVoltageEv",
                    "callee_resolved_display_name": "ecu_power_management::PowerMonitor::getBatteryVoltage",
                    "line": 88
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "getBatteryVoltage",
                    "callee_resolved_key": "_ZNK20ecu_power_management12PowerMonitor17getBatteryVoltageEv",
                    "callee_resolved_display_name": "ecu_power_management::PowerMonitor::getBatteryVoltage",
                    "line": 89
                },
                {
                    "callee_expression": "findBulb(LightType::HEADLIGHT_LOW)",
                    "callee_name_at_call_site": "findBulb",
                    "callee_resolved_key": "_ZN23ecu_body_control_module15LightingControl8findBulbENS_9LightTypeE",
                    "callee_resolved_display_name": "ecu_body_control_module::findBulb",
                    "line": 100
                },
                {
                    "callee_expression": "setSpecificLight(LightType::HEADLIGHT_LOW, true)",
                    "callee_name_at_call_site": "setSpecificLight",
                    "callee_resolved_key": "_ZN23ecu_body_control_module15LightingControl16setSpecificLightENS_9LightTypeEb",
                    "callee_resolved_display_name": "ecu_body_control_module::setSpecificLight",
                    "line": 103
                },
                {
                    "callee_expression": "findBulb(LightType::HEADLIGHT_HIGH)",
                    "callee_name_at_call_site": "findBulb",
                    "callee_resolved_key": "_ZN23ecu_body_control_module15LightingControl8findBulbENS_9LightTypeE",
                    "callee_resolved_display_name": "ecu_body_control_module::findBulb",
                    "line": 108
                },
                {
                    "callee_expression": "setSpecificLight(LightType::HEADLIGHT_HIGH, false)",
                    "callee_name_at_call_site": "setSpecificLight",
                    "callee_resolved_key": "_ZN23ecu_body_control_module15LightingControl16setSpecificLightENS_9LightTypeEb",
                    "callee_resolved_display_name": "ecu_body_control_module::setSpecificLight",
                    "line": 111
                }
            ]
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module15LightingControl13setLightStateENS_9LightTypeEb",
            "display_signature": "ecu_body_control_module::setLightState",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/lighting_control.cpp",
            "line": 117,
            "end_line": 143,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"LightingControl: Request to set LightType %d to %s.\", static_cast<int>(type), on ? \"ON\" : \"OFF\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Request to set LightType %d to %s.\", static_cast<int>(type), on ? \"ON\" : \"OFF\"",
                    "line": 118,
                    "raw_log_statement": "LOG_DEBUG(\"LightingControl: Request to set LightType %d to %s.\", static_cast<int>(type), on ? \"ON\" : \"OFF\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"LightingControl: Hazard lights are active. Ignoring individual indicator request for LightType %d.\", static_cast<int>(type)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Hazard lights are active. Ignoring individual indicator request for LightType %d.\", static_cast<int>(type)",
                    "line": 122,
                    "raw_log_statement": "LOG_INFO(\"LightingControl: Hazard lights are active. Ignoring individual indicator request for LightType %d.\", static_cast<int>(type))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "setSpecificLight(LightType::INDICATOR_RIGHT, false)",
                    "callee_name_at_call_site": "setSpecificLight",
                    "callee_resolved_key": "_ZN23ecu_body_control_module15LightingControl16setSpecificLightENS_9LightTypeEb",
                    "callee_resolved_display_name": "ecu_body_control_module::setSpecificLight",
                    "line": 128
                },
                {
                    "callee_expression": "setSpecificLight(LightType::INDICATOR_LEFT, false)",
                    "callee_name_at_call_site": "setSpecificLight",
                    "callee_resolved_key": "_ZN23ecu_body_control_module15LightingControl16setSpecificLightENS_9LightTypeEb",
                    "callee_resolved_display_name": "ecu_body_control_module::setSpecificLight",
                    "line": 132
                },
                {
                    "callee_expression": "setSpecificLight(type, on)",
                    "callee_name_at_call_site": "setSpecificLight",
                    "callee_resolved_key": "_ZN23ecu_body_control_module15LightingControl16setSpecificLightENS_9LightTypeEb",
                    "callee_resolved_display_name": "ecu_body_control_module::setSpecificLight",
                    "line": 141
                }
            ]
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module15LightingControl20activateHazardLightsEb",
            "display_signature": "ecu_body_control_module::activateHazardLights",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/lighting_control.cpp",
            "line": 145,
            "end_line": 174,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"LightingControl: Hazard lights requested to %s.\", activate ? \"ACTIVATE\" : \"DEACTIVATE\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Hazard lights requested to %s.\", activate ? \"ACTIVATE\" : \"DEACTIVATE\"",
                    "line": 146,
                    "raw_log_statement": "LOG_INFO(\"LightingControl: Hazard lights requested to %s.\", activate ? \"ACTIVATE\" : \"DEACTIVATE\")"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"LightingControl: Hazard lights already in requested state (%s).\", activate ? \"ACTIVE\" : \"INACTIVE\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Hazard lights already in requested state (%s).\", activate ? \"ACTIVE\" : \"INACTIVE\"",
                    "line": 148,
                    "raw_log_statement": "LOG_DEBUG(\"LightingControl: Hazard lights already in requested state (%s).\", activate ? \"ACTIVE\" : \"INACTIVE\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"LightingControl: Activating hazard sequence (both indicators ON).\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Activating hazard sequence (both indicators ON).\"",
                    "line": 164,
                    "raw_log_statement": "LOG_INFO(\"LightingControl: Activating hazard sequence (both indicators ON).\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"LightingControl: Deactivating hazard sequence (both indicators OFF).\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Deactivating hazard sequence (both indicators OFF).\"",
                    "line": 169,
                    "raw_log_statement": "LOG_INFO(\"LightingControl: Deactivating hazard sequence (both indicators OFF).\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "setSpecificLight(LightType::INDICATOR_LEFT, false)",
                    "callee_name_at_call_site": "setSpecificLight",
                    "callee_resolved_key": "_ZN23ecu_body_control_module15LightingControl16setSpecificLightENS_9LightTypeEb",
                    "callee_resolved_display_name": "ecu_body_control_module::setSpecificLight",
                    "line": 156
                },
                {
                    "callee_expression": "setSpecificLight(LightType::INDICATOR_RIGHT, false)",
                    "callee_name_at_call_site": "setSpecificLight",
                    "callee_resolved_key": "_ZN23ecu_body_control_module15LightingControl16setSpecificLightENS_9LightTypeEb",
                    "callee_resolved_display_name": "ecu_body_control_module::setSpecificLight",
                    "line": 160
                },
                {
                    "callee_expression": "setSpecificLight(LightType::INDICATOR_LEFT, true)",
                    "callee_name_at_call_site": "setSpecificLight",
                    "callee_resolved_key": "_ZN23ecu_body_control_module15LightingControl16setSpecificLightENS_9LightTypeEb",
                    "callee_resolved_display_name": "ecu_body_control_module::setSpecificLight",
                    "line": 165
                },
                {
                    "callee_expression": "setSpecificLight(LightType::INDICATOR_RIGHT, true)",
                    "callee_name_at_call_site": "setSpecificLight",
                    "callee_resolved_key": "_ZN23ecu_body_control_module15LightingControl16setSpecificLightENS_9LightTypeEb",
                    "callee_resolved_display_name": "ecu_body_control_module::setSpecificLight",
                    "line": 166
                },
                {
                    "callee_expression": "setSpecificLight(LightType::INDICATOR_LEFT, false)",
                    "callee_name_at_call_site": "setSpecificLight",
                    "callee_resolved_key": "_ZN23ecu_body_control_module15LightingControl16setSpecificLightENS_9LightTypeEb",
                    "callee_resolved_display_name": "ecu_body_control_module::setSpecificLight",
                    "line": 170
                },
                {
                    "callee_expression": "setSpecificLight(LightType::INDICATOR_RIGHT, false)",
                    "callee_name_at_call_site": "setSpecificLight",
                    "callee_resolved_key": "_ZN23ecu_body_control_module15LightingControl16setSpecificLightENS_9LightTypeEb",
                    "callee_resolved_display_name": "ecu_body_control_module::setSpecificLight",
                    "line": 171
                }
            ]
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module15LightingControl17activateIndicatorENS_9LightTypeEb",
            "display_signature": "ecu_body_control_module::activateIndicator",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/lighting_control.cpp",
            "line": 176,
            "end_line": 192,
            "logs_in_order": [
                {
                    "level": "ERROR",
                    "log_format_string": "\"LightingControl: Invalid LightType %d for indicator.\", static_cast<int>(indicator_type)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Invalid LightType %d for indicator.\", static_cast<int>(indicator_type)",
                    "line": 178,
                    "raw_log_statement": "LOG_ERROR(\"LightingControl: Invalid LightType %d for indicator.\", static_cast<int>(indicator_type))"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"LightingControl: Indicator %s requested to %s.\",              (indicator_type == LightType::INDICATOR_LEFT ? \"LEFT\" : \"RIGHT\"),              activate ? \"ACTIVATE\" : \"DEACTIVATE\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Indicator %s requested to %s.\",              (indicator_type == LightType::INDICATOR_LEFT ? \"LEFT\" : \"RIGHT\"),              activate ? \"ACTIVATE\" : \"DEACTIVATE\"",
                    "line": 181,
                    "raw_log_statement": "LOG_INFO(\"LightingControl: Indicator %s requested to %s.\",              (indicator_type == LightType::INDICATOR_LEFT ? \"LEFT\" : \"RIGHT\"),              activate ? \"ACTIVATE\" : \"DEACTIVATE\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"LightingControl: Hazard lights are active. Cannot set individual indicator %s.\",                     (indicator_type == LightType::INDICATOR_LEFT ? \"LEFT\" : \"RIGHT\")",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Hazard lights are active. Cannot set individual indicator %s.\",                     (indicator_type == LightType::INDICATOR_LEFT ? \"LEFT\" : \"RIGHT\")",
                    "line": 186,
                    "raw_log_statement": "LOG_WARNING(\"LightingControl: Hazard lights are active. Cannot set individual indicator %s.\",                     (indicator_type == LightType::INDICATOR_LEFT ? \"LEFT\" : \"RIGHT\"))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "setLightState(indicator_type, activate)",
                    "callee_name_at_call_site": "setLightState",
                    "callee_resolved_key": "_ZN23ecu_body_control_module15LightingControl13setLightStateENS_9LightTypeEb",
                    "callee_resolved_display_name": "ecu_body_control_module::setLightState",
                    "line": 191
                }
            ]
        },
        {
            "function_id_key": "_ZNK23ecu_body_control_module15LightingControl14getLightStatusENS_9LightTypeE",
            "display_signature": "ecu_body_control_module::getLightStatus",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/lighting_control.cpp",
            "line": 195,
            "end_line": 203,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"LightingControl: Status for LightType %d is %d.\", static_cast<int>(type), static_cast<int>(bulb->status)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Status for LightType %d is %d.\", static_cast<int>(type), static_cast<int>(bulb->status)",
                    "line": 198,
                    "raw_log_statement": "LOG_DEBUG(\"LightingControl: Status for LightType %d is %d.\", static_cast<int>(type), static_cast<int>(bulb->status))"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"LightingControl: getLightStatus: Could not find LightType %d. Reporting OFF.\", static_cast<int>(type)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: getLightStatus: Could not find LightType %d. Reporting OFF.\", static_cast<int>(type)",
                    "line": 201,
                    "raw_log_statement": "LOG_WARNING(\"LightingControl: getLightStatus: Could not find LightType %d. Reporting OFF.\", static_cast<int>(type))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "findBulb(type)",
                    "callee_name_at_call_site": "findBulb",
                    "callee_resolved_key": "_ZNK23ecu_body_control_module15LightingControl8findBulbENS_9LightTypeE",
                    "callee_resolved_display_name": "ecu_body_control_module::findBulb",
                    "line": 196
                }
            ]
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module15LightingControl16performBulbCheckEv",
            "display_signature": "ecu_body_control_module::performBulbCheck",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/lighting_control.cpp",
            "line": 205,
            "end_line": 242,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"LightingControl: Performing diagnostic bulb check sequence...\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Performing diagnostic bulb check sequence...\"",
                    "line": 206,
                    "raw_log_statement": "LOG_INFO(\"LightingControl: Performing diagnostic bulb check sequence...\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"LightingControl: Re-confirming fault for LightType %d. Status: %d, Code: %d\",                     static_cast<int>(bulb.type), static_cast<int>(bulb.status), bulb.fault_code",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Re-confirming fault for LightType %d. Status: %d, Code: %d\",                     static_cast<int>(bulb.type), static_cast<int>(bulb.status), bulb.fault_code",
                    "line": 215,
                    "raw_log_statement": "LOG_WARNING(\"LightingControl: Re-confirming fault for LightType %d. Status: %d, Code: %d\",                     static_cast<int>(bulb.type), static_cast<int>(bulb.status), bulb.fault_code)"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"LightingControl: BULB FAULT DETECTED for LightType %d! Code: %d\",                       static_cast<int>(bulb.type), bulb.fault_code",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: BULB FAULT DETECTED for LightType %d! Code: %d\",                       static_cast<int>(bulb.type), bulb.fault_code",
                    "line": 225,
                    "raw_log_statement": "LOG_ERROR(\"LightingControl: BULB FAULT DETECTED for LightType %d! Code: %d\",                       static_cast<int>(bulb.type), bulb.fault_code)"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"LightingControl: CIRCUIT FAULT DETECTED for LightType %d! Code: %d\",                       static_cast<int>(bulb.type), bulb.fault_code",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: CIRCUIT FAULT DETECTED for LightType %d! Code: %d\",                       static_cast<int>(bulb.type), bulb.fault_code",
                    "line": 230,
                    "raw_log_statement": "LOG_ERROR(\"LightingControl: CIRCUIT FAULT DETECTED for LightType %d! Code: %d\",                       static_cast<int>(bulb.type), bulb.fault_code)"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"LightingControl: Bulb check OK for LightType %d (currently ON).\", static_cast<int>(bulb.type)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Bulb check OK for LightType %d (currently ON).\", static_cast<int>(bulb.type)",
                    "line": 237,
                    "raw_log_statement": "LOG_DEBUG(\"LightingControl: Bulb check OK for LightType %d (currently ON).\", static_cast<int>(bulb.type))"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"LightingControl: Bulb check sequence complete.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Bulb check sequence complete.\"",
                    "line": 241,
                    "raw_log_statement": "LOG_INFO(\"LightingControl: Bulb check sequence complete.\")"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module15LightingControl25handleAutomaticHeadlightsERK12VehicleStateb",
            "display_signature": "ecu_body_control_module::handleAutomaticHeadlights",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/lighting_control.cpp",
            "line": 244,
            "end_line": 270,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"LightingControl: Evaluating automatic headlights. Speed: %.1f km/h, Power Stable: %s\",               vehicle_state.speed_kmh, power_stable ? \"true\" : \"false\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Evaluating automatic headlights. Speed: %.1f km/h, Power Stable: %s\",               vehicle_state.speed_kmh, power_stable ? \"true\" : \"false\"",
                    "line": 247,
                    "raw_log_statement": "LOG_DEBUG(\"LightingControl: Evaluating automatic headlights. Speed: %.1f km/h, Power Stable: %s\",               vehicle_state.speed_kmh, power_stable ? \"true\" : \"false\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"LightingControl: Auto Headlights: Low beam bulb faulty or not found. Cannot operate automatically.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Auto Headlights: Low beam bulb faulty or not found. Cannot operate automatically.\"",
                    "line": 252,
                    "raw_log_statement": "LOG_WARNING(\"LightingControl: Auto Headlights: Low beam bulb faulty or not found. Cannot operate automatically.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"LightingControl: Automatic Headlights: Turning ON low beams. Speed: %.1f km/h.\", vehicle_state.speed_kmh",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Automatic Headlights: Turning ON low beams. Speed: %.1f km/h.\", vehicle_state.speed_kmh",
                    "line": 260,
                    "raw_log_statement": "LOG_INFO(\"LightingControl: Automatic Headlights: Turning ON low beams. Speed: %.1f km/h.\", vehicle_state.speed_kmh)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"LightingControl: Automatic Headlights: Turning OFF low beams. Speed: %.1f km/h or power unstable.\", vehicle_state.speed_kmh",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Automatic Headlights: Turning OFF low beams. Speed: %.1f km/h or power unstable.\", vehicle_state.speed_kmh",
                    "line": 265,
                    "raw_log_statement": "LOG_INFO(\"LightingControl: Automatic Headlights: Turning OFF low beams. Speed: %.1f km/h or power unstable.\", vehicle_state.speed_kmh)"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "findBulb(LightType::HEADLIGHT_LOW)",
                    "callee_name_at_call_site": "findBulb",
                    "callee_resolved_key": "_ZN23ecu_body_control_module15LightingControl8findBulbENS_9LightTypeE",
                    "callee_resolved_display_name": "ecu_body_control_module::findBulb",
                    "line": 250
                },
                {
                    "callee_expression": "setSpecificLight(LightType::HEADLIGHT_LOW, true)",
                    "callee_name_at_call_site": "setSpecificLight",
                    "callee_resolved_key": "_ZN23ecu_body_control_module15LightingControl16setSpecificLightENS_9LightTypeEb",
                    "callee_resolved_display_name": "ecu_body_control_module::setSpecificLight",
                    "line": 261
                },
                {
                    "callee_expression": "setSpecificLight(LightType::HEADLIGHT_LOW, false)",
                    "callee_name_at_call_site": "setSpecificLight",
                    "callee_resolved_key": "_ZN23ecu_body_control_module15LightingControl16setSpecificLightENS_9LightTypeEb",
                    "callee_resolved_display_name": "ecu_body_control_module::setSpecificLight",
                    "line": 266
                }
            ]
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module15LightingControl16checkBrakeLightsERK12VehicleState",
            "display_signature": "ecu_body_control_module::checkBrakeLights",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/lighting_control.cpp",
            "line": 272,
            "end_line": 307,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"LightingControl: Checking brake light status based on vehicle state.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Checking brake light status based on vehicle state.\"",
                    "line": 279,
                    "raw_log_statement": "LOG_DEBUG(\"LightingControl: Checking brake light status based on vehicle state.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"LightingControl: Significant deceleration detected (%.1f -> %.1f km/h). Activating brake lights.\", last_speed, vehicle_state.speed_kmh",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Significant deceleration detected (%.1f -> %.1f km/h). Activating brake lights.\", last_speed, vehicle_state.speed_kmh",
                    "line": 288,
                    "raw_log_statement": "LOG_INFO(\"LightingControl: Significant deceleration detected (%.1f -> %.1f km/h). Activating brake lights.\", last_speed, vehicle_state.speed_kmh)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"LightingControl: Activating brake lights.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Activating brake lights.\"",
                    "line": 295,
                    "raw_log_statement": "LOG_INFO(\"LightingControl: Activating brake lights.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"LightingControl: Deactivating brake lights (no braking condition detected).\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Deactivating brake lights (no braking condition detected).\"",
                    "line": 303,
                    "raw_log_statement": "LOG_INFO(\"LightingControl: Deactivating brake lights (no braking condition detected).\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "getLightStatus(LightType::BRAKE_LIGHT)",
                    "callee_name_at_call_site": "getLightStatus",
                    "callee_resolved_key": "_ZNK23ecu_body_control_module15LightingControl14getLightStatusENS_9LightTypeE",
                    "callee_resolved_display_name": "ecu_body_control_module::getLightStatus",
                    "line": 294
                },
                {
                    "callee_expression": "setSpecificLight(LightType::BRAKE_LIGHT, true)",
                    "callee_name_at_call_site": "setSpecificLight",
                    "callee_resolved_key": "_ZN23ecu_body_control_module15LightingControl16setSpecificLightENS_9LightTypeEb",
                    "callee_resolved_display_name": "ecu_body_control_module::setSpecificLight",
                    "line": 297
                },
                {
                    "callee_expression": "getLightStatus(LightType::BRAKE_LIGHT)",
                    "callee_name_at_call_site": "getLightStatus",
                    "callee_resolved_key": "_ZNK23ecu_body_control_module15LightingControl14getLightStatusENS_9LightTypeE",
                    "callee_resolved_display_name": "ecu_body_control_module::getLightStatus",
                    "line": 302
                },
                {
                    "callee_expression": "setSpecificLight(LightType::BRAKE_LIGHT, false)",
                    "callee_name_at_call_site": "setSpecificLight",
                    "callee_resolved_key": "_ZN23ecu_body_control_module15LightingControl16setSpecificLightENS_9LightTypeEb",
                    "callee_resolved_display_name": "ecu_body_control_module::setSpecificLight",
                    "line": 305
                }
            ]
        },
        {
            "function_id_key": "_ZN23ecu_body_control_module15LightingControl14updateLightingERK12VehicleState",
            "display_signature": "ecu_body_control_module::updateLighting",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_body_control_module/lighting_control.cpp",
            "line": 310,
            "end_line": 351,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"LightingControl: Updating lighting based on vehicle state. Speed: %.1f km/h, RPM: %d\",              current_vehicle_state.speed_kmh, current_vehicle_state.engine_rpm",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Updating lighting based on vehicle state. Speed: %.1f km/h, RPM: %d\",              current_vehicle_state.speed_kmh, current_vehicle_state.engine_rpm",
                    "line": 311,
                    "raw_log_statement": "LOG_INFO(\"LightingControl: Updating lighting based on vehicle state. Speed: %.1f km/h, RPM: %d\",              current_vehicle_state.speed_kmh, current_vehicle_state.engine_rpm)"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"LightingControl: Power system is UNSTABLE. Some lighting functions might be limited.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Power system is UNSTABLE. Some lighting functions might be limited.\"",
                    "line": 318,
                    "raw_log_statement": "LOG_WARNING(\"LightingControl: Power system is UNSTABLE. Some lighting functions might be limited.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"LightingControl: Dimming interior light due to unstable power (simulated).\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Dimming interior light due to unstable power (simulated).\"",
                    "line": 322,
                    "raw_log_statement": "LOG_INFO(\"LightingControl: Dimming interior light due to unstable power (simulated).\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"LightingControl: updateLighting: PowerMonitor not available. Assuming power is stable.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: updateLighting: PowerMonitor not available. Assuming power is stable.\"",
                    "line": 327,
                    "raw_log_statement": "LOG_WARNING(\"LightingControl: updateLighting: PowerMonitor not available. Assuming power is stable.\")"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"LightingControl: Periodic bulb check triggered during update cycle.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Periodic bulb check triggered during update cycle.\"",
                    "line": 346,
                    "raw_log_statement": "LOG_DEBUG(\"LightingControl: Periodic bulb check triggered during update cycle.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"LightingControl: Lighting update cycle complete.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"LightingControl: Lighting update cycle complete.\"",
                    "line": 350,
                    "raw_log_statement": "LOG_INFO(\"LightingControl: Lighting update cycle complete.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "power_monitor_->isPowerStable()",
                    "callee_name_at_call_site": "isPowerStable",
                    "callee_resolved_key": "_ZNK20ecu_power_management12PowerMonitor13isPowerStableEv",
                    "callee_resolved_display_name": "ecu_power_management::PowerMonitor::isPowerStable",
                    "line": 316
                },
                {
                    "callee_expression": "findBulb(LightType::INTERIOR_DOME)",
                    "callee_name_at_call_site": "findBulb",
                    "callee_resolved_key": "_ZN23ecu_body_control_module15LightingControl8findBulbENS_9LightTypeE",
                    "callee_resolved_display_name": "ecu_body_control_module::findBulb",
                    "line": 320
                },
                {
                    "callee_expression": "handleAutomaticHeadlights(current_vehicle_state, power_is_stable)",
                    "callee_name_at_call_site": "handleAutomaticHeadlights",
                    "callee_resolved_key": "_ZN23ecu_body_control_module15LightingControl25handleAutomaticHeadlightsERK12VehicleStateb",
                    "callee_resolved_display_name": "ecu_body_control_module::handleAutomaticHeadlights",
                    "line": 333
                },
                {
                    "callee_expression": "checkBrakeLights(current_vehicle_state)",
                    "callee_name_at_call_site": "checkBrakeLights",
                    "callee_resolved_key": "_ZN23ecu_body_control_module15LightingControl16checkBrakeLightsERK12VehicleState",
                    "callee_resolved_display_name": "ecu_body_control_module::checkBrakeLights",
                    "line": 337
                },
                {
                    "callee_expression": "performBulbCheck()",
                    "callee_name_at_call_site": "performBulbCheck",
                    "callee_resolved_key": "_ZN23ecu_body_control_module15LightingControl16performBulbCheckEv",
                    "callee_resolved_display_name": "ecu_body_control_module::performBulbCheck",
                    "line": 347
                }
            ]
        },
        {
            "function_id_key": "_Z19getCurrentTimestampB5cxx11v",
            "display_signature": "getCurrentTimestamp",
            "file": "/workspaces/MyPFE/AutoSystemSim/common/logger.h",
            "line": 11,
            "end_line": 17,
            "logs_in_order": [],
            "calls_in_order": [
                {
                    "callee_expression": "std::localtime(&in_time_t)",
                    "callee_name_at_call_site": "localtime",
                    "callee_resolved_key": "localtime",
                    "callee_resolved_display_name": "localtime",
                    "line": 15
                }
            ]
        },
        {
            "function_id_key": "_ZN16main_application21MainVehicleControllerC1Ev",
            "display_signature": "main_application::MainVehicleController",
            "file": "/workspaces/MyPFE/AutoSystemSim/main_application/main_vehicle_controller.cpp",
            "line": 11,
            "end_line": 52,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"MainVehicleController: Initializing...\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: Initializing...\"",
                    "line": 16,
                    "raw_log_statement": "LOG_INFO(\"MainVehicleController: Initializing...\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MainVehicleController: All core ECU instances created.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: All core ECU instances created.\"",
                    "line": 51,
                    "raw_log_statement": "LOG_INFO(\"MainVehicleController: All core ECU instances created.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "ecu_power_management::PowerMonitor()",
                    "callee_name_at_call_site": "PowerMonitor",
                    "callee_resolved_key": "_ZN20ecu_power_management12PowerMonitorC1Ev",
                    "callee_resolved_display_name": "ecu_power_management::PowerMonitor::PowerMonitor",
                    "line": 20
                },
                {
                    "callee_expression": "ecu_powertrain_control::EngineManager()",
                    "callee_name_at_call_site": "EngineManager",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control13EngineManagerC1Ev",
                    "callee_resolved_display_name": "ecu_powertrain_control::EngineManager::EngineManager",
                    "line": 23
                },
                {
                    "callee_expression": "ecu_powertrain_control::TransmissionManager(engine_manager_)",
                    "callee_name_at_call_site": "TransmissionManager",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control19TransmissionManagerC1EPNS_13EngineManagerE",
                    "callee_resolved_display_name": "ecu_powertrain_control::TransmissionManager::TransmissionManager",
                    "line": 28
                },
                {
                    "callee_expression": "ecu_body_control_module::ClimateControl(power_monitor_)",
                    "callee_name_at_call_site": "ClimateControl",
                    "callee_resolved_key": "_ZN23ecu_body_control_module14ClimateControlC1EPN20ecu_power_management12PowerMonitorE",
                    "callee_resolved_display_name": "ecu_body_control_module::ClimateControl::ClimateControl",
                    "line": 32
                },
                {
                    "callee_expression": "ecu_body_control_module::LightingControl(power_monitor_)",
                    "callee_name_at_call_site": "LightingControl",
                    "callee_resolved_key": "_ZN23ecu_body_control_module15LightingControlC1EPN20ecu_power_management12PowerMonitorE",
                    "callee_resolved_display_name": "ecu_body_control_module::LightingControl::LightingControl",
                    "line": 33
                },
                {
                    "callee_expression": "ecu_body_control_module::WindowControl(power_monitor_)",
                    "callee_name_at_call_site": "WindowControl",
                    "callee_resolved_key": "_ZN23ecu_body_control_module13WindowControlC1EPN20ecu_power_management12PowerMonitorE",
                    "callee_resolved_display_name": "ecu_body_control_module::WindowControl::WindowControl",
                    "line": 34
                },
                {
                    "callee_expression": "ecu_infotainment::MediaPlayer()",
                    "callee_name_at_call_site": "MediaPlayer",
                    "callee_resolved_key": "_ZN16ecu_infotainment11MediaPlayerC1Ev",
                    "callee_resolved_display_name": "ecu_infotainment::MediaPlayer::MediaPlayer",
                    "line": 37
                },
                {
                    "callee_expression": "ecu_infotainment::NavigationSystem()",
                    "callee_name_at_call_site": "NavigationSystem",
                    "callee_resolved_key": "_ZN16ecu_infotainment16NavigationSystemC1Ev",
                    "callee_resolved_display_name": "ecu_infotainment::NavigationSystem::NavigationSystem",
                    "line": 38
                },
                {
                    "callee_expression": "ecu_safety_systems::ABSControl(/* no brake actuator for now */)",
                    "callee_name_at_call_site": "ABSControl",
                    "callee_resolved_key": "_ZN18ecu_safety_systems10ABSControlC1Ev",
                    "callee_resolved_display_name": "ecu_safety_systems::ABSControl::ABSControl",
                    "line": 41
                },
                {
                    "callee_expression": "ecu_safety_systems::AirbagControl()",
                    "callee_name_at_call_site": "AirbagControl",
                    "callee_resolved_key": "_ZN18ecu_safety_systems13AirbagControlC1Ev",
                    "callee_resolved_display_name": "ecu_safety_systems::AirbagControl::AirbagControl",
                    "line": 42
                },
                {
                    "callee_expression": "current_wheel_speed_sensors_[i] = {i, 0.0, \"km/h\", 0}",
                    "callee_name_at_call_site": "operator=",
                    "callee_resolved_key": "_ZN10SensorDataaSEOS_",
                    "callee_resolved_display_name": "SensorData::operator=",
                    "line": 48
                }
            ]
        },
        {
            "function_id_key": "_ZN16main_application21MainVehicleControllerD1Ev",
            "display_signature": "main_application::~MainVehicleController",
            "file": "/workspaces/MyPFE/AutoSystemSim/main_application/main_vehicle_controller.cpp",
            "line": 54,
            "end_line": 74,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"MainVehicleController: Shutting down...\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: Shutting down...\"",
                    "line": 55,
                    "raw_log_statement": "LOG_INFO(\"MainVehicleController: Shutting down...\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MainVehicleController: Shutdown complete. All ECU instances deleted.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: Shutdown complete. All ECU instances deleted.\"",
                    "line": 73,
                    "raw_log_statement": "LOG_INFO(\"MainVehicleController: Shutdown complete. All ECU instances deleted.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "handleIgnitionOff()",
                    "callee_name_at_call_site": "handleIgnitionOff",
                    "callee_resolved_key": "_ZN16main_application21MainVehicleController17handleIgnitionOffEv",
                    "callee_resolved_display_name": "main_application::MainVehicleController::handleIgnitionOff",
                    "line": 57
                },
                {
                    "callee_expression": "shutdownAllSystems()",
                    "callee_name_at_call_site": "shutdownAllSystems",
                    "callee_resolved_key": "_ZN16main_application21MainVehicleController18shutdownAllSystemsEv",
                    "callee_resolved_display_name": "main_application::MainVehicleController::shutdownAllSystems",
                    "line": 59
                }
            ]
        },
        {
            "function_id_key": "_ZN16main_application21MainVehicleController20initializeAllSystemsEv",
            "display_signature": "main_application::initializeAllSystems",
            "file": "/workspaces/MyPFE/AutoSystemSim/main_application/main_vehicle_controller.cpp",
            "line": 76,
            "end_line": 91,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"MainVehicleController: Initializing all vehicle systems...\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: Initializing all vehicle systems...\"",
                    "line": 77,
                    "raw_log_statement": "LOG_INFO(\"MainVehicleController: Initializing all vehicle systems...\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MainVehicleController: All vehicle systems initialized.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: All vehicle systems initialized.\"",
                    "line": 90,
                    "raw_log_statement": "LOG_INFO(\"MainVehicleController: All vehicle systems initialized.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "abs_control_->runDiagnostics()",
                    "callee_name_at_call_site": "runDiagnostics",
                    "callee_resolved_key": "_ZN18ecu_safety_systems10ABSControl14runDiagnosticsEv",
                    "callee_resolved_display_name": "ecu_safety_systems::ABSControl::runDiagnostics",
                    "line": 86
                },
                {
                    "callee_expression": "airbag_control_->runSystemCheck()",
                    "callee_name_at_call_site": "runSystemCheck",
                    "callee_resolved_key": "_ZN18ecu_safety_systems13AirbagControl14runSystemCheckEv",
                    "callee_resolved_display_name": "ecu_safety_systems::AirbagControl::runSystemCheck",
                    "line": 87
                }
            ]
        },
        {
            "function_id_key": "_ZN16main_application21MainVehicleController24updateVehicleStateInputsEv",
            "display_signature": "main_application::updateVehicleStateInputs",
            "file": "/workspaces/MyPFE/AutoSystemSim/main_application/main_vehicle_controller.cpp",
            "line": 93,
            "end_line": 147,
            "logs_in_order": [],
            "calls_in_order": [
                {
                    "callee_expression": "current_vehicle_state_ = engine_manager_->getEngineState()",
                    "callee_name_at_call_site": "operator=",
                    "callee_resolved_key": "_ZN12VehicleStateaSEOS_",
                    "callee_resolved_display_name": "VehicleState::operator=",
                    "line": 98
                },
                {
                    "callee_expression": "engine_manager_->getEngineState()",
                    "callee_name_at_call_site": "getEngineState",
                    "callee_resolved_key": "_ZNK22ecu_powertrain_control13EngineManager14getEngineStateEv",
                    "callee_resolved_display_name": "ecu_powertrain_control::EngineManager::getEngineState",
                    "line": 98
                },
                {
                    "callee_expression": "transmission_manager_->getCurrentGear()",
                    "callee_name_at_call_site": "getCurrentGear",
                    "callee_resolved_key": "_ZNK22ecu_powertrain_control19TransmissionManager14getCurrentGearEv",
                    "callee_resolved_display_name": "ecu_powertrain_control::TransmissionManager::getCurrentGear",
                    "line": 100
                },
                {
                    "callee_expression": "transmission_manager_->getCurrentGear()",
                    "callee_name_at_call_site": "getCurrentGear",
                    "callee_resolved_key": "_ZNK22ecu_powertrain_control19TransmissionManager14getCurrentGearEv",
                    "callee_resolved_display_name": "ecu_powertrain_control::TransmissionManager::getCurrentGear",
                    "line": 101
                },
                {
                    "callee_expression": "transmission_manager_->getCurrentGear()",
                    "callee_name_at_call_site": "getCurrentGear",
                    "callee_resolved_key": "_ZNK22ecu_powertrain_control19TransmissionManager14getCurrentGearEv",
                    "callee_resolved_display_name": "ecu_powertrain_control::TransmissionManager::getCurrentGear",
                    "line": 102
                },
                {
                    "callee_expression": "lighting_control_->getLightStatus(ecu_body_control_module::LightType::HEADLIGHT_LOW)",
                    "callee_name_at_call_site": "getLightStatus",
                    "callee_resolved_key": "_ZNK23ecu_body_control_module15LightingControl14getLightStatusENS_9LightTypeE",
                    "callee_resolved_display_name": "ecu_body_control_module::LightingControl::getLightStatus",
                    "line": 116
                },
                {
                    "callee_expression": "power_monitor_->getBatteryVoltage()",
                    "callee_name_at_call_site": "getBatteryVoltage",
                    "callee_resolved_key": "_ZNK20ecu_power_management12PowerMonitor17getBatteryVoltageEv",
                    "callee_resolved_display_name": "ecu_power_management::PowerMonitor::getBatteryVoltage",
                    "line": 117
                }
            ]
        },
        {
            "function_id_key": "_ZN16main_application21MainVehicleController18periodicECUUpdatesEv",
            "display_signature": "main_application::periodicECUUpdates",
            "file": "/workspaces/MyPFE/AutoSystemSim/main_application/main_vehicle_controller.cpp",
            "line": 150,
            "end_line": 186,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"MainVehicleController: Performing periodic ECU updates...\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: Performing periodic ECU updates...\"",
                    "line": 151,
                    "raw_log_statement": "LOG_DEBUG(\"MainVehicleController: Performing periodic ECU updates...\")"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"MainVehicleController: Periodic ECU updates complete.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: Periodic ECU updates complete.\"",
                    "line": 185,
                    "raw_log_statement": "LOG_DEBUG(\"MainVehicleController: Periodic ECU updates complete.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "power_monitor_->updatePowerStatus()",
                    "callee_name_at_call_site": "updatePowerStatus",
                    "callee_resolved_key": "_ZN20ecu_power_management12PowerMonitor17updatePowerStatusEv",
                    "callee_resolved_display_name": "ecu_power_management::PowerMonitor::updatePowerStatus",
                    "line": 153
                },
                {
                    "callee_expression": "engine_manager_->updateEngineParameters()",
                    "callee_name_at_call_site": "updateEngineParameters",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control13EngineManager22updateEngineParametersEv",
                    "callee_resolved_display_name": "ecu_powertrain_control::EngineManager::updateEngineParameters",
                    "line": 156
                },
                {
                    "callee_expression": "transmission_manager_->updateState(current_vehicle_state_, engine_manager_->getCurrentRPM())",
                    "callee_name_at_call_site": "updateState",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control19TransmissionManager11updateStateERK12VehicleStatei",
                    "callee_resolved_display_name": "ecu_powertrain_control::TransmissionManager::updateState",
                    "line": 158
                },
                {
                    "callee_expression": "engine_manager_->getCurrentRPM()",
                    "callee_name_at_call_site": "getCurrentRPM",
                    "callee_resolved_key": "_ZNK22ecu_powertrain_control13EngineManager13getCurrentRPMEv",
                    "callee_resolved_display_name": "ecu_powertrain_control::EngineManager::getCurrentRPM",
                    "line": 158
                },
                {
                    "callee_expression": "climate_control_->updateClimateState(current_vehicle_state_, int_temp, ext_temp)",
                    "callee_name_at_call_site": "updateClimateState",
                    "callee_resolved_key": "_ZN23ecu_body_control_module14ClimateControl18updateClimateStateERK12VehicleStateRK10SensorDataS6_",
                    "callee_resolved_display_name": "ecu_body_control_module::ClimateControl::updateClimateState",
                    "line": 165
                },
                {
                    "callee_expression": "lighting_control_->updateLighting(current_vehicle_state_)",
                    "callee_name_at_call_site": "updateLighting",
                    "callee_resolved_key": "_ZN23ecu_body_control_module15LightingControl14updateLightingERK12VehicleState",
                    "callee_resolved_display_name": "ecu_body_control_module::LightingControl::updateLighting",
                    "line": 167
                },
                {
                    "callee_expression": "window_control_->updateWindowStates()",
                    "callee_name_at_call_site": "updateWindowStates",
                    "callee_resolved_key": "_ZN23ecu_body_control_module13WindowControl18updateWindowStatesEv",
                    "callee_resolved_display_name": "ecu_body_control_module::WindowControl::updateWindowStates",
                    "line": 168
                },
                {
                    "callee_expression": "media_player_->updatePlaybackState()",
                    "callee_name_at_call_site": "updatePlaybackState",
                    "callee_resolved_key": "_ZN16ecu_infotainment11MediaPlayer19updatePlaybackStateEv",
                    "callee_resolved_display_name": "ecu_infotainment::MediaPlayer::updatePlaybackState",
                    "line": 171
                },
                {
                    "callee_expression": "navigation_system_->updateNavigationState(current_vehicle_state_)",
                    "callee_name_at_call_site": "updateNavigationState",
                    "callee_resolved_key": "_ZN16ecu_infotainment16NavigationSystem21updateNavigationStateERK12VehicleState",
                    "callee_resolved_display_name": "ecu_infotainment::NavigationSystem::updateNavigationState",
                    "line": 172
                },
                {
                    "callee_expression": "abs_control_->processBraking(current_vehicle_state_, current_wheel_speed_sensors_, current_brake_pedal_pressure_)",
                    "callee_name_at_call_site": "processBraking",
                    "callee_resolved_key": "_ZN18ecu_safety_systems10ABSControl14processBrakingERK12VehicleStateRKSt6vectorI10SensorDataSaIS5_EEd",
                    "callee_resolved_display_name": "ecu_safety_systems::ABSControl::processBraking",
                    "line": 176
                },
                {
                    "callee_expression": "airbag_control_->processImpactData(current_crash_sensors_input_, current_vehicle_state_)",
                    "callee_name_at_call_site": "processImpactData",
                    "callee_resolved_key": "_ZN18ecu_safety_systems13AirbagControl17processImpactDataERKNS_16CrashSensorInputERK12VehicleState",
                    "callee_resolved_display_name": "ecu_safety_systems::AirbagControl::processImpactData",
                    "line": 183
                }
            ]
        },
        {
            "function_id_key": "_ZN16main_application21MainVehicleController17checkSystemHealthEv",
            "display_signature": "main_application::checkSystemHealth",
            "file": "/workspaces/MyPFE/AutoSystemSim/main_application/main_vehicle_controller.cpp",
            "line": 188,
            "end_line": 211,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"MainVehicleController: Performing periodic system health checks...\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: Performing periodic system health checks...\"",
                    "line": 189,
                    "raw_log_statement": "LOG_DEBUG(\"MainVehicleController: Performing periodic system health checks...\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"MainVehicleController: Health Check: Engine is off but reported FAULT while ignition is ON.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: Health Check: Engine is off but reported FAULT while ignition is ON.\"",
                    "line": 193,
                    "raw_log_statement": "LOG_WARNING(\"MainVehicleController: Health Check: Engine is off but reported FAULT while ignition is ON.\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"MainVehicleController: Health Check: ABS System reports FAULT_DETECTED.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: Health Check: ABS System reports FAULT_DETECTED.\"",
                    "line": 198,
                    "raw_log_statement": "LOG_WARNING(\"MainVehicleController: Health Check: ABS System reports FAULT_DETECTED.\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"MainVehicleController: Health Check: Airbag System reports FAULT (%s).\", ecu_safety_systems::airbagSysStateToString(airbag_state)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: Health Check: Airbag System reports FAULT (%s).\", ecu_safety_systems::airbagSysStateToString(airbag_state)",
                    "line": 206,
                    "raw_log_statement": "LOG_WARNING(\"MainVehicleController: Health Check: Airbag System reports FAULT (%s).\", ecu_safety_systems::airbagSysStateToString(airbag_state))"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MainVehicleController: System health checks complete.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: System health checks complete.\"",
                    "line": 210,
                    "raw_log_statement": "LOG_INFO(\"MainVehicleController: System health checks complete.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "engine_manager_->getCurrentRPM()",
                    "callee_name_at_call_site": "getCurrentRPM",
                    "callee_resolved_key": "_ZNK22ecu_powertrain_control13EngineManager13getCurrentRPMEv",
                    "callee_resolved_display_name": "ecu_powertrain_control::EngineManager::getCurrentRPM",
                    "line": 192
                },
                {
                    "callee_expression": "engine_manager_->getEngineState()",
                    "callee_name_at_call_site": "getEngineState",
                    "callee_resolved_key": "_ZNK22ecu_powertrain_control13EngineManager14getEngineStateEv",
                    "callee_resolved_display_name": "ecu_powertrain_control::EngineManager::getEngineState",
                    "line": 192
                },
                {
                    "callee_expression": "abs_control_->getCurrentState()",
                    "callee_name_at_call_site": "getCurrentState",
                    "callee_resolved_key": "_ZNK18ecu_safety_systems10ABSControl15getCurrentStateEv",
                    "callee_resolved_display_name": "ecu_safety_systems::ABSControl::getCurrentState",
                    "line": 197
                },
                {
                    "callee_expression": "airbag_control_->getSystemState()",
                    "callee_name_at_call_site": "getSystemState",
                    "callee_resolved_key": "_ZNK18ecu_safety_systems13AirbagControl14getSystemStateEv",
                    "callee_resolved_display_name": "ecu_safety_systems::AirbagControl::getSystemState",
                    "line": 202
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "airbagSysStateToString",
                    "callee_resolved_key": "_ZN18ecu_safety_systems22airbagSysStateToStringENS_17AirbagSystemStateE",
                    "callee_resolved_display_name": "ecu_safety_systems::airbagSysStateToString",
                    "line": 206
                }
            ]
        },
        {
            "function_id_key": "_ZN16main_application21MainVehicleController11runMainLoopEv",
            "display_signature": "main_application::runMainLoop",
            "file": "/workspaces/MyPFE/AutoSystemSim/main_application/main_vehicle_controller.cpp",
            "line": 214,
            "end_line": 255,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"MainVehicleController: Starting main vehicle operation loop...\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: Starting main vehicle operation loop...\"",
                    "line": 215,
                    "raw_log_statement": "LOG_INFO(\"MainVehicleController: Starting main vehicle operation loop...\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"MainVehicleController: Cannot run main loop. Ignition is OFF.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: Cannot run main loop. Ignition is OFF.\"",
                    "line": 217,
                    "raw_log_statement": "LOG_WARNING(\"MainVehicleController: Cannot run main loop. Ignition is OFF.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MainVehicleController: Main Loop Cycle %d/%d\", main_loop_cycles_, max_cycles",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: Main Loop Cycle %d/%d\", main_loop_cycles_, max_cycles",
                    "line": 228,
                    "raw_log_statement": "LOG_INFO(\"MainVehicleController: Main Loop Cycle %d/%d\", main_loop_cycles_, max_cycles)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MainVehicleController: End of Main Loop Cycle %d\", main_loop_cycles_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: End of Main Loop Cycle %d\", main_loop_cycles_",
                    "line": 245,
                    "raw_log_statement": "LOG_INFO(\"MainVehicleController: End of Main Loop Cycle %d\", main_loop_cycles_)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MainVehicleController: Reached max simulation cycles for main loop.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: Reached max simulation cycles for main loop.\"",
                    "line": 252,
                    "raw_log_statement": "LOG_INFO(\"MainVehicleController: Reached max simulation cycles for main loop.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MainVehicleController: Exiting main vehicle operation loop.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: Exiting main vehicle operation loop.\"",
                    "line": 254,
                    "raw_log_statement": "LOG_INFO(\"MainVehicleController: Exiting main vehicle operation loop.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "updateVehicleStateInputs()",
                    "callee_name_at_call_site": "updateVehicleStateInputs",
                    "callee_resolved_key": "_ZN16main_application21MainVehicleController24updateVehicleStateInputsEv",
                    "callee_resolved_display_name": "main_application::updateVehicleStateInputs",
                    "line": 233
                },
                {
                    "callee_expression": "periodicECUUpdates()",
                    "callee_name_at_call_site": "periodicECUUpdates",
                    "callee_resolved_key": "_ZN16main_application21MainVehicleController18periodicECUUpdatesEv",
                    "callee_resolved_display_name": "main_application::periodicECUUpdates",
                    "line": 236
                },
                {
                    "callee_expression": "checkSystemHealth()",
                    "callee_name_at_call_site": "checkSystemHealth",
                    "callee_resolved_key": "_ZN16main_application21MainVehicleController17checkSystemHealthEv",
                    "callee_resolved_display_name": "main_application::checkSystemHealth",
                    "line": 240
                }
            ]
        },
        {
            "function_id_key": "_ZN16main_application21MainVehicleController16handleIgnitionOnEv",
            "display_signature": "main_application::handleIgnitionOn",
            "file": "/workspaces/MyPFE/AutoSystemSim/main_application/main_vehicle_controller.cpp",
            "line": 257,
            "end_line": 276,
            "logs_in_order": [
                {
                    "level": "FATAL",
                    "log_format_string": "\"MainVehicleController: IGNITION ON sequence started.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: IGNITION ON sequence started.\"",
                    "line": 258,
                    "raw_log_statement": "LOG_FATAL(\"MainVehicleController: IGNITION ON sequence started.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MainVehicleController: Ignition ON sequence complete. Vehicle systems ready.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: Ignition ON sequence complete. Vehicle systems ready.\"",
                    "line": 275,
                    "raw_log_statement": "LOG_INFO(\"MainVehicleController: Ignition ON sequence complete. Vehicle systems ready.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "power_monitor_->updatePowerStatus()",
                    "callee_name_at_call_site": "updatePowerStatus",
                    "callee_resolved_key": "_ZN20ecu_power_management12PowerMonitor17updatePowerStatusEv",
                    "callee_resolved_display_name": "ecu_power_management::PowerMonitor::updatePowerStatus",
                    "line": 261
                },
                {
                    "callee_expression": "airbag_control_->runSystemCheck()",
                    "callee_name_at_call_site": "runSystemCheck",
                    "callee_resolved_key": "_ZN18ecu_safety_systems13AirbagControl14runSystemCheckEv",
                    "callee_resolved_display_name": "ecu_safety_systems::AirbagControl::runSystemCheck",
                    "line": 267
                },
                {
                    "callee_expression": "abs_control_->runDiagnostics()",
                    "callee_name_at_call_site": "runDiagnostics",
                    "callee_resolved_key": "_ZN18ecu_safety_systems10ABSControl14runDiagnosticsEv",
                    "callee_resolved_display_name": "ecu_safety_systems::ABSControl::runDiagnostics",
                    "line": 268
                },
                {
                    "callee_expression": "media_player_->selectSource(ecu_infotainment::MediaSource::RADIO_FM)",
                    "callee_name_at_call_site": "selectSource",
                    "callee_resolved_key": "_ZN16ecu_infotainment11MediaPlayer12selectSourceENS_11MediaSourceE",
                    "callee_resolved_display_name": "ecu_infotainment::MediaPlayer::selectSource",
                    "line": 271
                },
                {
                    "callee_expression": "climate_control_->setAutoMode(true)",
                    "callee_name_at_call_site": "setAutoMode",
                    "callee_resolved_key": "_ZN23ecu_body_control_module14ClimateControl11setAutoModeEb",
                    "callee_resolved_display_name": "ecu_body_control_module::ClimateControl::setAutoMode",
                    "line": 272
                }
            ]
        },
        {
            "function_id_key": "_ZN16main_application21MainVehicleController17handleIgnitionOffEv",
            "display_signature": "main_application::handleIgnitionOff",
            "file": "/workspaces/MyPFE/AutoSystemSim/main_application/main_vehicle_controller.cpp",
            "line": 278,
            "end_line": 294,
            "logs_in_order": [
                {
                    "level": "FATAL",
                    "log_format_string": "\"MainVehicleController: IGNITION OFF sequence started.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: IGNITION OFF sequence started.\"",
                    "line": 279,
                    "raw_log_statement": "LOG_FATAL(\"MainVehicleController: IGNITION OFF sequence started.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MainVehicleController: Engine is running. Requesting engine stop.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: Engine is running. Requesting engine stop.\"",
                    "line": 284,
                    "raw_log_statement": "LOG_INFO(\"MainVehicleController: Engine is running. Requesting engine stop.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MainVehicleController: Ignition OFF sequence complete. Systems shutting down.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: Ignition OFF sequence complete. Systems shutting down.\"",
                    "line": 292,
                    "raw_log_statement": "LOG_INFO(\"MainVehicleController: Ignition OFF sequence complete. Systems shutting down.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "engine_manager_->getCurrentRPM()",
                    "callee_name_at_call_site": "getCurrentRPM",
                    "callee_resolved_key": "_ZNK22ecu_powertrain_control13EngineManager13getCurrentRPMEv",
                    "callee_resolved_display_name": "ecu_powertrain_control::EngineManager::getCurrentRPM",
                    "line": 283
                },
                {
                    "callee_expression": "engine_manager_->stopEngine()",
                    "callee_name_at_call_site": "stopEngine",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control13EngineManager10stopEngineEv",
                    "callee_resolved_display_name": "ecu_powertrain_control::EngineManager::stopEngine",
                    "line": 285
                },
                {
                    "callee_expression": "media_player_->stop()",
                    "callee_name_at_call_site": "stop",
                    "callee_resolved_key": "_ZN16ecu_infotainment11MediaPlayer4stopEv",
                    "callee_resolved_display_name": "ecu_infotainment::MediaPlayer::stop",
                    "line": 287
                },
                {
                    "callee_expression": "navigation_system_->cancelNavigation()",
                    "callee_name_at_call_site": "cancelNavigation",
                    "callee_resolved_key": "_ZN16ecu_infotainment16NavigationSystem16cancelNavigationEv",
                    "callee_resolved_display_name": "ecu_infotainment::NavigationSystem::cancelNavigation",
                    "line": 288
                },
                {
                    "callee_expression": "climate_control_->setFanSpeed(0)",
                    "callee_name_at_call_site": "setFanSpeed",
                    "callee_resolved_key": "_ZN23ecu_body_control_module14ClimateControl11setFanSpeedEi",
                    "callee_resolved_display_name": "ecu_body_control_module::ClimateControl::setFanSpeed",
                    "line": 289
                }
            ]
        },
        {
            "function_id_key": "_ZN16main_application21MainVehicleController20simulateDrivingCycleEv",
            "display_signature": "main_application::simulateDrivingCycle",
            "file": "/workspaces/MyPFE/AutoSystemSim/main_application/main_vehicle_controller.cpp",
            "line": 296,
            "end_line": 365,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"MainVehicleController: Starting SIMULATED DRIVING CYCLE.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: Starting SIMULATED DRIVING CYCLE.\"",
                    "line": 297,
                    "raw_log_statement": "LOG_INFO(\"MainVehicleController: Starting SIMULATED DRIVING CYCLE.\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"MainVehicleController: Cannot start driving cycle, ignition is OFF. Turning ignition ON.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: Cannot start driving cycle, ignition is OFF. Turning ignition ON.\"",
                    "line": 299,
                    "raw_log_statement": "LOG_WARNING(\"MainVehicleController: Cannot start driving cycle, ignition is OFF. Turning ignition ON.\")"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"MainVehicleController: EngineManager not available. Cannot simulate driving cycle.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: EngineManager not available. Cannot simulate driving cycle.\"",
                    "line": 303,
                    "raw_log_statement": "LOG_ERROR(\"MainVehicleController: EngineManager not available. Cannot simulate driving cycle.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MainVehicleController: DRIVING_CYCLE: Starting engine...\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: DRIVING_CYCLE: Starting engine...\"",
                    "line": 308,
                    "raw_log_statement": "LOG_INFO(\"MainVehicleController: DRIVING_CYCLE: Starting engine...\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MainVehicleController: DRIVING_CYCLE: Engine started.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: DRIVING_CYCLE: Engine started.\"",
                    "line": 310,
                    "raw_log_statement": "LOG_INFO(\"MainVehicleController: DRIVING_CYCLE: Engine started.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MainVehicleController: DRIVING_CYCLE: Setting transmission to DRIVE.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: DRIVING_CYCLE: Setting transmission to DRIVE.\"",
                    "line": 314,
                    "raw_log_statement": "LOG_INFO(\"MainVehicleController: DRIVING_CYCLE: Setting transmission to DRIVE.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MainVehicleController: DRIVING_CYCLE: Accelerating...\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: DRIVING_CYCLE: Accelerating...\"",
                    "line": 320,
                    "raw_log_statement": "LOG_INFO(\"MainVehicleController: DRIVING_CYCLE: Accelerating...\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MainVehicleController: DRIVING_CYCLE: Cruising...\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: DRIVING_CYCLE: Cruising...\"",
                    "line": 324,
                    "raw_log_statement": "LOG_INFO(\"MainVehicleController: DRIVING_CYCLE: Cruising...\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MainVehicleController: DRIVING_CYCLE: Hard braking simulation (for ABS test)...\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: DRIVING_CYCLE: Hard braking simulation (for ABS test)...\"",
                    "line": 328,
                    "raw_log_statement": "LOG_INFO(\"MainVehicleController: DRIVING_CYCLE: Hard braking simulation (for ABS test)...\")"
                },
                {
                    "level": "FATAL",
                    "log_format_string": "\"MainVehicleController: DRIVING_CYCLE: !!! SIMULATING CRASH EVENT !!!\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: DRIVING_CYCLE: !!! SIMULATING CRASH EVENT !!!\"",
                    "line": 335,
                    "raw_log_statement": "LOG_FATAL(\"MainVehicleController: DRIVING_CYCLE: !!! SIMULATING CRASH EVENT !!!\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MainVehicleController: DRIVING_CYCLE: Crash event processed. System may be in post-crash mode.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: DRIVING_CYCLE: Crash event processed. System may be in post-crash mode.\"",
                    "line": 341,
                    "raw_log_statement": "LOG_INFO(\"MainVehicleController: DRIVING_CYCLE: Crash event processed. System may be in post-crash mode.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MainVehicleController: DRIVING_CYCLE: Coming to a stop...\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: DRIVING_CYCLE: Coming to a stop...\"",
                    "line": 344,
                    "raw_log_statement": "LOG_INFO(\"MainVehicleController: DRIVING_CYCLE: Coming to a stop...\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MainVehicleController: DRIVING_CYCLE: Setting transmission to PARK.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: DRIVING_CYCLE: Setting transmission to PARK.\"",
                    "line": 353,
                    "raw_log_statement": "LOG_INFO(\"MainVehicleController: DRIVING_CYCLE: Setting transmission to PARK.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MainVehicleController: DRIVING_CYCLE: Stopping engine...\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: DRIVING_CYCLE: Stopping engine...\"",
                    "line": 356,
                    "raw_log_statement": "LOG_INFO(\"MainVehicleController: DRIVING_CYCLE: Stopping engine...\")"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"MainVehicleController: DRIVING_CYCLE: Engine failed to start. Aborting cycle.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: DRIVING_CYCLE: Engine failed to start. Aborting cycle.\"",
                    "line": 360,
                    "raw_log_statement": "LOG_ERROR(\"MainVehicleController: DRIVING_CYCLE: Engine failed to start. Aborting cycle.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MainVehicleController: SIMULATED DRIVING CYCLE complete.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: SIMULATED DRIVING CYCLE complete.\"",
                    "line": 363,
                    "raw_log_statement": "LOG_INFO(\"MainVehicleController: SIMULATED DRIVING CYCLE complete.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "handleIgnitionOn()",
                    "callee_name_at_call_site": "handleIgnitionOn",
                    "callee_resolved_key": "_ZN16main_application21MainVehicleController16handleIgnitionOnEv",
                    "callee_resolved_display_name": "main_application::handleIgnitionOn",
                    "line": 300
                },
                {
                    "callee_expression": "engine_manager_->startEngine()",
                    "callee_name_at_call_site": "startEngine",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control13EngineManager11startEngineEv",
                    "callee_resolved_display_name": "ecu_powertrain_control::EngineManager::startEngine",
                    "line": 309
                },
                {
                    "callee_expression": "transmission_manager_->setTransmissionMode(ecu_powertrain_control::TransmissionMode::DRIVE)",
                    "callee_name_at_call_site": "setTransmissionMode",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control19TransmissionManager19setTransmissionModeENS_16TransmissionModeE",
                    "callee_resolved_display_name": "ecu_powertrain_control::TransmissionManager::setTransmissionMode",
                    "line": 315
                },
                {
                    "callee_expression": "engine_manager_->setTargetRPM(2500)",
                    "callee_name_at_call_site": "setTargetRPM",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control13EngineManager12setTargetRPMEi",
                    "callee_resolved_display_name": "ecu_powertrain_control::EngineManager::setTargetRPM",
                    "line": 321
                },
                {
                    "callee_expression": "runMainLoop()",
                    "callee_name_at_call_site": "runMainLoop",
                    "callee_resolved_key": "_ZN16main_application21MainVehicleController11runMainLoopEv",
                    "callee_resolved_display_name": "main_application::runMainLoop",
                    "line": 322
                },
                {
                    "callee_expression": "engine_manager_->setTargetRPM(2000)",
                    "callee_name_at_call_site": "setTargetRPM",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control13EngineManager12setTargetRPMEi",
                    "callee_resolved_display_name": "ecu_powertrain_control::EngineManager::setTargetRPM",
                    "line": 325
                },
                {
                    "callee_expression": "runMainLoop()",
                    "callee_name_at_call_site": "runMainLoop",
                    "callee_resolved_key": "_ZN16main_application21MainVehicleController11runMainLoopEv",
                    "callee_resolved_display_name": "main_application::runMainLoop",
                    "line": 326
                },
                {
                    "callee_expression": "runMainLoop()",
                    "callee_name_at_call_site": "runMainLoop",
                    "callee_resolved_key": "_ZN16main_application21MainVehicleController11runMainLoopEv",
                    "callee_resolved_display_name": "main_application::runMainLoop",
                    "line": 331
                },
                {
                    "callee_expression": "current_crash_sensors_input_ = {-30.0, 2.0, 1.5, true, true, true, 10.0, 5.0}",
                    "callee_name_at_call_site": "operator=",
                    "callee_resolved_key": "_ZN18ecu_safety_systems16CrashSensorInputaSEOS0_",
                    "callee_resolved_display_name": "ecu_safety_systems::CrashSensorInput::operator=",
                    "line": 336
                },
                {
                    "callee_expression": "runMainLoop()",
                    "callee_name_at_call_site": "runMainLoop",
                    "callee_resolved_key": "_ZN16main_application21MainVehicleController11runMainLoopEv",
                    "callee_resolved_display_name": "main_application::runMainLoop",
                    "line": 338
                },
                {
                    "callee_expression": "current_crash_sensors_input_ = {0,0,1,true,true,true,0,0}",
                    "callee_name_at_call_site": "operator=",
                    "callee_resolved_key": "_ZN18ecu_safety_systems16CrashSensorInputaSEOS0_",
                    "callee_resolved_display_name": "ecu_safety_systems::CrashSensorInput::operator=",
                    "line": 340
                },
                {
                    "callee_expression": "engine_manager_->setTargetRPM(800)",
                    "callee_name_at_call_site": "setTargetRPM",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control13EngineManager12setTargetRPMEi",
                    "callee_resolved_display_name": "ecu_powertrain_control::EngineManager::setTargetRPM",
                    "line": 345
                },
                {
                    "callee_expression": "runMainLoop()",
                    "callee_name_at_call_site": "runMainLoop",
                    "callee_resolved_key": "_ZN16main_application21MainVehicleController11runMainLoopEv",
                    "callee_resolved_display_name": "main_application::runMainLoop",
                    "line": 349
                },
                {
                    "callee_expression": "transmission_manager_->setTransmissionMode(ecu_powertrain_control::TransmissionMode::PARK)",
                    "callee_name_at_call_site": "setTransmissionMode",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control19TransmissionManager19setTransmissionModeENS_16TransmissionModeE",
                    "callee_resolved_display_name": "ecu_powertrain_control::TransmissionManager::setTransmissionMode",
                    "line": 354
                },
                {
                    "callee_expression": "engine_manager_->stopEngine()",
                    "callee_name_at_call_site": "stopEngine",
                    "callee_resolved_key": "_ZN22ecu_powertrain_control13EngineManager10stopEngineEv",
                    "callee_resolved_display_name": "ecu_powertrain_control::EngineManager::stopEngine",
                    "line": 357
                },
                {
                    "callee_expression": "handleIgnitionOff()",
                    "callee_name_at_call_site": "handleIgnitionOff",
                    "callee_resolved_key": "_ZN16main_application21MainVehicleController17handleIgnitionOffEv",
                    "callee_resolved_display_name": "main_application::handleIgnitionOff",
                    "line": 364
                }
            ]
        },
        {
            "function_id_key": "_ZN16main_application21MainVehicleController18shutdownAllSystemsEv",
            "display_signature": "main_application::shutdownAllSystems",
            "file": "/workspaces/MyPFE/AutoSystemSim/main_application/main_vehicle_controller.cpp",
            "line": 368,
            "end_line": 376,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"MainVehicleController: Explicitly shutting down all ECU functionalities if applicable...\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: Explicitly shutting down all ECU functionalities if applicable...\"",
                    "line": 369,
                    "raw_log_statement": "LOG_INFO(\"MainVehicleController: Explicitly shutting down all ECU functionalities if applicable...\")"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"MainVehicleController: System shutdown commands issued.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MainVehicleController: System shutdown commands issued.\"",
                    "line": 375,
                    "raw_log_statement": "LOG_DEBUG(\"MainVehicleController: System shutdown commands issued.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "media_player_->stop()",
                    "callee_name_at_call_site": "stop",
                    "callee_resolved_key": "_ZN16ecu_infotainment11MediaPlayer4stopEv",
                    "callee_resolved_display_name": "ecu_infotainment::MediaPlayer::stop",
                    "line": 373
                }
            ]
        },
        {
            "function_id_key": "main",
            "display_signature": "main",
            "file": "/workspaces/MyPFE/AutoSystemSim/main_application/main.cpp",
            "line": 8,
            "end_line": 31,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"main: Application Entry Point.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"main: Application Entry Point.\"",
                    "line": 13,
                    "raw_log_statement": "LOG_INFO(\"main: Application Entry Point.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"main: Initializing all vehicle systems via MainVehicleController...\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"main: Initializing all vehicle systems via MainVehicleController...\"",
                    "line": 17,
                    "raw_log_statement": "LOG_INFO(\"main: Initializing all vehicle systems via MainVehicleController...\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"main: All systems initialized.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"main: All systems initialized.\"",
                    "line": 19,
                    "raw_log_statement": "LOG_INFO(\"main: All systems initialized.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"main: Starting simulated driving cycle...\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"main: Starting simulated driving cycle...\"",
                    "line": 22,
                    "raw_log_statement": "LOG_INFO(\"main: Starting simulated driving cycle...\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"main: Simulated driving cycle finished.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"main: Simulated driving cycle finished.\"",
                    "line": 24,
                    "raw_log_statement": "LOG_INFO(\"main: Simulated driving cycle finished.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"main: Application will now exit.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"main: Application will now exit.\"",
                    "line": 28,
                    "raw_log_statement": "LOG_INFO(\"main: Application will now exit.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "vehicle_controller",
                    "callee_name_at_call_site": "MainVehicleController",
                    "callee_resolved_key": "_ZN16main_application21MainVehicleControllerC1Ev",
                    "callee_resolved_display_name": "main_application::MainVehicleController::MainVehicleController",
                    "line": 15
                },
                {
                    "callee_expression": "vehicle_controller.initializeAllSystems()",
                    "callee_name_at_call_site": "initializeAllSystems",
                    "callee_resolved_key": "_ZN16main_application21MainVehicleController20initializeAllSystemsEv",
                    "callee_resolved_display_name": "main_application::MainVehicleController::initializeAllSystems",
                    "line": 18
                },
                {
                    "callee_expression": "vehicle_controller.simulateDrivingCycle()",
                    "callee_name_at_call_site": "simulateDrivingCycle",
                    "callee_resolved_key": "_ZN16main_application21MainVehicleController20simulateDrivingCycleEv",
                    "callee_resolved_display_name": "main_application::MainVehicleController::simulateDrivingCycle",
                    "line": 23
                }
            ]
        },
        {
            "function_id_key": "_ZN16ecu_infotainment17gpsStatusToStringENS_15GPSSignalStatusE",
            "display_signature": "ecu_infotainment::gpsStatusToString",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/navigation_system.cpp",
            "line": 12,
            "end_line": 21,
            "logs_in_order": [],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN16ecu_infotainment17navStatusToStringENS_16NavigationStatusE",
            "display_signature": "ecu_infotainment::navStatusToString",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/navigation_system.cpp",
            "line": 24,
            "end_line": 35,
            "logs_in_order": [],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN16ecu_infotainment16NavigationSystemC1Ev",
            "display_signature": "ecu_infotainment::NavigationSystem",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/navigation_system.cpp",
            "line": 38,
            "end_line": 61,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"NavigationSystem: Initializing...\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: Initializing...\"",
                    "line": 45,
                    "raw_log_statement": "LOG_INFO(\"NavigationSystem: Initializing...\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"NavigationSystem: Map data loaded successfully.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: Map data loaded successfully.\"",
                    "line": 54,
                    "raw_log_statement": "LOG_INFO(\"NavigationSystem: Map data loaded successfully.\")"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"NavigationSystem: Failed to load map data! Navigation will be unavailable.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: Failed to load map data! Navigation will be unavailable.\"",
                    "line": 57,
                    "raw_log_statement": "LOG_ERROR(\"NavigationSystem: Failed to load map data! Navigation will be unavailable.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "current_location_ = {0.0, 0.0, \"Initial Position (No GPS)\"}",
                    "callee_name_at_call_site": "operator=",
                    "callee_resolved_key": "_ZN16ecu_infotainment13MapCoordinateaSEOS0_",
                    "callee_resolved_display_name": "ecu_infotainment::MapCoordinate::operator=",
                    "line": 46
                },
                {
                    "callee_expression": "destination_ = {0.0, 0.0, \"\"}",
                    "callee_name_at_call_site": "operator=",
                    "callee_resolved_key": "_ZN16ecu_infotainment13MapCoordinateaSEOS0_",
                    "callee_resolved_display_name": "ecu_infotainment::MapCoordinate::operator=",
                    "line": 47
                },
                {
                    "callee_expression": "simulateGPSFix()",
                    "callee_name_at_call_site": "simulateGPSFix",
                    "callee_resolved_key": "_ZN16ecu_infotainment16NavigationSystem14simulateGPSFixEv",
                    "callee_resolved_display_name": "ecu_infotainment::NavigationSystem::simulateGPSFix",
                    "line": 60
                }
            ]
        },
        {
            "function_id_key": "_ZN16ecu_infotainment16NavigationSystemD1Ev",
            "display_signature": "ecu_infotainment::~NavigationSystem",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/navigation_system.cpp",
            "line": 63,
            "end_line": 66,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"NavigationSystem: Shutting down. Final NavStatus: %s, GPS: %s\",              navStatusToString(nav_status_), gpsStatusToString(gps_status_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: Shutting down. Final NavStatus: %s, GPS: %s\",              navStatusToString(nav_status_), gpsStatusToString(gps_status_)",
                    "line": 64,
                    "raw_log_statement": "LOG_INFO(\"NavigationSystem: Shutting down. Final NavStatus: %s, GPS: %s\",              navStatusToString(nav_status_), gpsStatusToString(gps_status_))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "navStatusToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment17navStatusToStringENS_16NavigationStatusE",
                    "callee_resolved_display_name": "ecu_infotainment::navStatusToString",
                    "line": 64
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "gpsStatusToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment17gpsStatusToStringENS_15GPSSignalStatusE",
                    "callee_resolved_display_name": "ecu_infotainment::gpsStatusToString",
                    "line": 64
                }
            ]
        },
        {
            "function_id_key": "_ZN16ecu_infotainment16NavigationSystem14simulateGPSFixEv",
            "display_signature": "ecu_infotainment::simulateGPSFix",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/navigation_system.cpp",
            "line": 68,
            "end_line": 116,
            "logs_in_order": [
                {
                    "level": "WARNING",
                    "log_format_string": "\"NavigationSystem: GPS module is FAULTY. Attempting reset (simulated)...\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: GPS module is FAULTY. Attempting reset (simulated)...\"",
                    "line": 75,
                    "raw_log_statement": "LOG_WARNING(\"NavigationSystem: GPS module is FAULTY. Attempting reset (simulated)...\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"NavigationSystem: GPS module fault cleared after reset (simulated). Now NO_FIX.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: GPS module fault cleared after reset (simulated). Now NO_FIX.\"",
                    "line": 78,
                    "raw_log_statement": "LOG_INFO(\"NavigationSystem: GPS module fault cleared after reset (simulated). Now NO_FIX.\")"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"NavigationSystem: GPS module remains FAULTY after reset attempt.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: GPS module remains FAULTY after reset attempt.\"",
                    "line": 80,
                    "raw_log_statement": "LOG_ERROR(\"NavigationSystem: GPS module remains FAULTY after reset attempt.\")"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"NavigationSystem: GPS module became FAULTY (simulated hardware issue).\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: GPS module became FAULTY (simulated hardware issue).\"",
                    "line": 88,
                    "raw_log_statement": "LOG_ERROR(\"NavigationSystem: GPS module became FAULTY (simulated hardware issue).\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"NavigationSystem: GPS status changed from %s to %s. Current Location (if fix): %.4f, %.4f\",                  gpsStatusToString(old_status), gpsStatusToString(gps_status_), current_location_.latitude, current_location_.longitude",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: GPS status changed from %s to %s. Current Location (if fix): %.4f, %.4f\",                  gpsStatusToString(old_status), gpsStatusToString(gps_status_), current_location_.latitude, current_location_.longitude",
                    "line": 105,
                    "raw_log_statement": "LOG_INFO(\"NavigationSystem: GPS status changed from %s to %s. Current Location (if fix): %.4f, %.4f\",                  gpsStatusToString(old_status), gpsStatusToString(gps_status_), current_location_.latitude, current_location_.longitude)"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "current_location_ = {48.8584, 2.2945, \"Eiffel Tower Vicinity (Simulated Fix)\"}",
                    "callee_name_at_call_site": "operator=",
                    "callee_resolved_key": "_ZN16ecu_infotainment13MapCoordinateaSEOS0_",
                    "callee_resolved_display_name": "ecu_infotainment::MapCoordinate::operator=",
                    "line": 95
                },
                {
                    "callee_expression": "current_location_ = {34.0522, -118.2437, \"Los Angeles Downtown (Simulated Fix)\"}",
                    "callee_name_at_call_site": "operator=",
                    "callee_resolved_key": "_ZN16ecu_infotainment13MapCoordinateaSEOS0_",
                    "callee_resolved_display_name": "ecu_infotainment::MapCoordinate::operator=",
                    "line": 100
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "gpsStatusToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment17gpsStatusToStringENS_15GPSSignalStatusE",
                    "callee_resolved_display_name": "ecu_infotainment::gpsStatusToString",
                    "line": 105
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "gpsStatusToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment17gpsStatusToStringENS_15GPSSignalStatusE",
                    "callee_resolved_display_name": "ecu_infotainment::gpsStatusToString",
                    "line": 105
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "gpsStatusToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment17gpsStatusToStringENS_15GPSSignalStatusE",
                    "callee_resolved_display_name": "ecu_infotainment::gpsStatusToString",
                    "line": 108
                },
                {
                    "callee_expression": "reportNavigationError(NavigationStatus::ERROR_NO_GPS, \"Lost GPS signal during active guidance or route calculation.\")",
                    "callee_name_at_call_site": "reportNavigationError",
                    "callee_resolved_key": "_ZN16ecu_infotainment16NavigationSystem21reportNavigationErrorENS_16NavigationStatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE",
                    "callee_resolved_display_name": "ecu_infotainment::NavigationSystem::reportNavigationError",
                    "line": 113
                }
            ]
        },
        {
            "function_id_key": "_ZN16ecu_infotainment16NavigationSystem22findAddressCoordinatesERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE",
            "display_signature": "ecu_infotainment::findAddressCoordinates",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/navigation_system.cpp",
            "line": 118,
            "end_line": 126,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"NavigationSystem: Looking up address: '%s' (simulated).\", address.c_str()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: Looking up address: '%s' (simulated).\", address.c_str()",
                    "line": 119,
                    "raw_log_statement": "LOG_INFO(\"NavigationSystem: Looking up address: '%s' (simulated).\", address.c_str())"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"NavigationSystem: Address '%s' not found in dummy database.\", address.c_str()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: Address '%s' not found in dummy database.\", address.c_str()",
                    "line": 124,
                    "raw_log_statement": "LOG_WARNING(\"NavigationSystem: Address '%s' not found in dummy database.\", address.c_str())"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN16ecu_infotainment16NavigationSystem14setDestinationERKNS_13MapCoordinateERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE",
            "display_signature": "ecu_infotainment::setDestination",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/navigation_system.cpp",
            "line": 128,
            "end_line": 153,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"NavigationSystem: Set destination request. Name: '%s', Lat: %.4f, Lon: %.4f.\",              dest_name.empty() ? \"N/A\" : dest_name.c_str(), dest.latitude, dest.longitude",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: Set destination request. Name: '%s', Lat: %.4f, Lon: %.4f.\",              dest_name.empty() ? \"N/A\" : dest_name.c_str(), dest.latitude, dest.longitude",
                    "line": 129,
                    "raw_log_statement": "LOG_INFO(\"NavigationSystem: Set destination request. Name: '%s', Lat: %.4f, Lon: %.4f.\",              dest_name.empty() ? \"N/A\" : dest_name.c_str(), dest.latitude, dest.longitude)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"NavigationSystem: Destination set to '%s'. Calculating route...\", destination_name_.c_str()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: Destination set to '%s'. Calculating route...\", destination_name_.c_str()",
                    "line": 148,
                    "raw_log_statement": "LOG_INFO(\"NavigationSystem: Destination set to '%s'. Calculating route...\", destination_name_.c_str())"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "reportNavigationError(NavigationStatus::ERROR_ROUTE_FAILED, \"Cannot set destination. Map data not available.\")",
                    "callee_name_at_call_site": "reportNavigationError",
                    "callee_resolved_key": "_ZN16ecu_infotainment16NavigationSystem21reportNavigationErrorENS_16NavigationStatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE",
                    "callee_resolved_display_name": "ecu_infotainment::NavigationSystem::reportNavigationError",
                    "line": 133
                },
                {
                    "callee_expression": "dest.isValid()",
                    "callee_name_at_call_site": "isValid",
                    "callee_resolved_key": "_ZNK16ecu_infotainment13MapCoordinate7isValidEv",
                    "callee_resolved_display_name": "ecu_infotainment::MapCoordinate::isValid",
                    "line": 136
                },
                {
                    "callee_expression": "reportNavigationError(NavigationStatus::ERROR_ROUTE_FAILED, \"Invalid destination coordinates.\")",
                    "callee_name_at_call_site": "reportNavigationError",
                    "callee_resolved_key": "_ZN16ecu_infotainment16NavigationSystem21reportNavigationErrorENS_16NavigationStatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE",
                    "callee_resolved_display_name": "ecu_infotainment::NavigationSystem::reportNavigationError",
                    "line": 137
                },
                {
                    "callee_expression": "reportNavigationError(NavigationStatus::ERROR_NO_GPS, \"Cannot set destination. No valid GPS signal for current location.\")",
                    "callee_name_at_call_site": "reportNavigationError",
                    "callee_resolved_key": "_ZN16ecu_infotainment16NavigationSystem21reportNavigationErrorENS_16NavigationStatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE",
                    "callee_resolved_display_name": "ecu_infotainment::NavigationSystem::reportNavigationError",
                    "line": 141
                },
                {
                    "callee_expression": "destination_ = dest",
                    "callee_name_at_call_site": "operator=",
                    "callee_resolved_key": "_ZN16ecu_infotainment13MapCoordinateaSERKS0_",
                    "callee_resolved_display_name": "ecu_infotainment::MapCoordinate::operator=",
                    "line": 145
                }
            ]
        },
        {
            "function_id_key": "_ZN16ecu_infotainment16NavigationSystem23setDestinationByAddressERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE",
            "display_signature": "ecu_infotainment::setDestinationByAddress",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/navigation_system.cpp",
            "line": 155,
            "end_line": 163,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"NavigationSystem: Set destination by address request: '%s'.\", address.c_str()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: Set destination by address request: '%s'.\", address.c_str()",
                    "line": 156,
                    "raw_log_statement": "LOG_INFO(\"NavigationSystem: Set destination by address request: '%s'.\", address.c_str())"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "findAddressCoordinates(address)",
                    "callee_name_at_call_site": "findAddressCoordinates",
                    "callee_resolved_key": "_ZN16ecu_infotainment16NavigationSystem22findAddressCoordinatesERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE",
                    "callee_resolved_display_name": "ecu_infotainment::findAddressCoordinates",
                    "line": 157
                },
                {
                    "callee_expression": "dest_coord.isValid()",
                    "callee_name_at_call_site": "isValid",
                    "callee_resolved_key": "_ZNK16ecu_infotainment13MapCoordinate7isValidEv",
                    "callee_resolved_display_name": "ecu_infotainment::MapCoordinate::isValid",
                    "line": 158
                },
                {
                    "callee_expression": "reportNavigationError(NavigationStatus::ERROR_ROUTE_FAILED, \"Address lookup failed for: \" + address)",
                    "callee_name_at_call_site": "reportNavigationError",
                    "callee_resolved_key": "_ZN16ecu_infotainment16NavigationSystem21reportNavigationErrorENS_16NavigationStatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE",
                    "callee_resolved_display_name": "ecu_infotainment::NavigationSystem::reportNavigationError",
                    "line": 159
                },
                {
                    "callee_expression": "setDestination(dest_coord, address)",
                    "callee_name_at_call_site": "setDestination",
                    "callee_resolved_key": "_ZN16ecu_infotainment16NavigationSystem14setDestinationERKNS_13MapCoordinateERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE",
                    "callee_resolved_display_name": "ecu_infotainment::setDestination",
                    "line": 162
                }
            ]
        },
        {
            "function_id_key": "_ZN16ecu_infotainment16NavigationSystem16cancelNavigationEv",
            "display_signature": "ecu_infotainment::cancelNavigation",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/navigation_system.cpp",
            "line": 165,
            "end_line": 179,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"NavigationSystem: Cancel navigation request.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: Cancel navigation request.\"",
                    "line": 166,
                    "raw_log_statement": "LOG_INFO(\"NavigationSystem: Cancel navigation request.\")"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"NavigationSystem: No active navigation to cancel.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: No active navigation to cancel.\"",
                    "line": 168,
                    "raw_log_statement": "LOG_DEBUG(\"NavigationSystem: No active navigation to cancel.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"NavigationSystem: Navigation cancelled. System is IDLE.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: Navigation cancelled. System is IDLE.\"",
                    "line": 177,
                    "raw_log_statement": "LOG_INFO(\"NavigationSystem: Navigation cancelled. System is IDLE.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "destination_ = {0.0, 0.0, \"\"}",
                    "callee_name_at_call_site": "operator=",
                    "callee_resolved_key": "_ZN16ecu_infotainment13MapCoordinateaSEOS0_",
                    "callee_resolved_display_name": "ecu_infotainment::MapCoordinate::operator=",
                    "line": 174
                }
            ]
        },
        {
            "function_id_key": "_ZN16ecu_infotainment16NavigationSystem14calculateRouteEv",
            "display_signature": "ecu_infotainment::calculateRoute",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/navigation_system.cpp",
            "line": 182,
            "end_line": 227,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"NavigationSystem: Calculating route from (%.4f, %.4f) to '%s' (%.4f, %.4f)...\",              current_location_.latitude, current_location_.longitude,              destination_name_.c_str(), destination_.latitude, destination_.longitude",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: Calculating route from (%.4f, %.4f) to '%s' (%.4f, %.4f)...\",              current_location_.latitude, current_location_.longitude,              destination_name_.c_str(), destination_.latitude, destination_.longitude",
                    "line": 183,
                    "raw_log_statement": "LOG_INFO(\"NavigationSystem: Calculating route from (%.4f, %.4f) to '%s' (%.4f, %.4f)...\",              current_location_.latitude, current_location_.longitude,              destination_name_.c_str(), destination_.latitude, destination_.longitude)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"NavigationSystem: Already at destination '%s'. No route calculated.\", destination_name_.c_str()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: Already at destination '%s'. No route calculated.\", destination_name_.c_str()",
                    "line": 199,
                    "raw_log_statement": "LOG_INFO(\"NavigationSystem: Already at destination '%s'. No route calculated.\", destination_name_.c_str())"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"NavigationSystem: Route calculated successfully to '%s'. %zu segments. Initial ETA: %llds. Guidance ACTIVE.\",              destination_name_.c_str(), current_route_.size(), initial_eta_seconds_.count()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: Route calculated successfully to '%s'. %zu segments. Initial ETA: %llds. Guidance ACTIVE.\",              destination_name_.c_str(), current_route_.size(), initial_eta_seconds_.count()",
                    "line": 224,
                    "raw_log_statement": "LOG_INFO(\"NavigationSystem: Route calculated successfully to '%s'. %zu segments. Initial ETA: %llds. Guidance ACTIVE.\",              destination_name_.c_str(), current_route_.size(), initial_eta_seconds_.count())"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "reportNavigationError(NavigationStatus::ERROR_NO_GPS, \"Route calculation failed: No GPS fix.\")",
                    "callee_name_at_call_site": "reportNavigationError",
                    "callee_resolved_key": "_ZN16ecu_infotainment16NavigationSystem21reportNavigationErrorENS_16NavigationStatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE",
                    "callee_resolved_display_name": "ecu_infotainment::NavigationSystem::reportNavigationError",
                    "line": 195
                },
                {
                    "callee_expression": "current_location_.distanceTo(destination_)",
                    "callee_name_at_call_site": "distanceTo",
                    "callee_resolved_key": "_ZNK16ecu_infotainment13MapCoordinate10distanceToERKS0_",
                    "callee_resolved_display_name": "ecu_infotainment::MapCoordinate::distanceTo",
                    "line": 198
                },
                {
                    "callee_expression": "reportNavigationError(NavigationStatus::ERROR_ROUTE_FAILED, \"Failed to calculate a route to \" + destination_name_)",
                    "callee_name_at_call_site": "reportNavigationError",
                    "callee_resolved_key": "_ZN16ecu_infotainment16NavigationSystem21reportNavigationErrorENS_16NavigationStatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE",
                    "callee_resolved_display_name": "ecu_infotainment::NavigationSystem::reportNavigationError",
                    "line": 212
                }
            ]
        },
        {
            "function_id_key": "_ZN16ecu_infotainment16NavigationSystem21provideGuidanceUpdateEd",
            "display_signature": "ecu_infotainment::provideGuidanceUpdate",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/navigation_system.cpp",
            "line": 229,
            "end_line": 249,
            "logs_in_order": [
                {
                    "level": "WARNING",
                    "log_format_string": "\"NavigationSystem: Guidance update requested but no valid route segment. Index: %d\", current_route_segment_index_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: Guidance update requested but no valid route segment. Index: %d\", current_route_segment_index_",
                    "line": 231,
                    "raw_log_statement": "LOG_WARNING(\"NavigationSystem: Guidance update requested but no valid route segment. Index: %d\", current_route_segment_index_)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"NavigationSystem: Guidance: %s. Next maneuver in %.1f km. Dist to Dest: %.1f km. ETA: %llds.\",              current_segment.instruction.c_str(),              dist_to_maneuver,              getDistanceToDestinationKm(),              getEstimatedTimeOfArrivalSeconds().count()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: Guidance: %s. Next maneuver in %.1f km. Dist to Dest: %.1f km. ETA: %llds.\",              current_segment.instruction.c_str(),              dist_to_maneuver,              getDistanceToDestinationKm(),              getEstimatedTimeOfArrivalSeconds().count()",
                    "line": 238,
                    "raw_log_statement": "LOG_INFO(\"NavigationSystem: Guidance: %s. Next maneuver in %.1f km. Dist to Dest: %.1f km. ETA: %llds.\",              current_segment.instruction.c_str(),              dist_to_maneuver,              getDistanceToDestinationKm(),              getEstimatedTimeOfArrivalSeconds().count())"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"NavigationSystem: Approaching maneuver for segment: '%s'.\", current_segment.instruction.c_str()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: Approaching maneuver for segment: '%s'.\", current_segment.instruction.c_str()",
                    "line": 246,
                    "raw_log_statement": "LOG_INFO(\"NavigationSystem: Approaching maneuver for segment: '%s'.\", current_segment.instruction.c_str())"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "getDistanceToNextManeuverKm()",
                    "callee_name_at_call_site": "getDistanceToNextManeuverKm",
                    "callee_resolved_key": "_ZNK16ecu_infotainment16NavigationSystem27getDistanceToNextManeuverKmEv",
                    "callee_resolved_display_name": "ecu_infotainment::NavigationSystem::getDistanceToNextManeuverKm",
                    "line": 236
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "getDistanceToDestinationKm",
                    "callee_resolved_key": "_ZNK16ecu_infotainment16NavigationSystem26getDistanceToDestinationKmEv",
                    "callee_resolved_display_name": "ecu_infotainment::NavigationSystem::getDistanceToDestinationKm",
                    "line": 238
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "getEstimatedTimeOfArrivalSeconds",
                    "callee_resolved_key": "_ZNK16ecu_infotainment16NavigationSystem32getEstimatedTimeOfArrivalSecondsEv",
                    "callee_resolved_display_name": "ecu_infotainment::NavigationSystem::getEstimatedTimeOfArrivalSeconds",
                    "line": 238
                }
            ]
        },
        {
            "function_id_key": "_ZN16ecu_infotainment16NavigationSystem13checkOffRouteEd",
            "display_signature": "ecu_infotainment::checkOffRoute",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/navigation_system.cpp",
            "line": 251,
            "end_line": 264,
            "logs_in_order": [
                {
                    "level": "WARNING",
                    "log_format_string": "\"NavigationSystem: OFF ROUTE detected! Distance from track: %.2f km. Recalculating...\", dist_from_expected_track",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: OFF ROUTE detected! Distance from track: %.2f km. Recalculating...\", dist_from_expected_track",
                    "line": 260,
                    "raw_log_statement": "LOG_WARNING(\"NavigationSystem: OFF ROUTE detected! Distance from track: %.2f km. Recalculating...\", dist_from_expected_track)"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "current_location_.distanceTo(current_segment.end_point)",
                    "callee_name_at_call_site": "distanceTo",
                    "callee_resolved_key": "_ZNK16ecu_infotainment13MapCoordinate10distanceToERKS0_",
                    "callee_resolved_display_name": "ecu_infotainment::MapCoordinate::distanceTo",
                    "line": 257
                },
                {
                    "callee_expression": "getDistanceToNextManeuverKm()",
                    "callee_name_at_call_site": "getDistanceToNextManeuverKm",
                    "callee_resolved_key": "_ZNK16ecu_infotainment16NavigationSystem27getDistanceToNextManeuverKmEv",
                    "callee_resolved_display_name": "ecu_infotainment::NavigationSystem::getDistanceToNextManeuverKm",
                    "line": 257
                }
            ]
        },
        {
            "function_id_key": "_ZN16ecu_infotainment16NavigationSystem22simulateLocationUpdateEddNSt6chrono8durationIlSt5ratioILl1ELl1EEEE",
            "display_signature": "ecu_infotainment::simulateLocationUpdate",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/navigation_system.cpp",
            "line": 266,
            "end_line": 315,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"NavigationSystem: No GPS fix, cannot simulate location update meaningfully.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: No GPS fix, cannot simulate location update meaningfully.\"",
                    "line": 268,
                    "raw_log_statement": "LOG_DEBUG(\"NavigationSystem: No GPS fix, cannot simulate location update meaningfully.\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"NavigationSystem: GPS signal temporarily lost. Location updates based on dead reckoning (simulated).\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: GPS signal temporarily lost. Location updates based on dead reckoning (simulated).\"",
                    "line": 272,
                    "raw_log_statement": "LOG_WARNING(\"NavigationSystem: GPS signal temporarily lost. Location updates based on dead reckoning (simulated).\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"NavigationSystem: Maneuver '%s' completed.\", current_segment.instruction.c_str()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: Maneuver '%s' completed.\", current_segment.instruction.c_str()",
                    "line": 301,
                    "raw_log_statement": "LOG_INFO(\"NavigationSystem: Maneuver '%s' completed.\", current_segment.instruction.c_str())"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"NavigationSystem: DESTINATION '%s' REACHED!\", destination_name_.c_str()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: DESTINATION '%s' REACHED!\", destination_name_.c_str()",
                    "line": 304,
                    "raw_log_statement": "LOG_INFO(\"NavigationSystem: DESTINATION '%s' REACHED!\", destination_name_.c_str())"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"NavigationSystem: Proceeding to next segment: '%s'.\", current_route_[current_route_segment_index_].instruction.c_str()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: Proceeding to next segment: '%s'.\", current_route_[current_route_segment_index_].instruction.c_str()",
                    "line": 309,
                    "raw_log_statement": "LOG_INFO(\"NavigationSystem: Proceeding to next segment: '%s'.\", current_route_[current_route_segment_index_].instruction.c_str())"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "std::cos(heading_rad)",
                    "callee_name_at_call_site": "cos",
                    "callee_resolved_key": "cos",
                    "callee_resolved_display_name": "cos",
                    "line": 283
                },
                {
                    "callee_expression": "std::fabs(std::cos(current_location_.latitude * (M_PI / 180.0)))",
                    "callee_name_at_call_site": "fabs",
                    "callee_resolved_key": "fabs",
                    "callee_resolved_display_name": "fabs",
                    "line": 284
                },
                {
                    "callee_expression": "std::cos(current_location_.latitude * (M_PI / 180.0))",
                    "callee_name_at_call_site": "cos",
                    "callee_resolved_key": "cos",
                    "callee_resolved_display_name": "cos",
                    "line": 284
                },
                {
                    "callee_expression": "std::cos(current_location_.latitude * (M_PI / 180.0))",
                    "callee_name_at_call_site": "cos",
                    "callee_resolved_key": "cos",
                    "callee_resolved_display_name": "cos",
                    "line": 285
                },
                {
                    "callee_expression": "std::sin(heading_rad)",
                    "callee_name_at_call_site": "sin",
                    "callee_resolved_key": "sin",
                    "callee_resolved_display_name": "sin",
                    "line": 285
                }
            ]
        },
        {
            "function_id_key": "_ZN16ecu_infotainment16NavigationSystem21updateNavigationStateERK12VehicleState",
            "display_signature": "ecu_infotainment::updateNavigationState",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/navigation_system.cpp",
            "line": 318,
            "end_line": 382,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"NavigationSystem: Updating navigation state. NavStatus: %s, GPS: %s, Speed: %.1f km/h\",               navStatusToString(nav_status_), gpsStatusToString(gps_status_), vehicle_state.speed_kmh",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: Updating navigation state. NavStatus: %s, GPS: %s, Speed: %.1f km/h\",               navStatusToString(nav_status_), gpsStatusToString(gps_status_), vehicle_state.speed_kmh",
                    "line": 319,
                    "raw_log_statement": "LOG_DEBUG(\"NavigationSystem: Updating navigation state. NavStatus: %s, GPS: %s, Speed: %.1f km/h\",               navStatusToString(nav_status_), gpsStatusToString(gps_status_), vehicle_state.speed_kmh)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"NavigationSystem: Attempting to recalculate route due to off-route condition.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: Attempting to recalculate route due to off-route condition.\"",
                    "line": 357,
                    "raw_log_statement": "LOG_INFO(\"NavigationSystem: Attempting to recalculate route due to off-route condition.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"NavigationSystem: Route successfully recalculated.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: Route successfully recalculated.\"",
                    "line": 359,
                    "raw_log_statement": "LOG_INFO(\"NavigationSystem: Route successfully recalculated.\")"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"NavigationSystem: Failed to recalculate route. Check GPS and map data.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: Failed to recalculate route. Check GPS and map data.\"",
                    "line": 361,
                    "raw_log_statement": "LOG_ERROR(\"NavigationSystem: Failed to recalculate route. Check GPS and map data.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"NavigationSystem: Destination reached for some time. Clearing route.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: Destination reached for some time. Clearing route.\"",
                    "line": 375,
                    "raw_log_statement": "LOG_INFO(\"NavigationSystem: Destination reached for some time. Clearing route.\")"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"NavigationSystem: Navigation state update cycle complete. NavStatus: %s\", navStatusToString(nav_status_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: Navigation state update cycle complete. NavStatus: %s\", navStatusToString(nav_status_)",
                    "line": 381,
                    "raw_log_statement": "LOG_DEBUG(\"NavigationSystem: Navigation state update cycle complete. NavStatus: %s\", navStatusToString(nav_status_))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "navStatusToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment17navStatusToStringENS_16NavigationStatusE",
                    "callee_resolved_display_name": "ecu_infotainment::navStatusToString",
                    "line": 319
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "gpsStatusToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment17gpsStatusToStringENS_15GPSSignalStatusE",
                    "callee_resolved_display_name": "ecu_infotainment::gpsStatusToString",
                    "line": 319
                },
                {
                    "callee_expression": "simulateGPSFix()",
                    "callee_name_at_call_site": "simulateGPSFix",
                    "callee_resolved_key": "_ZN16ecu_infotainment16NavigationSystem14simulateGPSFixEv",
                    "callee_resolved_display_name": "ecu_infotainment::simulateGPSFix",
                    "line": 329
                },
                {
                    "callee_expression": "simulateLocationUpdate(vehicle_state.speed_kmh, current_heading_deg, time_delta)",
                    "callee_name_at_call_site": "simulateLocationUpdate",
                    "callee_resolved_key": "_ZN16ecu_infotainment16NavigationSystem22simulateLocationUpdateEddNSt6chrono8durationIlSt5ratioILl1ELl1EEEE",
                    "callee_resolved_display_name": "ecu_infotainment::simulateLocationUpdate",
                    "line": 341
                },
                {
                    "callee_expression": "reportNavigationError(NavigationStatus::ERROR_ROUTE_FAILED, \"Route calculation aborted: Map data unavailable.\")",
                    "callee_name_at_call_site": "reportNavigationError",
                    "callee_resolved_key": "_ZN16ecu_infotainment16NavigationSystem21reportNavigationErrorENS_16NavigationStatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE",
                    "callee_resolved_display_name": "ecu_infotainment::NavigationSystem::reportNavigationError",
                    "line": 348
                },
                {
                    "callee_expression": "reportNavigationError(NavigationStatus::ERROR_NO_GPS, \"Route calculation aborted: No GPS fix.\")",
                    "callee_name_at_call_site": "reportNavigationError",
                    "callee_resolved_key": "_ZN16ecu_infotainment16NavigationSystem21reportNavigationErrorENS_16NavigationStatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE",
                    "callee_resolved_display_name": "ecu_infotainment::NavigationSystem::reportNavigationError",
                    "line": 350
                },
                {
                    "callee_expression": "calculateRoute()",
                    "callee_name_at_call_site": "calculateRoute",
                    "callee_resolved_key": "_ZN16ecu_infotainment16NavigationSystem14calculateRouteEv",
                    "callee_resolved_display_name": "ecu_infotainment::calculateRoute",
                    "line": 352
                },
                {
                    "callee_expression": "calculateRoute()",
                    "callee_name_at_call_site": "calculateRoute",
                    "callee_resolved_key": "_ZN16ecu_infotainment16NavigationSystem14calculateRouteEv",
                    "callee_resolved_display_name": "ecu_infotainment::calculateRoute",
                    "line": 358
                },
                {
                    "callee_expression": "provideGuidanceUpdate(vehicle_state.speed_kmh)",
                    "callee_name_at_call_site": "provideGuidanceUpdate",
                    "callee_resolved_key": "_ZN16ecu_infotainment16NavigationSystem21provideGuidanceUpdateEd",
                    "callee_resolved_display_name": "ecu_infotainment::provideGuidanceUpdate",
                    "line": 367
                },
                {
                    "callee_expression": "checkOffRoute(vehicle_state.speed_kmh)",
                    "callee_name_at_call_site": "checkOffRoute",
                    "callee_resolved_key": "_ZN16ecu_infotainment16NavigationSystem13checkOffRouteEd",
                    "callee_resolved_display_name": "ecu_infotainment::checkOffRoute",
                    "line": 368
                },
                {
                    "callee_expression": "cancelNavigation()",
                    "callee_name_at_call_site": "cancelNavigation",
                    "callee_resolved_key": "_ZN16ecu_infotainment16NavigationSystem16cancelNavigationEv",
                    "callee_resolved_display_name": "ecu_infotainment::cancelNavigation",
                    "line": 376
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "navStatusToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment17navStatusToStringENS_16NavigationStatusE",
                    "callee_resolved_display_name": "ecu_infotainment::navStatusToString",
                    "line": 381
                }
            ]
        },
        {
            "function_id_key": "_ZNK16ecu_infotainment16NavigationSystem26getCurrentNavigationStatusEv",
            "display_signature": "ecu_infotainment::getCurrentNavigationStatus",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/navigation_system.cpp",
            "line": 385,
            "end_line": 388,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"NavigationSystem: getCurrentNavigationStatus() -> %s\", navStatusToString(nav_status_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: getCurrentNavigationStatus() -> %s\", navStatusToString(nav_status_)",
                    "line": 386,
                    "raw_log_statement": "LOG_DEBUG(\"NavigationSystem: getCurrentNavigationStatus() -> %s\", navStatusToString(nav_status_))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "navStatusToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment17navStatusToStringENS_16NavigationStatusE",
                    "callee_resolved_display_name": "ecu_infotainment::navStatusToString",
                    "line": 386
                }
            ]
        },
        {
            "function_id_key": "_ZNK16ecu_infotainment16NavigationSystem29getCurrentGuidanceInstructionEv",
            "display_signature": "ecu_infotainment::getCurrentGuidanceInstruction",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/navigation_system.cpp",
            "line": 390,
            "end_line": 400,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"NavigationSystem: getCurrentGuidanceInstruction() -> '%s' (%.1f km)\", seg.instruction.c_str(), seg.distance_km",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: getCurrentGuidanceInstruction() -> '%s' (%.1f km)\", seg.instruction.c_str(), seg.distance_km",
                    "line": 395,
                    "raw_log_statement": "LOG_DEBUG(\"NavigationSystem: getCurrentGuidanceInstruction() -> '%s' (%.1f km)\", seg.instruction.c_str(), seg.distance_km)"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"NavigationSystem: getCurrentGuidanceInstruction() -> No active guidance.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: getCurrentGuidanceInstruction() -> No active guidance.\"",
                    "line": 398,
                    "raw_log_statement": "LOG_DEBUG(\"NavigationSystem: getCurrentGuidanceInstruction() -> No active guidance.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "seg",
                    "callee_name_at_call_site": "RouteSegment",
                    "callee_resolved_key": "_ZN16ecu_infotainment12RouteSegmentC1ERKS0_",
                    "callee_resolved_display_name": "ecu_infotainment::RouteSegment::RouteSegment",
                    "line": 396
                }
            ]
        },
        {
            "function_id_key": "_ZNK16ecu_infotainment16NavigationSystem27getDistanceToNextManeuverKmEv",
            "display_signature": "ecu_infotainment::getDistanceToNextManeuverKm",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/navigation_system.cpp",
            "line": 402,
            "end_line": 412,
            "logs_in_order": [],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZNK16ecu_infotainment16NavigationSystem26getDistanceToDestinationKmEv",
            "display_signature": "ecu_infotainment::getDistanceToDestinationKm",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/navigation_system.cpp",
            "line": 414,
            "end_line": 432,
            "logs_in_order": [],
            "calls_in_order": [
                {
                    "callee_expression": "destination_.isValid()",
                    "callee_name_at_call_site": "isValid",
                    "callee_resolved_key": "_ZNK16ecu_infotainment13MapCoordinate7isValidEv",
                    "callee_resolved_display_name": "ecu_infotainment::MapCoordinate::isValid",
                    "line": 428
                },
                {
                    "callee_expression": "current_location_.isValid()",
                    "callee_name_at_call_site": "isValid",
                    "callee_resolved_key": "_ZNK16ecu_infotainment13MapCoordinate7isValidEv",
                    "callee_resolved_display_name": "ecu_infotainment::MapCoordinate::isValid",
                    "line": 428
                },
                {
                    "callee_expression": "current_location_.distanceTo(destination_)",
                    "callee_name_at_call_site": "distanceTo",
                    "callee_resolved_key": "_ZNK16ecu_infotainment13MapCoordinate10distanceToERKS0_",
                    "callee_resolved_display_name": "ecu_infotainment::MapCoordinate::distanceTo",
                    "line": 429
                }
            ]
        },
        {
            "function_id_key": "_ZNK16ecu_infotainment16NavigationSystem32getEstimatedTimeOfArrivalSecondsEv",
            "display_signature": "ecu_infotainment::getEstimatedTimeOfArrivalSeconds",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/navigation_system.cpp",
            "line": 434,
            "end_line": 445,
            "logs_in_order": [],
            "calls_in_order": [
                {
                    "callee_expression": "current_eta",
                    "callee_name_at_call_site": "(anonymous_call)",
                    "callee_resolved_key": null,
                    "callee_resolved_display_name": "(unknown_callee_expr)",
                    "line": 442
                }
            ]
        },
        {
            "function_id_key": "_ZNK16ecu_infotainment16NavigationSystem18getGPSSignalStatusEv",
            "display_signature": "ecu_infotainment::getGPSSignalStatus",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/navigation_system.cpp",
            "line": 447,
            "end_line": 450,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"NavigationSystem: getGPSSignalStatus() -> %s\", gpsStatusToString(gps_status_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: getGPSSignalStatus() -> %s\", gpsStatusToString(gps_status_)",
                    "line": 448,
                    "raw_log_statement": "LOG_DEBUG(\"NavigationSystem: getGPSSignalStatus() -> %s\", gpsStatusToString(gps_status_))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "gpsStatusToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment17gpsStatusToStringENS_15GPSSignalStatusE",
                    "callee_resolved_display_name": "ecu_infotainment::gpsStatusToString",
                    "line": 448
                }
            ]
        },
        {
            "function_id_key": "_ZNK16ecu_infotainment16NavigationSystem18getCurrentLocationEv",
            "display_signature": "ecu_infotainment::getCurrentLocation",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/navigation_system.cpp",
            "line": 452,
            "end_line": 456,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"NavigationSystem: getCurrentLocation() -> Lat: %.4f, Lon: %.4f (%s)\",               current_location_.latitude, current_location_.longitude, gpsStatusToString(gps_status_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: getCurrentLocation() -> Lat: %.4f, Lon: %.4f (%s)\",               current_location_.latitude, current_location_.longitude, gpsStatusToString(gps_status_)",
                    "line": 453,
                    "raw_log_statement": "LOG_DEBUG(\"NavigationSystem: getCurrentLocation() -> Lat: %.4f, Lon: %.4f (%s)\",               current_location_.latitude, current_location_.longitude, gpsStatusToString(gps_status_))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "gpsStatusToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment17gpsStatusToStringENS_15GPSSignalStatusE",
                    "callee_resolved_display_name": "ecu_infotainment::gpsStatusToString",
                    "line": 453
                },
                {
                    "callee_expression": "current_location_",
                    "callee_name_at_call_site": "MapCoordinate",
                    "callee_resolved_key": "_ZN16ecu_infotainment13MapCoordinateC1ERKS0_",
                    "callee_resolved_display_name": "ecu_infotainment::MapCoordinate::MapCoordinate",
                    "line": 455
                }
            ]
        },
        {
            "function_id_key": "_ZNK16ecu_infotainment16NavigationSystem18isMapDataAvailableEv",
            "display_signature": "ecu_infotainment::isMapDataAvailable",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/navigation_system.cpp",
            "line": 458,
            "end_line": 461,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"NavigationSystem: isMapDataAvailable() -> %s\", map_data_loaded_ ? \"YES\" : \"NO\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: isMapDataAvailable() -> %s\", map_data_loaded_ ? \"YES\" : \"NO\"",
                    "line": 459,
                    "raw_log_statement": "LOG_DEBUG(\"NavigationSystem: isMapDataAvailable() -> %s\", map_data_loaded_ ? \"YES\" : \"NO\")"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN16ecu_infotainment16NavigationSystem21reportNavigationErrorENS_16NavigationStatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE",
            "display_signature": "ecu_infotainment::reportNavigationError",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/navigation_system.cpp",
            "line": 463,
            "end_line": 470,
            "logs_in_order": [
                {
                    "level": "ERROR",
                    "log_format_string": "\"NavigationSystem: Navigation Error (%s): %s\",               navStatusToString(error_status), details.c_str()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"NavigationSystem: Navigation Error (%s): %s\",               navStatusToString(error_status), details.c_str()",
                    "line": 465,
                    "raw_log_statement": "LOG_ERROR(\"NavigationSystem: Navigation Error (%s): %s\",               navStatusToString(error_status), details.c_str())"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "navStatusToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment17navStatusToStringENS_16NavigationStatusE",
                    "callee_resolved_display_name": "ecu_infotainment::navStatusToString",
                    "line": 465
                }
            ]
        },
        {
            "function_id_key": "_ZN16ecu_infotainment19mediaSourceToStringENS_11MediaSourceE",
            "display_signature": "ecu_infotainment::mediaSourceToString",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/media_player.cpp",
            "line": 9,
            "end_line": 19,
            "logs_in_order": [],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN16ecu_infotainment22playbackStatusToStringENS_14PlaybackStatusE",
            "display_signature": "ecu_infotainment::playbackStatusToString",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/media_player.cpp",
            "line": 22,
            "end_line": 32,
            "logs_in_order": [],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN16ecu_infotainment11MediaPlayerC1Ev",
            "display_signature": "ecu_infotainment::MediaPlayer",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/media_player.cpp",
            "line": 35,
            "end_line": 46,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: Initializing. Default volume: %d%%.\", volume_level_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Initializing. Default volume: %d%%.\", volume_level_",
                    "line": 45,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: Initializing. Default volume: %d%%.\", volume_level_)"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN16ecu_infotainment11MediaPlayerD1Ev",
            "display_signature": "ecu_infotainment::~MediaPlayer",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/media_player.cpp",
            "line": 48,
            "end_line": 51,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: Shutting down. Current source: %s, Status: %s.\",              mediaSourceToString(current_source_), playbackStatusToString(current_status_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Shutting down. Current source: %s, Status: %s.\",              mediaSourceToString(current_source_), playbackStatusToString(current_status_)",
                    "line": 49,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: Shutting down. Current source: %s, Status: %s.\",              mediaSourceToString(current_source_), playbackStatusToString(current_status_))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "mediaSourceToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment19mediaSourceToStringENS_11MediaSourceE",
                    "callee_resolved_display_name": "ecu_infotainment::mediaSourceToString",
                    "line": 49
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "playbackStatusToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment22playbackStatusToStringENS_14PlaybackStatusE",
                    "callee_resolved_display_name": "ecu_infotainment::playbackStatusToString",
                    "line": 49
                }
            ]
        },
        {
            "function_id_key": "_ZN16ecu_infotainment11MediaPlayer12selectSourceENS_11MediaSourceE",
            "display_signature": "ecu_infotainment::selectSource",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/media_player.cpp",
            "line": 53,
            "end_line": 119,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: Request to select source: %s.\", mediaSourceToString(new_source)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Request to select source: %s.\", mediaSourceToString(new_source)",
                    "line": 54,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: Request to select source: %s.\", mediaSourceToString(new_source))"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"MediaPlayer: Source %s is already active.\", mediaSourceToString(new_source)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Source %s is already active.\", mediaSourceToString(new_source)",
                    "line": 56,
                    "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: Source %s is already active.\", mediaSourceToString(new_source))"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: Switched to source %s.\", mediaSourceToString(current_source_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Switched to source %s.\", mediaSourceToString(current_source_)",
                    "line": 67,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: Switched to source %s.\", mediaSourceToString(current_source_))"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: USB source selected. Please load a playlist or select a track.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: USB source selected. Please load a playlist or select a track.\"",
                    "line": 80,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: USB source selected. Please load a playlist or select a track.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: Bluetooth source selected. Awaiting stream or playlist.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Bluetooth source selected. Awaiting stream or playlist.\"",
                    "line": 93,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: Bluetooth source selected. Awaiting stream or playlist.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: FM Radio source selected. Please tune to a station.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: FM Radio source selected. Please tune to a station.\"",
                    "line": 100,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: FM Radio source selected. Please tune to a station.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: AM Radio source selected. Please tune to a station.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: AM Radio source selected. Please tune to a station.\"",
                    "line": 104,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: AM Radio source selected. Please tune to a station.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: AUX source selected. Playback controlled by external device.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: AUX source selected. Playback controlled by external device.\"",
                    "line": 108,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: AUX source selected. Playback controlled by external device.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: No media source selected.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: No media source selected.\"",
                    "line": 112,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: No media source selected.\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"MediaPlayer: Unknown media source selected: %d\", static_cast<int>(current_source_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Unknown media source selected: %d\", static_cast<int>(current_source_)",
                    "line": 115,
                    "raw_log_statement": "LOG_WARNING(\"MediaPlayer: Unknown media source selected: %d\", static_cast<int>(current_source_))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "mediaSourceToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment19mediaSourceToStringENS_11MediaSourceE",
                    "callee_resolved_display_name": "ecu_infotainment::mediaSourceToString",
                    "line": 54
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "mediaSourceToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment19mediaSourceToStringENS_11MediaSourceE",
                    "callee_resolved_display_name": "ecu_infotainment::mediaSourceToString",
                    "line": 56
                },
                {
                    "callee_expression": "stop()",
                    "callee_name_at_call_site": "stop",
                    "callee_resolved_key": "_ZN16ecu_infotainment11MediaPlayer4stopEv",
                    "callee_resolved_display_name": "ecu_infotainment::MediaPlayer::stop",
                    "line": 60
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "mediaSourceToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment19mediaSourceToStringENS_11MediaSourceE",
                    "callee_resolved_display_name": "ecu_infotainment::mediaSourceToString",
                    "line": 67
                },
                {
                    "callee_expression": "reportPlaybackError(PlaybackStatus::ERROR_SOURCE_UNAVAILABLE, \"USB device not detected or unreadable.\")",
                    "callee_name_at_call_site": "reportPlaybackError",
                    "callee_resolved_key": "_ZN16ecu_infotainment11MediaPlayer19reportPlaybackErrorENS_14PlaybackStatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE",
                    "callee_resolved_display_name": "ecu_infotainment::MediaPlayer::reportPlaybackError",
                    "line": 77
                },
                {
                    "callee_expression": "loadPlaylist({                 {\"USB Track 1\", \"Artist A\", \"Album X\", std::chrono::seconds(180), 1},                 {\"USB Track 2\", \"Artist B\", \"Album Y\", std::chrono::seconds(220), 2},                 {\"Bad USB File\", \"Corrupted\", \"Unknown\", std::chrono::seconds(10), 3} // For error simulation             })",
                    "callee_name_at_call_site": "loadPlaylist",
                    "callee_resolved_key": "_ZN16ecu_infotainment11MediaPlayer12loadPlaylistERKSt6vectorINS_9TrackInfoESaIS2_EE",
                    "callee_resolved_display_name": "ecu_infotainment::MediaPlayer::loadPlaylist",
                    "line": 82
                },
                {
                    "callee_expression": "reportPlaybackError(PlaybackStatus::ERROR_SOURCE_UNAVAILABLE, \"Bluetooth connection failed or device not paired.\")",
                    "callee_name_at_call_site": "reportPlaybackError",
                    "callee_resolved_key": "_ZN16ecu_infotainment11MediaPlayer19reportPlaybackErrorENS_14PlaybackStatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE",
                    "callee_resolved_display_name": "ecu_infotainment::MediaPlayer::reportPlaybackError",
                    "line": 90
                },
                {
                    "callee_expression": "loadPlaylist({                 {\"BT Song Alpha\", \"BT Artist\", \"BT Album\", std::chrono::seconds(200), 1},                 {\"BT Song Beta\", \"BT Artist\", \"BT Album\", std::chrono::seconds(240), 2}             })",
                    "callee_name_at_call_site": "loadPlaylist",
                    "callee_resolved_key": "_ZN16ecu_infotainment11MediaPlayer12loadPlaylistERKSt6vectorINS_9TrackInfoESaIS2_EE",
                    "callee_resolved_display_name": "ecu_infotainment::MediaPlayer::loadPlaylist",
                    "line": 94
                },
                {
                    "callee_expression": "tuneRadio(98.5, MediaSource::RADIO_FM)",
                    "callee_name_at_call_site": "tuneRadio",
                    "callee_resolved_key": "_ZN16ecu_infotainment11MediaPlayer9tuneRadioEdNS_11MediaSourceE",
                    "callee_resolved_display_name": "ecu_infotainment::MediaPlayer::tuneRadio",
                    "line": 101
                },
                {
                    "callee_expression": "tuneRadio(740, MediaSource::RADIO_AM)",
                    "callee_name_at_call_site": "tuneRadio",
                    "callee_resolved_key": "_ZN16ecu_infotainment11MediaPlayer9tuneRadioEdNS_11MediaSourceE",
                    "callee_resolved_display_name": "ecu_infotainment::MediaPlayer::tuneRadio",
                    "line": 105
                }
            ]
        },
        {
            "function_id_key": "_ZNK16ecu_infotainment11MediaPlayer16getCurrentSourceEv",
            "display_signature": "ecu_infotainment::getCurrentSource",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/media_player.cpp",
            "line": 121,
            "end_line": 124,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"MediaPlayer: getCurrentSource() -> %s.\", mediaSourceToString(current_source_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: getCurrentSource() -> %s.\", mediaSourceToString(current_source_)",
                    "line": 122,
                    "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: getCurrentSource() -> %s.\", mediaSourceToString(current_source_))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "mediaSourceToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment19mediaSourceToStringENS_11MediaSourceE",
                    "callee_resolved_display_name": "ecu_infotainment::mediaSourceToString",
                    "line": 122
                }
            ]
        },
        {
            "function_id_key": "_ZN16ecu_infotainment11MediaPlayer16playTrackAtIndexEi",
            "display_signature": "ecu_infotainment::playTrackAtIndex",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/media_player.cpp",
            "line": 126,
            "end_line": 149,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: Playing track #%d: '%s' by '%s'. Duration: %llds.\",              track.track_number, track.title.c_str(), track.artist.c_str(), track.duration.count()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Playing track #%d: '%s' by '%s'. Duration: %llds.\",              track.track_number, track.title.c_str(), track.artist.c_str(), track.duration.count()",
                    "line": 146,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: Playing track #%d: '%s' by '%s'. Duration: %llds.\",              track.track_number, track.title.c_str(), track.artist.c_str(), track.duration.count())"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "reportPlaybackError(PlaybackStatus::ERROR_TRACK_UNREADABLE, \"Invalid track index: \" + std::to_string(index))",
                    "callee_name_at_call_site": "reportPlaybackError",
                    "callee_resolved_key": "_ZN16ecu_infotainment11MediaPlayer19reportPlaybackErrorENS_14PlaybackStatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE",
                    "callee_resolved_display_name": "ecu_infotainment::MediaPlayer::reportPlaybackError",
                    "line": 128
                },
                {
                    "callee_expression": "reportPlaybackError(PlaybackStatus::ERROR_TRACK_UNREADABLE, \"Cannot read track: \" + track.title + \" (simulated corruption).\")",
                    "callee_name_at_call_site": "reportPlaybackError",
                    "callee_resolved_key": "_ZN16ecu_infotainment11MediaPlayer19reportPlaybackErrorENS_14PlaybackStatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE",
                    "callee_resolved_display_name": "ecu_infotainment::MediaPlayer::reportPlaybackError",
                    "line": 135
                }
            ]
        },
        {
            "function_id_key": "_ZN16ecu_infotainment11MediaPlayer4playEv",
            "display_signature": "ecu_infotainment::play",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/media_player.cpp",
            "line": 151,
            "end_line": 198,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: Play command received.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Play command received.\"",
                    "line": 152,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: Play command received.\")"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"MediaPlayer: Player is muted. Sound will not be audible until unmuted.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Player is muted. Sound will not be audible until unmuted.\"",
                    "line": 154,
                    "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: Player is muted. Sound will not be audible until unmuted.\")"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"MediaPlayer: Already playing.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Already playing.\"",
                    "line": 160,
                    "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: Already playing.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: Resuming track '%s'.\", current_playlist_[current_track_index_].title.c_str()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Resuming track '%s'.\", current_playlist_[current_track_index_].title.c_str()",
                    "line": 172,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: Resuming track '%s'.\", current_playlist_[current_track_index_].title.c_str())"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: Playing radio station %.1f %s.\",                      (current_source_ == MediaSource::RADIO_FM ? current_fm_frequency_ : current_am_frequency_),                      (current_source_ == MediaSource::RADIO_FM ? \"MHz\" : \"kHz\")",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Playing radio station %.1f %s.\",                      (current_source_ == MediaSource::RADIO_FM ? current_fm_frequency_ : current_am_frequency_),                      (current_source_ == MediaSource::RADIO_FM ? \"MHz\" : \"kHz\")",
                    "line": 182,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: Playing radio station %.1f %s.\",                      (current_source_ == MediaSource::RADIO_FM ? current_fm_frequency_ : current_am_frequency_),                      (current_source_ == MediaSource::RADIO_FM ? \"MHz\" : \"kHz\"))"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: AUX source is active.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: AUX source is active.\"",
                    "line": 188,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: AUX source is active.\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"MediaPlayer: Play command on unhandled source: %s.\", mediaSourceToString(current_source_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Play command on unhandled source: %s.\", mediaSourceToString(current_source_)",
                    "line": 194,
                    "raw_log_statement": "LOG_WARNING(\"MediaPlayer: Play command on unhandled source: %s.\", mediaSourceToString(current_source_))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "reportPlaybackError(PlaybackStatus::ERROR_SOURCE_UNAVAILABLE, \"No playlist loaded for \" + std::string(mediaSourceToString(current_source_)))",
                    "callee_name_at_call_site": "reportPlaybackError",
                    "callee_resolved_key": "_ZN16ecu_infotainment11MediaPlayer19reportPlaybackErrorENS_14PlaybackStatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE",
                    "callee_resolved_display_name": "ecu_infotainment::MediaPlayer::reportPlaybackError",
                    "line": 164
                },
                {
                    "callee_expression": "mediaSourceToString(current_source_)",
                    "callee_name_at_call_site": "mediaSourceToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment19mediaSourceToStringENS_11MediaSourceE",
                    "callee_resolved_display_name": "ecu_infotainment::mediaSourceToString",
                    "line": 164
                },
                {
                    "callee_expression": "playTrackAtIndex(track_to_play)",
                    "callee_name_at_call_site": "playTrackAtIndex",
                    "callee_resolved_key": "_ZN16ecu_infotainment11MediaPlayer16playTrackAtIndexEi",
                    "callee_resolved_display_name": "ecu_infotainment::playTrackAtIndex",
                    "line": 176
                },
                {
                    "callee_expression": "reportPlaybackError(PlaybackStatus::ERROR_SOURCE_UNAVAILABLE, \"No media source selected to play.\")",
                    "callee_name_at_call_site": "reportPlaybackError",
                    "callee_resolved_key": "_ZN16ecu_infotainment11MediaPlayer19reportPlaybackErrorENS_14PlaybackStatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE",
                    "callee_resolved_display_name": "ecu_infotainment::MediaPlayer::reportPlaybackError",
                    "line": 191
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "mediaSourceToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment19mediaSourceToStringENS_11MediaSourceE",
                    "callee_resolved_display_name": "ecu_infotainment::mediaSourceToString",
                    "line": 194
                }
            ]
        },
        {
            "function_id_key": "_ZN16ecu_infotainment11MediaPlayer5pauseEv",
            "display_signature": "ecu_infotainment::pause",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/media_player.cpp",
            "line": 200,
            "end_line": 219,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: Pause command received.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Pause command received.\"",
                    "line": 201,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: Pause command received.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: Paused track '%s' at %llds.\",                  current_playlist_[current_track_index_].title.c_str(),                  paused_elapsed_time_.count()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Paused track '%s' at %llds.\",                  current_playlist_[current_track_index_].title.c_str(),                  paused_elapsed_time_.count()",
                    "line": 209,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: Paused track '%s' at %llds.\",                  current_playlist_[current_track_index_].title.c_str(),                  paused_elapsed_time_.count())"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"MediaPlayer: Already paused.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Already paused.\"",
                    "line": 213,
                    "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: Already paused.\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"MediaPlayer: Cannot pause. Not playing a pausable track or source %s is not pausable.\", mediaSourceToString(current_source_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Cannot pause. Not playing a pausable track or source %s is not pausable.\", mediaSourceToString(current_source_)",
                    "line": 215,
                    "raw_log_statement": "LOG_WARNING(\"MediaPlayer: Cannot pause. Not playing a pausable track or source %s is not pausable.\", mediaSourceToString(current_source_))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "mediaSourceToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment19mediaSourceToStringENS_11MediaSourceE",
                    "callee_resolved_display_name": "ecu_infotainment::mediaSourceToString",
                    "line": 215
                }
            ]
        },
        {
            "function_id_key": "_ZN16ecu_infotainment11MediaPlayer4stopEv",
            "display_signature": "ecu_infotainment::stop",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/media_player.cpp",
            "line": 221,
            "end_line": 241,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: Stop command received.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Stop command received.\"",
                    "line": 222,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: Stop command received.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: Stopped playback of track '%s'.\", current_playlist_[current_track_index_].title.c_str()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Stopped playback of track '%s'.\", current_playlist_[current_track_index_].title.c_str()",
                    "line": 229,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: Stopped playback of track '%s'.\", current_playlist_[current_track_index_].title.c_str())"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: Playback stopped on source %s.\", mediaSourceToString(current_source_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Playback stopped on source %s.\", mediaSourceToString(current_source_)",
                    "line": 231,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: Playback stopped on source %s.\", mediaSourceToString(current_source_))"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: Playback stopped on source %s.\", mediaSourceToString(current_source_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Playback stopped on source %s.\", mediaSourceToString(current_source_)",
                    "line": 235,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: Playback stopped on source %s.\", mediaSourceToString(current_source_))"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"MediaPlayer: Already stopped.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Already stopped.\"",
                    "line": 238,
                    "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: Already stopped.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "mediaSourceToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment19mediaSourceToStringENS_11MediaSourceE",
                    "callee_resolved_display_name": "ecu_infotainment::mediaSourceToString",
                    "line": 231
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "mediaSourceToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment19mediaSourceToStringENS_11MediaSourceE",
                    "callee_resolved_display_name": "ecu_infotainment::mediaSourceToString",
                    "line": 235
                }
            ]
        },
        {
            "function_id_key": "_ZN16ecu_infotainment11MediaPlayer9nextTrackEv",
            "display_signature": "ecu_infotainment::nextTrack",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/media_player.cpp",
            "line": 243,
            "end_line": 255,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: Next track command received.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Next track command received.\"",
                    "line": 244,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: Next track command received.\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"MediaPlayer: Next track command ignored. Source %s does not support tracks.\", mediaSourceToString(current_source_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Next track command ignored. Source %s does not support tracks.\", mediaSourceToString(current_source_)",
                    "line": 246,
                    "raw_log_statement": "LOG_WARNING(\"MediaPlayer: Next track command ignored. Source %s does not support tracks.\", mediaSourceToString(current_source_))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "mediaSourceToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment19mediaSourceToStringENS_11MediaSourceE",
                    "callee_resolved_display_name": "ecu_infotainment::mediaSourceToString",
                    "line": 246
                },
                {
                    "callee_expression": "reportPlaybackError(PlaybackStatus::ERROR_SOURCE_UNAVAILABLE, \"No playlist loaded for next track.\")",
                    "callee_name_at_call_site": "reportPlaybackError",
                    "callee_resolved_key": "_ZN16ecu_infotainment11MediaPlayer19reportPlaybackErrorENS_14PlaybackStatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE",
                    "callee_resolved_display_name": "ecu_infotainment::MediaPlayer::reportPlaybackError",
                    "line": 250
                },
                {
                    "callee_expression": "playTrackAtIndex(next_idx)",
                    "callee_name_at_call_site": "playTrackAtIndex",
                    "callee_resolved_key": "_ZN16ecu_infotainment11MediaPlayer16playTrackAtIndexEi",
                    "callee_resolved_display_name": "ecu_infotainment::playTrackAtIndex",
                    "line": 254
                }
            ]
        },
        {
            "function_id_key": "_ZN16ecu_infotainment11MediaPlayer13previousTrackEv",
            "display_signature": "ecu_infotainment::previousTrack",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/media_player.cpp",
            "line": 257,
            "end_line": 278,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: Previous track command received.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Previous track command received.\"",
                    "line": 258,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: Previous track command received.\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"MediaPlayer: Previous track command ignored. Source %s does not support tracks.\", mediaSourceToString(current_source_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Previous track command ignored. Source %s does not support tracks.\", mediaSourceToString(current_source_)",
                    "line": 260,
                    "raw_log_statement": "LOG_WARNING(\"MediaPlayer: Previous track command ignored. Source %s does not support tracks.\", mediaSourceToString(current_source_))"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"MediaPlayer: Restarting current track '%s'.\", current_playlist_[current_track_index_].title.c_str()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Restarting current track '%s'.\", current_playlist_[current_track_index_].title.c_str()",
                    "line": 269,
                    "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: Restarting current track '%s'.\", current_playlist_[current_track_index_].title.c_str())"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "mediaSourceToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment19mediaSourceToStringENS_11MediaSourceE",
                    "callee_resolved_display_name": "ecu_infotainment::mediaSourceToString",
                    "line": 260
                },
                {
                    "callee_expression": "reportPlaybackError(PlaybackStatus::ERROR_SOURCE_UNAVAILABLE, \"No playlist loaded for previous track.\")",
                    "callee_name_at_call_site": "reportPlaybackError",
                    "callee_resolved_key": "_ZN16ecu_infotainment11MediaPlayer19reportPlaybackErrorENS_14PlaybackStatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE",
                    "callee_resolved_display_name": "ecu_infotainment::MediaPlayer::reportPlaybackError",
                    "line": 264
                },
                {
                    "callee_expression": "getCurrentTrackElapsedTime()",
                    "callee_name_at_call_site": "getCurrentTrackElapsedTime",
                    "callee_resolved_key": "_ZNK16ecu_infotainment11MediaPlayer26getCurrentTrackElapsedTimeEv",
                    "callee_resolved_display_name": "ecu_infotainment::MediaPlayer::getCurrentTrackElapsedTime",
                    "line": 268
                },
                {
                    "callee_expression": "playTrackAtIndex(current_track_index_)",
                    "callee_name_at_call_site": "playTrackAtIndex",
                    "callee_resolved_key": "_ZN16ecu_infotainment11MediaPlayer16playTrackAtIndexEi",
                    "callee_resolved_display_name": "ecu_infotainment::playTrackAtIndex",
                    "line": 270
                },
                {
                    "callee_expression": "playTrackAtIndex(prev_idx)",
                    "callee_name_at_call_site": "playTrackAtIndex",
                    "callee_resolved_key": "_ZN16ecu_infotainment11MediaPlayer16playTrackAtIndexEi",
                    "callee_resolved_display_name": "ecu_infotainment::playTrackAtIndex",
                    "line": 277
                }
            ]
        },
        {
            "function_id_key": "_ZN16ecu_infotainment11MediaPlayer4seekENSt6chrono8durationIlSt5ratioILl1ELl1EEEE",
            "display_signature": "ecu_infotainment::seek",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/media_player.cpp",
            "line": 280,
            "end_line": 308,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: Seek command received. Target position: %llds.\", position.count()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Seek command received. Target position: %llds.\", position.count()",
                    "line": 281,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: Seek command received. Target position: %llds.\", position.count())"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"MediaPlayer: Cannot seek. Not currently playing or paused on a track.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Cannot seek. Not currently playing or paused on a track.\"",
                    "line": 283,
                    "raw_log_statement": "LOG_WARNING(\"MediaPlayer: Cannot seek. Not currently playing or paused on a track.\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"MediaPlayer: Seek command ignored. Source %s does not support seeking.\", mediaSourceToString(current_source_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Seek command ignored. Source %s does not support seeking.\", mediaSourceToString(current_source_)",
                    "line": 287,
                    "raw_log_statement": "LOG_WARNING(\"MediaPlayer: Seek command ignored. Source %s does not support seeking.\", mediaSourceToString(current_source_))"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"MediaPlayer: Invalid seek position %llds for track '%s' (duration %llds). Clamping.\",                     position.count(), track.title.c_str(), track.duration.count()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Invalid seek position %llds for track '%s' (duration %llds). Clamping.\",                     position.count(), track.title.c_str(), track.duration.count()",
                    "line": 297,
                    "raw_log_statement": "LOG_WARNING(\"MediaPlayer: Invalid seek position %llds for track '%s' (duration %llds). Clamping.\",                     position.count(), track.title.c_str(), track.duration.count())"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: Seeked track '%s' to %llds.\", track.title.c_str(), position.count()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Seeked track '%s' to %llds.\", track.title.c_str(), position.count()",
                    "line": 306,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: Seeked track '%s' to %llds.\", track.title.c_str(), position.count())"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "mediaSourceToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment19mediaSourceToStringENS_11MediaSourceE",
                    "callee_resolved_display_name": "ecu_infotainment::mediaSourceToString",
                    "line": 287
                },
                {
                    "callee_expression": "reportPlaybackError(PlaybackStatus::ERROR_TRACK_UNREADABLE, \"No track loaded to seek in.\")",
                    "callee_name_at_call_site": "reportPlaybackError",
                    "callee_resolved_key": "_ZN16ecu_infotainment11MediaPlayer19reportPlaybackErrorENS_14PlaybackStatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE",
                    "callee_resolved_display_name": "ecu_infotainment::MediaPlayer::reportPlaybackError",
                    "line": 291
                }
            ]
        },
        {
            "function_id_key": "_ZN16ecu_infotainment11MediaPlayer9setVolumeEi",
            "display_signature": "ecu_infotainment::setVolume",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/media_player.cpp",
            "line": 311,
            "end_line": 328,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: Set volume command. Level: %d%%.\", level_percent",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Set volume command. Level: %d%%.\", level_percent",
                    "line": 313,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: Set volume command. Level: %d%%.\", level_percent)"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"MediaPlayer: Volume already at %d%%.\", level_percent",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Volume already at %d%%.\", level_percent",
                    "line": 315,
                    "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: Volume already at %d%%.\", level_percent)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: Volume set to %d%%. Unmuting device.\", volume_level_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Volume set to %d%%. Unmuting device.\", volume_level_",
                    "line": 320,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: Volume set to %d%%. Unmuting device.\", volume_level_)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: Volume set to 0%%. Muting device.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Volume set to 0%%. Muting device.\"",
                    "line": 323,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: Volume set to 0%%. Muting device.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: Volume is now %d%%. Muted: %s.\", volume_level_, muted_ ? \"YES\" : \"NO\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Volume is now %d%%. Muted: %s.\", volume_level_, muted_ ? \"YES\" : \"NO\"",
                    "line": 326,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: Volume is now %d%%. Muted: %s.\", volume_level_, muted_ ? \"YES\" : \"NO\")"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZNK16ecu_infotainment11MediaPlayer9getVolumeEv",
            "display_signature": "ecu_infotainment::getVolume",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/media_player.cpp",
            "line": 330,
            "end_line": 333,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"MediaPlayer: getVolume() -> %d%%. Muted: %s.\", volume_level_, muted_ ? \"YES\" : \"NO\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: getVolume() -> %d%%. Muted: %s.\", volume_level_, muted_ ? \"YES\" : \"NO\"",
                    "line": 331,
                    "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: getVolume() -> %d%%. Muted: %s.\", volume_level_, muted_ ? \"YES\" : \"NO\")"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN16ecu_infotainment11MediaPlayer4muteEb",
            "display_signature": "ecu_infotainment::mute",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/media_player.cpp",
            "line": 335,
            "end_line": 345,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: Mute command. Enable: %s.\", enable_mute ? \"YES\" : \"NO\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Mute command. Enable: %s.\", enable_mute ? \"YES\" : \"NO\"",
                    "line": 336,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: Mute command. Enable: %s.\", enable_mute ? \"YES\" : \"NO\")"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"MediaPlayer: Mute state already %s.\", muted_ ? \"ON\" : \"OFF\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Mute state already %s.\", muted_ ? \"ON\" : \"OFF\"",
                    "line": 338,
                    "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: Mute state already %s.\", muted_ ? \"ON\" : \"OFF\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: Mute state is now %s. Volume level (if unmuted): %d%%.\",              muted_ ? \"ON\" : \"OFF\", volume_level_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Mute state is now %s. Volume level (if unmuted): %d%%.\",              muted_ ? \"ON\" : \"OFF\", volume_level_",
                    "line": 342,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: Mute state is now %s. Volume level (if unmuted): %d%%.\",              muted_ ? \"ON\" : \"OFF\", volume_level_)"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZNK16ecu_infotainment11MediaPlayer7isMutedEv",
            "display_signature": "ecu_infotainment::isMuted",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/media_player.cpp",
            "line": 347,
            "end_line": 350,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"MediaPlayer: isMuted() -> %s.\", muted_ ? \"YES\" : \"NO\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: isMuted() -> %s.\", muted_ ? \"YES\" : \"NO\"",
                    "line": 348,
                    "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: isMuted() -> %s.\", muted_ ? \"YES\" : \"NO\")"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZNK16ecu_infotainment11MediaPlayer17getPlaybackStatusEv",
            "display_signature": "ecu_infotainment::getPlaybackStatus",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/media_player.cpp",
            "line": 352,
            "end_line": 355,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"MediaPlayer: getPlaybackStatus() -> %s.\", playbackStatusToString(current_status_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: getPlaybackStatus() -> %s.\", playbackStatusToString(current_status_)",
                    "line": 353,
                    "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: getPlaybackStatus() -> %s.\", playbackStatusToString(current_status_))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "playbackStatusToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment22playbackStatusToStringENS_14PlaybackStatusE",
                    "callee_resolved_display_name": "ecu_infotainment::playbackStatusToString",
                    "line": 353
                }
            ]
        },
        {
            "function_id_key": "_ZNK16ecu_infotainment11MediaPlayer19getCurrentTrackInfoEv",
            "display_signature": "ecu_infotainment::getCurrentTrackInfo",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/media_player.cpp",
            "line": 357,
            "end_line": 367,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"MediaPlayer: getCurrentTrackInfo() for '%s'.\", current_playlist_[current_track_index_].title.c_str()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: getCurrentTrackInfo() for '%s'.\", current_playlist_[current_track_index_].title.c_str()",
                    "line": 360,
                    "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: getCurrentTrackInfo() for '%s'.\", current_playlist_[current_track_index_].title.c_str())"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"MediaPlayer: getCurrentTrackInfo() -> No track info available for current source/status.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: getCurrentTrackInfo() -> No track info available for current source/status.\"",
                    "line": 365,
                    "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: getCurrentTrackInfo() -> No track info available for current source/status.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "current_playlist_[current_track_index_]",
                    "callee_name_at_call_site": "TrackInfo",
                    "callee_resolved_key": "_ZN16ecu_infotainment9TrackInfoC1ERKS0_",
                    "callee_resolved_display_name": "ecu_infotainment::TrackInfo::TrackInfo",
                    "line": 361
                }
            ]
        },
        {
            "function_id_key": "_ZNK16ecu_infotainment11MediaPlayer26getCurrentTrackElapsedTimeEv",
            "display_signature": "ecu_infotainment::getCurrentTrackElapsedTime",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/media_player.cpp",
            "line": 369,
            "end_line": 382,
            "logs_in_order": [],
            "calls_in_order": [
                {
                    "callee_expression": "elapsed",
                    "callee_name_at_call_site": "(anonymous_call)",
                    "callee_resolved_key": null,
                    "callee_resolved_display_name": "(unknown_callee_expr)",
                    "line": 375
                }
            ]
        },
        {
            "function_id_key": "_ZN16ecu_infotainment11MediaPlayer12loadPlaylistERKSt6vectorINS_9TrackInfoESaIS2_EE",
            "display_signature": "ecu_infotainment::loadPlaylist",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/media_player.cpp",
            "line": 384,
            "end_line": 399,
            "logs_in_order": [
                {
                    "level": "WARNING",
                    "log_format_string": "\"MediaPlayer: Cannot load playlist. Current source %s does not support playlists.\",                     mediaSourceToString(current_source_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Cannot load playlist. Current source %s does not support playlists.\",                     mediaSourceToString(current_source_)",
                    "line": 386,
                    "raw_log_statement": "LOG_WARNING(\"MediaPlayer: Cannot load playlist. Current source %s does not support playlists.\",                     mediaSourceToString(current_source_))"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: Playlist with %zu tracks loaded for source %s.\",              playlist.size(), mediaSourceToString(current_source_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Playlist with %zu tracks loaded for source %s.\",              playlist.size(), mediaSourceToString(current_source_)",
                    "line": 393,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: Playlist with %zu tracks loaded for source %s.\",              playlist.size(), mediaSourceToString(current_source_))"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"MediaPlayer: Playlist item %zu: '%s' by '%s'\", i+1, playlist[i].title.c_str(), playlist[i].artist.c_str()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Playlist item %zu: '%s' by '%s'\", i+1, playlist[i].title.c_str(), playlist[i].artist.c_str()",
                    "line": 396,
                    "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: Playlist item %zu: '%s' by '%s'\", i+1, playlist[i].title.c_str(), playlist[i].artist.c_str())"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "mediaSourceToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment19mediaSourceToStringENS_11MediaSourceE",
                    "callee_resolved_display_name": "ecu_infotainment::mediaSourceToString",
                    "line": 386
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "mediaSourceToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment19mediaSourceToStringENS_11MediaSourceE",
                    "callee_resolved_display_name": "ecu_infotainment::mediaSourceToString",
                    "line": 393
                }
            ]
        },
        {
            "function_id_key": "_ZN16ecu_infotainment11MediaPlayer9tuneRadioEdNS_11MediaSourceE",
            "display_signature": "ecu_infotainment::tuneRadio",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/media_player.cpp",
            "line": 401,
            "end_line": 424,
            "logs_in_order": [
                {
                    "level": "ERROR",
                    "log_format_string": "\"MediaPlayer: Invalid radio band specified for tuning: %s\", mediaSourceToString(radio_band)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Invalid radio band specified for tuning: %s\", mediaSourceToString(radio_band)",
                    "line": 403,
                    "raw_log_statement": "LOG_ERROR(\"MediaPlayer: Invalid radio band specified for tuning: %s\", mediaSourceToString(radio_band))"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"MediaPlayer: Cannot tune %s. Current source is %s. Please select %s source first.\",                     mediaSourceToString(radio_band), mediaSourceToString(current_source_), mediaSourceToString(radio_band)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Cannot tune %s. Current source is %s. Please select %s source first.\",                     mediaSourceToString(radio_band), mediaSourceToString(current_source_), mediaSourceToString(radio_band)",
                    "line": 407,
                    "raw_log_statement": "LOG_WARNING(\"MediaPlayer: Cannot tune %s. Current source is %s. Please select %s source first.\",                     mediaSourceToString(radio_band), mediaSourceToString(current_source_), mediaSourceToString(radio_band))"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: Tuned FM Radio to %.1f MHz.\", current_fm_frequency_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Tuned FM Radio to %.1f MHz.\", current_fm_frequency_",
                    "line": 416,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: Tuned FM Radio to %.1f MHz.\", current_fm_frequency_)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: Tuned AM Radio to %.0f kHz.\", current_am_frequency_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Tuned AM Radio to %.0f kHz.\", current_am_frequency_",
                    "line": 419,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: Tuned AM Radio to %.0f kHz.\", current_am_frequency_)"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"MediaPlayer: Radio tuned. Status set to PLAYING.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Radio tuned. Status set to PLAYING.\"",
                    "line": 422,
                    "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: Radio tuned. Status set to PLAYING.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "mediaSourceToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment19mediaSourceToStringENS_11MediaSourceE",
                    "callee_resolved_display_name": "ecu_infotainment::mediaSourceToString",
                    "line": 403
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "mediaSourceToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment19mediaSourceToStringENS_11MediaSourceE",
                    "callee_resolved_display_name": "ecu_infotainment::mediaSourceToString",
                    "line": 407
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "mediaSourceToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment19mediaSourceToStringENS_11MediaSourceE",
                    "callee_resolved_display_name": "ecu_infotainment::mediaSourceToString",
                    "line": 407
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "mediaSourceToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment19mediaSourceToStringENS_11MediaSourceE",
                    "callee_resolved_display_name": "ecu_infotainment::mediaSourceToString",
                    "line": 407
                }
            ]
        },
        {
            "function_id_key": "_ZN16ecu_infotainment11MediaPlayer14handleTrackEndEv",
            "display_signature": "ecu_infotainment::handleTrackEnd",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/media_player.cpp",
            "line": 426,
            "end_line": 442,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: Track '%s' ended.\", current_playlist_[current_track_index_].title.c_str()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Track '%s' ended.\", current_playlist_[current_track_index_].title.c_str()",
                    "line": 427,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: Track '%s' ended.\", current_playlist_[current_track_index_].title.c_str())"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: Playing next track in playlist.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Playing next track in playlist.\"",
                    "line": 433,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: Playing next track in playlist.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: End of playlist. Repeating from beginning.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: End of playlist. Repeating from beginning.\"",
                    "line": 436,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: End of playlist. Repeating from beginning.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"MediaPlayer: End of playlist. Stopping playback.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: End of playlist. Stopping playback.\"",
                    "line": 439,
                    "raw_log_statement": "LOG_INFO(\"MediaPlayer: End of playlist. Stopping playback.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "nextTrack()",
                    "callee_name_at_call_site": "nextTrack",
                    "callee_resolved_key": "_ZN16ecu_infotainment11MediaPlayer9nextTrackEv",
                    "callee_resolved_display_name": "ecu_infotainment::nextTrack",
                    "line": 434
                },
                {
                    "callee_expression": "playTrackAtIndex(0)",
                    "callee_name_at_call_site": "playTrackAtIndex",
                    "callee_resolved_key": "_ZN16ecu_infotainment11MediaPlayer16playTrackAtIndexEi",
                    "callee_resolved_display_name": "ecu_infotainment::playTrackAtIndex",
                    "line": 437
                },
                {
                    "callee_expression": "stop()",
                    "callee_name_at_call_site": "stop",
                    "callee_resolved_key": "_ZN16ecu_infotainment11MediaPlayer4stopEv",
                    "callee_resolved_display_name": "ecu_infotainment::stop",
                    "line": 440
                }
            ]
        },
        {
            "function_id_key": "_ZN16ecu_infotainment11MediaPlayer19simulateTimePassingEv",
            "display_signature": "ecu_infotainment::simulateTimePassing",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/media_player.cpp",
            "line": 444,
            "end_line": 471,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"MediaPlayer: Track '%s' progress: %llds / %llds.\",                       current_track.title.c_str(), elapsed_time.count(), current_track.duration.count()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Track '%s' progress: %llds / %llds.\",                       current_track.title.c_str(), elapsed_time.count(), current_track.duration.count()",
                    "line": 455,
                    "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: Track '%s' progress: %llds / %llds.\",                       current_track.title.c_str(), elapsed_time.count(), current_track.duration.count())"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "getCurrentTrackElapsedTime()",
                    "callee_name_at_call_site": "getCurrentTrackElapsedTime",
                    "callee_resolved_key": "_ZNK16ecu_infotainment11MediaPlayer26getCurrentTrackElapsedTimeEv",
                    "callee_resolved_display_name": "ecu_infotainment::getCurrentTrackElapsedTime",
                    "line": 449
                },
                {
                    "callee_expression": "handleTrackEnd()",
                    "callee_name_at_call_site": "handleTrackEnd",
                    "callee_resolved_key": "_ZN16ecu_infotainment11MediaPlayer14handleTrackEndEv",
                    "callee_resolved_display_name": "ecu_infotainment::handleTrackEnd",
                    "line": 462
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "mediaSourceToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment19mediaSourceToStringENS_11MediaSourceE",
                    "callee_resolved_display_name": "ecu_infotainment::mediaSourceToString",
                    "line": 467
                }
            ]
        },
        {
            "function_id_key": "_ZN16ecu_infotainment11MediaPlayer19reportPlaybackErrorENS_14PlaybackStatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE",
            "display_signature": "ecu_infotainment::reportPlaybackError",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/media_player.cpp",
            "line": 474,
            "end_line": 479,
            "logs_in_order": [
                {
                    "level": "ERROR",
                    "log_format_string": "\"MediaPlayer: Playback Error (%s): %s\",               playbackStatusToString(error_status), details.c_str()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"MediaPlayer: Playback Error (%s): %s\",               playbackStatusToString(error_status), details.c_str()",
                    "line": 476,
                    "raw_log_statement": "LOG_ERROR(\"MediaPlayer: Playback Error (%s): %s\",               playbackStatusToString(error_status), details.c_str())"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "playbackStatusToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment22playbackStatusToStringENS_14PlaybackStatusE",
                    "callee_resolved_display_name": "ecu_infotainment::playbackStatusToString",
                    "line": 476
                }
            ]
        },
        {
            "function_id_key": "_ZN16ecu_infotainment11MediaPlayer19updatePlaybackStateEv",
            "display_signature": "ecu_infotainment::updatePlaybackState",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/media_player.cpp",
            "line": 481,
            "end_line": 503,
            "logs_in_order": [],
            "calls_in_order": [
                {
                    "callee_expression": "simulateTimePassing()",
                    "callee_name_at_call_site": "simulateTimePassing",
                    "callee_resolved_key": "_ZN16ecu_infotainment11MediaPlayer19simulateTimePassingEv",
                    "callee_resolved_display_name": "ecu_infotainment::simulateTimePassing",
                    "line": 484
                },
                {
                    "callee_expression": "reportPlaybackError(PlaybackStatus::ERROR_SOURCE_UNAVAILABLE, \"USB device disconnected unexpectedly (simulated).\")",
                    "callee_name_at_call_site": "reportPlaybackError",
                    "callee_resolved_key": "_ZN16ecu_infotainment11MediaPlayer19reportPlaybackErrorENS_14PlaybackStatusERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE",
                    "callee_resolved_display_name": "ecu_infotainment::reportPlaybackError",
                    "line": 498
                },
                {
                    "callee_expression": "stop()",
                    "callee_name_at_call_site": "stop",
                    "callee_resolved_key": "_ZN16ecu_infotainment11MediaPlayer4stopEv",
                    "callee_resolved_display_name": "ecu_infotainment::stop",
                    "line": 499
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "playbackStatusToString",
                    "callee_resolved_key": "_ZN16ecu_infotainment22playbackStatusToStringENS_14PlaybackStatusE",
                    "callee_resolved_display_name": "ecu_infotainment::playbackStatusToString",
                    "line": 502
                }
            ]
        },
        {
            "function_id_key": "_ZNK16ecu_infotainment13MapCoordinate7isValidEv",
            "display_signature": "ecu_infotainment::MapCoordinate::isValid",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/navigation_system.h",
            "line": 21,
            "end_line": 24,
            "logs_in_order": [],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZNK16ecu_infotainment13MapCoordinate10distanceToERKS0_",
            "display_signature": "ecu_infotainment::MapCoordinate::distanceTo",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/navigation_system.h",
            "line": 26,
            "end_line": 31,
            "logs_in_order": [],
            "calls_in_order": [
                {
                    "callee_expression": "isValid()",
                    "callee_name_at_call_site": "isValid",
                    "callee_resolved_key": "_ZNK16ecu_infotainment13MapCoordinate7isValidEv",
                    "callee_resolved_display_name": "ecu_infotainment::MapCoordinate::isValid",
                    "line": 27
                },
                {
                    "callee_expression": "other.isValid()",
                    "callee_name_at_call_site": "isValid",
                    "callee_resolved_key": "_ZNK16ecu_infotainment13MapCoordinate7isValidEv",
                    "callee_resolved_display_name": "ecu_infotainment::MapCoordinate::isValid",
                    "line": 27
                },
                {
                    "callee_expression": "std::sqrt(lat_diff * lat_diff + lon_diff * lon_diff)",
                    "callee_name_at_call_site": "sqrt",
                    "callee_resolved_key": "sqrt",
                    "callee_resolved_display_name": "sqrt",
                    "line": 30
                }
            ]
        },
        {
            "function_id_key": "_ZN18ecu_safety_systems16absStateToStringENS_8ABSStateE",
            "display_signature": "ecu_safety_systems::absStateToString",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_safety_systems/abs_control.cpp",
            "line": 11,
            "end_line": 20,
            "logs_in_order": [],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN18ecu_safety_systems10ABSControlC1Ev",
            "display_signature": "ecu_safety_systems::ABSControl",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_safety_systems/abs_control.cpp",
            "line": 23,
            "end_line": 37,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"ABSControl: Initializing...\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: Initializing...\"",
                    "line": 30,
                    "raw_log_statement": "LOG_INFO(\"ABSControl: Initializing...\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "initialize()",
                    "callee_name_at_call_site": "initialize",
                    "callee_resolved_key": "_ZN18ecu_safety_systems10ABSControl10initializeEv",
                    "callee_resolved_display_name": "ecu_safety_systems::ABSControl::initialize",
                    "line": 36
                }
            ]
        },
        {
            "function_id_key": "_ZN18ecu_safety_systems10ABSControlD1Ev",
            "display_signature": "ecu_safety_systems::~ABSControl",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_safety_systems/abs_control.cpp",
            "line": 39,
            "end_line": 41,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"ABSControl: Shutting down. Final state: %s.\", absStateToString(current_abs_state_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: Shutting down. Final state: %s.\", absStateToString(current_abs_state_)",
                    "line": 40,
                    "raw_log_statement": "LOG_INFO(\"ABSControl: Shutting down. Final state: %s.\", absStateToString(current_abs_state_))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "absStateToString",
                    "callee_resolved_key": "_ZN18ecu_safety_systems16absStateToStringENS_8ABSStateE",
                    "callee_resolved_display_name": "ecu_safety_systems::absStateToString",
                    "line": 40
                }
            ]
        },
        {
            "function_id_key": "_ZN18ecu_safety_systems10ABSControl10initializeEv",
            "display_signature": "ecu_safety_systems::initialize",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_safety_systems/abs_control.cpp",
            "line": 43,
            "end_line": 61,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"ABSControl: Performing system initialization and self-checks.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: Performing system initialization and self-checks.\"",
                    "line": 44,
                    "raw_log_statement": "LOG_INFO(\"ABSControl: Performing system initialization and self-checks.\")"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ABSControl: Initialized data for wheel %d.\", i",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: Initialized data for wheel %d.\", i",
                    "line": 49,
                    "raw_log_statement": "LOG_DEBUG(\"ABSControl: Initialized data for wheel %d.\", i)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"ABSControl: Initialization complete. System INACTIVE.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: Initialization complete. System INACTIVE.\"",
                    "line": 57,
                    "raw_log_statement": "LOG_INFO(\"ABSControl: Initialization complete. System INACTIVE.\")"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"ABSControl: Initialization failed due to fault %d found during diagnostics. System in FAULT_DETECTED state.\", fault_code_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: Initialization failed due to fault %d found during diagnostics. System in FAULT_DETECTED state.\", fault_code_",
                    "line": 59,
                    "raw_log_statement": "LOG_ERROR(\"ABSControl: Initialization failed due to fault %d found during diagnostics. System in FAULT_DETECTED state.\", fault_code_)"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "runDiagnostics()",
                    "callee_name_at_call_site": "runDiagnostics",
                    "callee_resolved_key": "_ZN18ecu_safety_systems10ABSControl14runDiagnosticsEv",
                    "callee_resolved_display_name": "ecu_safety_systems::ABSControl::runDiagnostics",
                    "line": 53
                }
            ]
        },
        {
            "function_id_key": "_ZN18ecu_safety_systems10ABSControl27updateVehicleReferenceSpeedERKSt6vectorI10SensorDataSaIS2_EEd",
            "display_signature": "ecu_safety_systems::updateVehicleReferenceSpeed",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_safety_systems/abs_control.cpp",
            "line": 64,
            "end_line": 110,
            "logs_in_order": [
                {
                    "level": "WARNING",
                    "log_format_string": "\"ABSControl: Invalid speed reading (%.2f km/h) for wheel %d.\", wheel_speed_sensors[i].value, static_cast<int>(i)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: Invalid speed reading (%.2f km/h) for wheel %d.\", wheel_speed_sensors[i].value, static_cast<int>(i)",
                    "line": 83,
                    "raw_log_statement": "LOG_WARNING(\"ABSControl: Invalid speed reading (%.2f km/h) for wheel %d.\", wheel_speed_sensors[i].value, static_cast<int>(i))"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"ABSControl: No valid wheel speed sensors to calculate reference speed. Using last known or zero.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: No valid wheel speed sensors to calculate reference speed. Using last known or zero.\"",
                    "line": 102,
                    "raw_log_statement": "LOG_WARNING(\"ABSControl: No valid wheel speed sensors to calculate reference speed. Using last known or zero.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "fabs(current_vehicle_speed_from_state - avg_wheel_speed)",
                    "callee_name_at_call_site": "fabs",
                    "callee_resolved_key": "fabs",
                    "callee_resolved_display_name": "fabs",
                    "line": 91
                }
            ]
        },
        {
            "function_id_key": "_ZN18ecu_safety_systems10ABSControl17detectWheelLockupERKNS_15WheelSensorDataEd",
            "display_signature": "ecu_safety_systems::detectWheelLockup",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_safety_systems/abs_control.cpp",
            "line": 113,
            "end_line": 148,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ABSControl: Wheel %d potential lockup. Speed: %.1f, RefSpeed: %.1f, Slip: %.2f\",                   wheel.wheel_id, wheel.speed_kmh, vehicle_reference_speed_kmh_, slip_ratio",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: Wheel %d potential lockup. Speed: %.1f, RefSpeed: %.1f, Slip: %.2f\",                   wheel.wheel_id, wheel.speed_kmh, vehicle_reference_speed_kmh_, slip_ratio",
                    "line": 132,
                    "raw_log_statement": "LOG_DEBUG(\"ABSControl: Wheel %d potential lockup. Speed: %.1f, RefSpeed: %.1f, Slip: %.2f\",                   wheel.wheel_id, wheel.speed_kmh, vehicle_reference_speed_kmh_, slip_ratio)"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"ABSControl: LOCKUP DETECTED for wheel %d! Speed: %.1f km/h, Ref: %.1f km/h, Slip: %.2f.\",                     wheel.wheel_id, wheel.speed_kmh, vehicle_reference_speed_kmh_, slip_ratio",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: LOCKUP DETECTED for wheel %d! Speed: %.1f km/h, Ref: %.1f km/h, Slip: %.2f.\",                     wheel.wheel_id, wheel.speed_kmh, vehicle_reference_speed_kmh_, slip_ratio",
                    "line": 144,
                    "raw_log_statement": "LOG_WARNING(\"ABSControl: LOCKUP DETECTED for wheel %d! Speed: %.1f km/h, Ref: %.1f km/h, Slip: %.2f.\",                     wheel.wheel_id, wheel.speed_kmh, vehicle_reference_speed_kmh_, slip_ratio)"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN18ecu_safety_systems10ABSControl15releasePressureERNS_15WheelSensorDataE",
            "display_signature": "ecu_safety_systems::releasePressure",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_safety_systems/abs_control.cpp",
            "line": 150,
            "end_line": 157,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"ABSControl: INTERVENTION - Releasing brake pressure for wheel %d.\", wheel.wheel_id",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: INTERVENTION - Releasing brake pressure for wheel %d.\", wheel.wheel_id",
                    "line": 151,
                    "raw_log_statement": "LOG_INFO(\"ABSControl: INTERVENTION - Releasing brake pressure for wheel %d.\", wheel.wheel_id)"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ABSControl: Wheel %d pressure reduced to %.1f bar.\", wheel.wheel_id, wheel.applied_brake_pressure_bar",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: Wheel %d pressure reduced to %.1f bar.\", wheel.wheel_id, wheel.applied_brake_pressure_bar",
                    "line": 156,
                    "raw_log_statement": "LOG_DEBUG(\"ABSControl: Wheel %d pressure reduced to %.1f bar.\", wheel.wheel_id, wheel.applied_brake_pressure_bar)"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN18ecu_safety_systems10ABSControl12holdPressureERNS_15WheelSensorDataE",
            "display_signature": "ecu_safety_systems::holdPressure",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_safety_systems/abs_control.cpp",
            "line": 159,
            "end_line": 163,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"ABSControl: INTERVENTION - Holding brake pressure for wheel %d at %.1f bar.\",              wheel.wheel_id, wheel.applied_brake_pressure_bar",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: INTERVENTION - Holding brake pressure for wheel %d at %.1f bar.\",              wheel.wheel_id, wheel.applied_brake_pressure_bar",
                    "line": 160,
                    "raw_log_statement": "LOG_INFO(\"ABSControl: INTERVENTION - Holding brake pressure for wheel %d at %.1f bar.\",              wheel.wheel_id, wheel.applied_brake_pressure_bar)"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN18ecu_safety_systems10ABSControl15reapplyPressureERNS_15WheelSensorDataE",
            "display_signature": "ecu_safety_systems::reapplyPressure",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_safety_systems/abs_control.cpp",
            "line": 165,
            "end_line": 173,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"ABSControl: INTERVENTION - Reapplying brake pressure for wheel %d.\", wheel.wheel_id",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: INTERVENTION - Reapplying brake pressure for wheel %d.\", wheel.wheel_id",
                    "line": 166,
                    "raw_log_statement": "LOG_INFO(\"ABSControl: INTERVENTION - Reapplying brake pressure for wheel %d.\", wheel.wheel_id)"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ABSControl: Wheel %d pressure increased to %.1f bar.\", wheel.wheel_id, wheel.applied_brake_pressure_bar",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: Wheel %d pressure increased to %.1f bar.\", wheel.wheel_id, wheel.applied_brake_pressure_bar",
                    "line": 172,
                    "raw_log_statement": "LOG_DEBUG(\"ABSControl: Wheel %d pressure increased to %.1f bar.\", wheel.wheel_id, wheel.applied_brake_pressure_bar)"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN18ecu_safety_systems10ABSControl21modulateBrakePressureERNS_15WheelSensorDataE",
            "display_signature": "ecu_safety_systems::modulateBrakePressure",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_safety_systems/abs_control.cpp",
            "line": 176,
            "end_line": 201,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ABSControl: Modulating pressure for wheel %d. Current speed: %.1f, Lock: %s, Pressure: %.1f\",               wheel_to_modulate.wheel_id, wheel_to_modulate.speed_kmh,               wheel_to_modulate.is_locking ? \"YES\" : \"NO\",               wheel_to_modulate.applied_brake_pressure_bar",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: Modulating pressure for wheel %d. Current speed: %.1f, Lock: %s, Pressure: %.1f\",               wheel_to_modulate.wheel_id, wheel_to_modulate.speed_kmh,               wheel_to_modulate.is_locking ? \"YES\" : \"NO\",               wheel_to_modulate.applied_brake_pressure_bar",
                    "line": 178,
                    "raw_log_statement": "LOG_DEBUG(\"ABSControl: Modulating pressure for wheel %d. Current speed: %.1f, Lock: %s, Pressure: %.1f\",               wheel_to_modulate.wheel_id, wheel_to_modulate.speed_kmh,               wheel_to_modulate.is_locking ? \"YES\" : \"NO\",               wheel_to_modulate.applied_brake_pressure_bar)"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "releasePressure(wheel_to_modulate)",
                    "callee_name_at_call_site": "releasePressure",
                    "callee_resolved_key": "_ZN18ecu_safety_systems10ABSControl15releasePressureERNS_15WheelSensorDataE",
                    "callee_resolved_display_name": "ecu_safety_systems::releasePressure",
                    "line": 185
                },
                {
                    "callee_expression": "holdPressure(wheel_to_modulate)",
                    "callee_name_at_call_site": "holdPressure",
                    "callee_resolved_key": "_ZN18ecu_safety_systems10ABSControl12holdPressureERNS_15WheelSensorDataE",
                    "callee_resolved_display_name": "ecu_safety_systems::holdPressure",
                    "line": 193
                },
                {
                    "callee_expression": "reapplyPressure(wheel_to_modulate)",
                    "callee_name_at_call_site": "reapplyPressure",
                    "callee_resolved_key": "_ZN18ecu_safety_systems10ABSControl15reapplyPressureERNS_15WheelSensorDataE",
                    "callee_resolved_display_name": "ecu_safety_systems::reapplyPressure",
                    "line": 196
                }
            ]
        },
        {
            "function_id_key": "_ZN18ecu_safety_systems10ABSControl20checkForSystemFaultsERKSt6vectorI10SensorDataSaIS2_EE",
            "display_signature": "ecu_safety_systems::checkForSystemFaults",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_safety_systems/abs_control.cpp",
            "line": 204,
            "end_line": 251,
            "logs_in_order": [
                {
                    "level": "ERROR",
                    "log_format_string": "\"ABSControl: FAULT - Wheel speed sensor ID mismatch or data error for sensor %d. Expected ID %d.\",                       wheel_speed_sensors[i].id, static_cast<int>(i)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: FAULT - Wheel speed sensor ID mismatch or data error for sensor %d. Expected ID %d.\",                       wheel_speed_sensors[i].id, static_cast<int>(i)",
                    "line": 213,
                    "raw_log_statement": "LOG_ERROR(\"ABSControl: FAULT - Wheel speed sensor ID mismatch or data error for sensor %d. Expected ID %d.\",                       wheel_speed_sensors[i].id, static_cast<int>(i))"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"ABSControl: FAULT - Irrational speed value (%.1f km/h) from wheel sensor %d.\",                        wheel_speed_sensors[i].value, static_cast<int>(i)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: FAULT - Irrational speed value (%.1f km/h) from wheel sensor %d.\",                        wheel_speed_sensors[i].value, static_cast<int>(i)",
                    "line": 220,
                    "raw_log_statement": "LOG_ERROR(\"ABSControl: FAULT - Irrational speed value (%.1f km/h) from wheel sensor %d.\",                        wheel_speed_sensors[i].value, static_cast<int>(i))"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"ABSControl: One or more wheel speed sensors may be providing invalid data or no data. Valid: %d/%zu\",             valid_sensor_count, wheel_speed_sensors.size()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: One or more wheel speed sensors may be providing invalid data or no data. Valid: %d/%zu\",             valid_sensor_count, wheel_speed_sensors.size()",
                    "line": 232,
                    "raw_log_statement": "LOG_WARNING(\"ABSControl: One or more wheel speed sensors may be providing invalid data or no data. Valid: %d/%zu\",             valid_sensor_count, wheel_speed_sensors.size())"
                },
                {
                    "level": "FATAL",
                    "log_format_string": "\"ABSControl: FAULT - All wheel speed sensors are providing invalid data or no data! ABS disabled.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: FAULT - All wheel speed sensors are providing invalid data or no data! ABS disabled.\"",
                    "line": 237,
                    "raw_log_statement": "LOG_FATAL(\"ABSControl: FAULT - All wheel speed sensors are providing invalid data or no data! ABS disabled.\")"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN18ecu_safety_systems10ABSControl14processBrakingERK12VehicleStateRKSt6vectorI10SensorDataSaIS5_EEd",
            "display_signature": "ecu_safety_systems::processBraking",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_safety_systems/abs_control.cpp",
            "line": 254,
            "end_line": 378,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ABSControl: Processing braking cycle. Vehicle Speed: %.1f km/h, Pedal Pressure: %.1f bar.\",               vehicle_state.speed_kmh, brake_pedal_pressure_input",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: Processing braking cycle. Vehicle Speed: %.1f km/h, Pedal Pressure: %.1f bar.\",               vehicle_state.speed_kmh, brake_pedal_pressure_input",
                    "line": 258,
                    "raw_log_statement": "LOG_DEBUG(\"ABSControl: Processing braking cycle. Vehicle Speed: %.1f km/h, Pedal Pressure: %.1f bar.\",               vehicle_state.speed_kmh, brake_pedal_pressure_input)"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"ABSControl: System in FAULT state. ABS intervention disabled. Pedal Pressure: %.1f\", brake_pedal_pressure_input",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: System in FAULT state. ABS intervention disabled. Pedal Pressure: %.1f\", brake_pedal_pressure_input",
                    "line": 262,
                    "raw_log_statement": "LOG_WARNING(\"ABSControl: System in FAULT state. ABS intervention disabled. Pedal Pressure: %.1f\", brake_pedal_pressure_input)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"ABSControl: System still initializing. Braking commands ignored for this cycle.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: System still initializing. Braking commands ignored for this cycle.\"",
                    "line": 271,
                    "raw_log_statement": "LOG_INFO(\"ABSControl: System still initializing. Braking commands ignored for this cycle.\")"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"ABSControl: FAULT detected during cycle. Aborting ABS logic for this cycle. Fault code: %d\", fault_code_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: FAULT detected during cycle. Aborting ABS logic for this cycle. Fault code: %d\", fault_code_",
                    "line": 282,
                    "raw_log_statement": "LOG_ERROR(\"ABSControl: FAULT detected during cycle. Aborting ABS logic for this cycle. Fault code: %d\", fault_code_)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"ABSControl: Conditions no longer require ABS intervention (speed or pressure too low). Transitioning to INACTIVE.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: Conditions no longer require ABS intervention (speed or pressure too low). Transitioning to INACTIVE.\"",
                    "line": 291,
                    "raw_log_statement": "LOG_INFO(\"ABSControl: Conditions no longer require ABS intervention (speed or pressure too low). Transitioning to INACTIVE.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"ABSControl: Conditions (Speed: %.1f, Pedal: %.1f) warrant ABS MONITORING.\", vehicle_reference_speed_kmh_, brake_pedal_pressure_input",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: Conditions (Speed: %.1f, Pedal: %.1f) warrant ABS MONITORING.\", vehicle_reference_speed_kmh_, brake_pedal_pressure_input",
                    "line": 295,
                    "raw_log_statement": "LOG_INFO(\"ABSControl: Conditions (Speed: %.1f, Pedal: %.1f) warrant ABS MONITORING.\", vehicle_reference_speed_kmh_, brake_pedal_pressure_input)"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ABSControl: State is %s. Analyzing wheel speeds for lockup.\", absStateToString(current_abs_state_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: State is %s. Analyzing wheel speeds for lockup.\", absStateToString(current_abs_state_)",
                    "line": 303,
                    "raw_log_statement": "LOG_DEBUG(\"ABSControl: State is %s. Analyzing wheel speeds for lockup.\", absStateToString(current_abs_state_))"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"ABSControl: Transitioning to INTERVENING state due to wheel lockup!\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: Transitioning to INTERVENING state due to wheel lockup!\"",
                    "line": 319,
                    "raw_log_statement": "LOG_WARNING(\"ABSControl: Transitioning to INTERVENING state due to wheel lockup!\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"ABSControl: No wheel lockup detected in INTERVENING state. Cycle: %d\", cycles_since_last_intervention_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: No wheel lockup detected in INTERVENING state. Cycle: %d\", cycles_since_last_intervention_",
                    "line": 336,
                    "raw_log_statement": "LOG_INFO(\"ABSControl: No wheel lockup detected in INTERVENING state. Cycle: %d\", cycles_since_last_intervention_)"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ABSControl: Wheel %d (no lock), pressure adjusted to %.1f bar (pedal: %.1f).\",                            wd.wheel_id, wd.applied_brake_pressure_bar, brake_pedal_pressure_input",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: Wheel %d (no lock), pressure adjusted to %.1f bar (pedal: %.1f).\",                            wd.wheel_id, wd.applied_brake_pressure_bar, brake_pedal_pressure_input",
                    "line": 347,
                    "raw_log_statement": "LOG_DEBUG(\"ABSControl: Wheel %d (no lock), pressure adjusted to %.1f bar (pedal: %.1f).\",                            wd.wheel_id, wd.applied_brake_pressure_bar, brake_pedal_pressure_input)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"ABSControl: INTERVENTION complete after %d cycles. Transitioning to MONITORING/INACTIVE.\", cycles_since_last_intervention_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: INTERVENTION complete after %d cycles. Transitioning to MONITORING/INACTIVE.\", cycles_since_last_intervention_",
                    "line": 352,
                    "raw_log_statement": "LOG_INFO(\"ABSControl: INTERVENTION complete after %d cycles. Transitioning to MONITORING/INACTIVE.\", cycles_since_last_intervention_)"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ABSControl: System INACTIVE. Applying pedal pressure %.1f bar to all wheels.\", brake_pedal_pressure_input",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: System INACTIVE. Applying pedal pressure %.1f bar to all wheels.\", brake_pedal_pressure_input",
                    "line": 369,
                    "raw_log_statement": "LOG_DEBUG(\"ABSControl: System INACTIVE. Applying pedal pressure %.1f bar to all wheels.\", brake_pedal_pressure_input)"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ABSControl: Braking cycle processing complete. Final ABS State: %s.\", absStateToString(current_abs_state_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: Braking cycle processing complete. Final ABS State: %s.\", absStateToString(current_abs_state_)",
                    "line": 377,
                    "raw_log_statement": "LOG_DEBUG(\"ABSControl: Braking cycle processing complete. Final ABS State: %s.\", absStateToString(current_abs_state_))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "updateVehicleReferenceSpeed(wheel_speed_sensors, vehicle_state.speed_kmh)",
                    "callee_name_at_call_site": "updateVehicleReferenceSpeed",
                    "callee_resolved_key": "_ZN18ecu_safety_systems10ABSControl27updateVehicleReferenceSpeedERKSt6vectorI10SensorDataSaIS2_EEd",
                    "callee_resolved_display_name": "ecu_safety_systems::updateVehicleReferenceSpeed",
                    "line": 277
                },
                {
                    "callee_expression": "checkForSystemFaults(wheel_speed_sensors)",
                    "callee_name_at_call_site": "checkForSystemFaults",
                    "callee_resolved_key": "_ZN18ecu_safety_systems10ABSControl20checkForSystemFaultsERKSt6vectorI10SensorDataSaIS2_EE",
                    "callee_resolved_display_name": "ecu_safety_systems::checkForSystemFaults",
                    "line": 280
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "absStateToString",
                    "callee_resolved_key": "_ZN18ecu_safety_systems16absStateToStringENS_8ABSStateE",
                    "callee_resolved_display_name": "ecu_safety_systems::absStateToString",
                    "line": 303
                },
                {
                    "callee_expression": "detectWheelLockup(wheel_data_[i], 1.0 /*g threshold, placeholder*/)",
                    "callee_name_at_call_site": "detectWheelLockup",
                    "callee_resolved_key": "_ZN18ecu_safety_systems10ABSControl17detectWheelLockupERKNS_15WheelSensorDataEd",
                    "callee_resolved_display_name": "ecu_safety_systems::detectWheelLockup",
                    "line": 311
                },
                {
                    "callee_expression": "modulateBrakePressure(wd)",
                    "callee_name_at_call_site": "modulateBrakePressure",
                    "callee_resolved_key": "_ZN18ecu_safety_systems10ABSControl21modulateBrakePressureERNS_15WheelSensorDataE",
                    "callee_resolved_display_name": "ecu_safety_systems::modulateBrakePressure",
                    "line": 325
                },
                {
                    "callee_expression": "reapplyPressure(wd)",
                    "callee_name_at_call_site": "reapplyPressure",
                    "callee_resolved_key": "_ZN18ecu_safety_systems10ABSControl15reapplyPressureERNS_15WheelSensorDataE",
                    "callee_resolved_display_name": "ecu_safety_systems::reapplyPressure",
                    "line": 341
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "absStateToString",
                    "callee_resolved_key": "_ZN18ecu_safety_systems16absStateToStringENS_8ABSStateE",
                    "callee_resolved_display_name": "ecu_safety_systems::absStateToString",
                    "line": 377
                }
            ]
        },
        {
            "function_id_key": "_ZNK18ecu_safety_systems10ABSControl15getCurrentStateEv",
            "display_signature": "ecu_safety_systems::getCurrentState",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_safety_systems/abs_control.cpp",
            "line": 381,
            "end_line": 384,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ABSControl: getCurrentState() -> %s.\", absStateToString(current_abs_state_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: getCurrentState() -> %s.\", absStateToString(current_abs_state_)",
                    "line": 382,
                    "raw_log_statement": "LOG_DEBUG(\"ABSControl: getCurrentState() -> %s.\", absStateToString(current_abs_state_))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "absStateToString",
                    "callee_resolved_key": "_ZN18ecu_safety_systems16absStateToStringENS_8ABSStateE",
                    "callee_resolved_display_name": "ecu_safety_systems::absStateToString",
                    "line": 382
                }
            ]
        },
        {
            "function_id_key": "_ZNK18ecu_safety_systems10ABSControl23isABSInterventionActiveEv",
            "display_signature": "ecu_safety_systems::isABSInterventionActive",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_safety_systems/abs_control.cpp",
            "line": 386,
            "end_line": 390,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ABSControl: isABSInterventionActive() -> %s.\", active ? \"YES\" : \"NO\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: isABSInterventionActive() -> %s.\", active ? \"YES\" : \"NO\"",
                    "line": 388,
                    "raw_log_statement": "LOG_DEBUG(\"ABSControl: isABSInterventionActive() -> %s.\", active ? \"YES\" : \"NO\")"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN18ecu_safety_systems10ABSControl14runDiagnosticsEv",
            "display_signature": "ecu_safety_systems::runDiagnostics",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_safety_systems/abs_control.cpp",
            "line": 392,
            "end_line": 440,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"ABSControl: Running system diagnostics...\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: Running system diagnostics...\"",
                    "line": 393,
                    "raw_log_statement": "LOG_INFO(\"ABSControl: Running system diagnostics...\")"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"ABSControl: DIAGNOSTIC FAULT - Wheel speed sensor connectivity check failed. Sensor_ID: %d\", (rand()%4)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: DIAGNOSTIC FAULT - Wheel speed sensor connectivity check failed. Sensor_ID: %d\", (rand()%4)",
                    "line": 402,
                    "raw_log_statement": "LOG_ERROR(\"ABSControl: DIAGNOSTIC FAULT - Wheel speed sensor connectivity check failed. Sensor_ID: %d\", (rand()%4))"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ABSControl: Wheel speed sensor connectivity OK.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: Wheel speed sensor connectivity OK.\"",
                    "line": 406,
                    "raw_log_statement": "LOG_DEBUG(\"ABSControl: Wheel speed sensor connectivity OK.\")"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"ABSControl: DIAGNOSTIC FAULT - ABS hydraulic unit/valve check failed (simulated).\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: DIAGNOSTIC FAULT - ABS hydraulic unit/valve check failed (simulated).\"",
                    "line": 426,
                    "raw_log_statement": "LOG_ERROR(\"ABSControl: DIAGNOSTIC FAULT - ABS hydraulic unit/valve check failed (simulated).\")"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"ABSControl: Actuator checks PASSED (simulated).\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: Actuator checks PASSED (simulated).\"",
                    "line": 430,
                    "raw_log_statement": "LOG_DEBUG(\"ABSControl: Actuator checks PASSED (simulated).\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"ABSControl: Diagnostics complete. FAULT DETECTED. Code: %d. System remains in FAULT_DETECTED state.\", fault_code_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: Diagnostics complete. FAULT DETECTED. Code: %d. System remains in FAULT_DETECTED state.\", fault_code_",
                    "line": 435,
                    "raw_log_statement": "LOG_WARNING(\"ABSControl: Diagnostics complete. FAULT DETECTED. Code: %d. System remains in FAULT_DETECTED state.\", fault_code_)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"ABSControl: Diagnostics complete. All systems nominal. System is INACTIVE.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"ABSControl: Diagnostics complete. All systems nominal. System is INACTIVE.\"",
                    "line": 438,
                    "raw_log_statement": "LOG_INFO(\"ABSControl: Diagnostics complete. All systems nominal. System is INACTIVE.\")"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN18ecu_safety_systems22airbagSysStateToStringENS_17AirbagSystemStateE",
            "display_signature": "ecu_safety_systems::airbagSysStateToString",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_safety_systems/airbag_control.cpp",
            "line": 10,
            "end_line": 22,
            "logs_in_order": [],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN18ecu_safety_systems16airbagIdToStringB5cxx11ENS_8AirbagIDE",
            "display_signature": "ecu_safety_systems::airbagIdToString",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_safety_systems/airbag_control.cpp",
            "line": 25,
            "end_line": 38,
            "logs_in_order": [],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN18ecu_safety_systems13AirbagControlC1Ev",
            "display_signature": "ecu_safety_systems::AirbagControl",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_safety_systems/airbag_control.cpp",
            "line": 41,
            "end_line": 52,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"AirbagControl: Initializing Airbag Control Unit (ACU)...\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: Initializing Airbag Control Unit (ACU)...\"",
                    "line": 46,
                    "raw_log_statement": "LOG_INFO(\"AirbagControl: Initializing Airbag Control Unit (ACU)...\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "initializeSystem()",
                    "callee_name_at_call_site": "initializeSystem",
                    "callee_resolved_key": "_ZN18ecu_safety_systems13AirbagControl16initializeSystemEv",
                    "callee_resolved_display_name": "ecu_safety_systems::AirbagControl::initializeSystem",
                    "line": 51
                }
            ]
        },
        {
            "function_id_key": "_ZN18ecu_safety_systems13AirbagControlD1Ev",
            "display_signature": "ecu_safety_systems::~AirbagControl",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_safety_systems/airbag_control.cpp",
            "line": 54,
            "end_line": 56,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"AirbagControl: Shutting down ACU. Final system state: %s.\", airbagSysStateToString(system_state_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: Shutting down ACU. Final system state: %s.\", airbagSysStateToString(system_state_)",
                    "line": 55,
                    "raw_log_statement": "LOG_INFO(\"AirbagControl: Shutting down ACU. Final system state: %s.\", airbagSysStateToString(system_state_))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "airbagSysStateToString",
                    "callee_resolved_key": "_ZN18ecu_safety_systems22airbagSysStateToStringENS_17AirbagSystemStateE",
                    "callee_resolved_display_name": "ecu_safety_systems::airbagSysStateToString",
                    "line": 55
                }
            ]
        },
        {
            "function_id_key": "_ZN18ecu_safety_systems13AirbagControl16initializeSystemEv",
            "display_signature": "ecu_safety_systems::initializeSystem",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_safety_systems/airbag_control.cpp",
            "line": 58,
            "end_line": 75,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"AirbagControl: Performing ACU power-on self-test (POST)...\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: Performing ACU power-on self-test (POST)...\"",
                    "line": 59,
                    "raw_log_statement": "LOG_INFO(\"AirbagControl: Performing ACU power-on self-test (POST)...\")"
                },
                {
                    "level": "FATAL",
                    "log_format_string": "\"AirbagControl: ACU POST FAILED. Fault Code: %d. Airbag system is INOPERATIVE.\", fault_code_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: ACU POST FAILED. Fault Code: %d. Airbag system is INOPERATIVE.\", fault_code_",
                    "line": 70,
                    "raw_log_statement": "LOG_FATAL(\"AirbagControl: ACU POST FAILED. Fault Code: %d. Airbag system is INOPERATIVE.\", fault_code_)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"AirbagControl: ACU POST successful. System is READY and ARMED.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: ACU POST successful. System is READY and ARMED.\"",
                    "line": 73,
                    "raw_log_statement": "LOG_INFO(\"AirbagControl: ACU POST successful. System is READY and ARMED.\")"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "runSystemCheck()",
                    "callee_name_at_call_site": "runSystemCheck",
                    "callee_resolved_key": "_ZN18ecu_safety_systems13AirbagControl14runSystemCheckEv",
                    "callee_resolved_display_name": "ecu_safety_systems::AirbagControl::runSystemCheck",
                    "line": 65
                }
            ]
        },
        {
            "function_id_key": "_ZN18ecu_safety_systems13AirbagControl18detectSystemFaultsERKNS_16CrashSensorInputE",
            "display_signature": "ecu_safety_systems::detectSystemFaults",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_safety_systems/airbag_control.cpp",
            "line": 77,
            "end_line": 114,
            "logs_in_order": [
                {
                    "level": "WARNING",
                    "log_format_string": "\"AirbagControl: System remains in FAULT state. Code: %d. State: %s\",                         fault_code_, airbagSysStateToString(system_state_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: System remains in FAULT state. Code: %d. State: %s\",                         fault_code_, airbagSysStateToString(system_state_)",
                    "line": 88,
                    "raw_log_statement": "LOG_WARNING(\"AirbagControl: System remains in FAULT state. Code: %d. State: %s\",                         fault_code_, airbagSysStateToString(system_state_))"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"AirbagControl: FAULT DETECTED - Sensor issue (e.g., accelerometer G-sensor %d failure). Fault Code: %d. System degraded.\",                   (rand()%3 + 1), fault_code_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: FAULT DETECTED - Sensor issue (e.g., accelerometer G-sensor %d failure). Fault Code: %d. System degraded.\",                   (rand()%3 + 1), fault_code_",
                    "line": 98,
                    "raw_log_statement": "LOG_ERROR(\"AirbagControl: FAULT DETECTED - Sensor issue (e.g., accelerometer G-sensor %d failure). Fault Code: %d. System degraded.\",                   (rand()%3 + 1), fault_code_)"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"AirbagControl: FAULT DETECTED - Deployment circuit issue for airbag %s. Fault Code: %d. Specific airbag may not deploy.\",                   airbagIdToString(faulty_airbag).c_str(), fault_code_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: FAULT DETECTED - Deployment circuit issue for airbag %s. Fault Code: %d. Specific airbag may not deploy.\",                   airbagIdToString(faulty_airbag).c_str(), fault_code_",
                    "line": 109,
                    "raw_log_statement": "LOG_ERROR(\"AirbagControl: FAULT DETECTED - Deployment circuit issue for airbag %s. Fault Code: %d. Specific airbag may not deploy.\",                   airbagIdToString(faulty_airbag).c_str(), fault_code_)"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "airbagSysStateToString",
                    "callee_resolved_key": "_ZN18ecu_safety_systems22airbagSysStateToStringENS_17AirbagSystemStateE",
                    "callee_resolved_display_name": "ecu_safety_systems::airbagSysStateToString",
                    "line": 88
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "airbagIdToString",
                    "callee_resolved_key": "_ZN18ecu_safety_systems16airbagIdToStringB5cxx11ENS_8AirbagIDE",
                    "callee_resolved_display_name": "ecu_safety_systems::airbagIdToString",
                    "line": 109
                }
            ]
        },
        {
            "function_id_key": "_ZN18ecu_safety_systems13AirbagControl21evaluateCrashSeverityERKNS_16CrashSensorInputERK12VehicleState",
            "display_signature": "ecu_safety_systems::evaluateCrashSeverity",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_safety_systems/airbag_control.cpp",
            "line": 117,
            "end_line": 160,
            "logs_in_order": [
                {
                    "level": "WARNING",
                    "log_format_string": "\"AirbagControl: CRITERIA MET - Potential severe frontal impact. G-long: %.1f, Speed: %.1f km/h\",                     impact_data.longitudinal_g, vehicle_state.speed_kmh",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: CRITERIA MET - Potential severe frontal impact. G-long: %.1f, Speed: %.1f km/h\",                     impact_data.longitudinal_g, vehicle_state.speed_kmh",
                    "line": 132,
                    "raw_log_statement": "LOG_WARNING(\"AirbagControl: CRITERIA MET - Potential severe frontal impact. G-long: %.1f, Speed: %.1f km/h\",                     impact_data.longitudinal_g, vehicle_state.speed_kmh)"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"AirbagControl: CRITERIA MET - Potential severe side impact. G-lat: %.1f, Speed: %.1f km/h\",                     impact_data.lateral_g, vehicle_state.speed_kmh",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: CRITERIA MET - Potential severe side impact. G-lat: %.1f, Speed: %.1f km/h\",                     impact_data.lateral_g, vehicle_state.speed_kmh",
                    "line": 139,
                    "raw_log_statement": "LOG_WARNING(\"AirbagControl: CRITERIA MET - Potential severe side impact. G-lat: %.1f, Speed: %.1f km/h\",                     impact_data.lateral_g, vehicle_state.speed_kmh)"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"AirbagControl: CRITERIA MET - Potential rollover. RollRate: %.1f deg/s, G-vert: %.1f\",                     impact_data.roll_rate_deg_s, impact_data.vertical_g",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: CRITERIA MET - Potential rollover. RollRate: %.1f deg/s, G-vert: %.1f\",                     impact_data.roll_rate_deg_s, impact_data.vertical_g",
                    "line": 146,
                    "raw_log_statement": "LOG_WARNING(\"AirbagControl: CRITERIA MET - Potential rollover. RollRate: %.1f deg/s, G-vert: %.1f\",                     impact_data.roll_rate_deg_s, impact_data.vertical_g)"
                },
                {
                    "level": "FATAL",
                    "log_format_string": "\"AirbagControl: Event ID %d: CRASH EVENT DETECTED! Type: %s. Preparing for airbag deployment.\",                   crash_event_id_counter_, crash_type_desc.c_str()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: Event ID %d: CRASH EVENT DETECTED! Type: %s. Preparing for airbag deployment.\",                   crash_event_id_counter_, crash_type_desc.c_str()",
                    "line": 152,
                    "raw_log_statement": "LOG_FATAL(\"AirbagControl: Event ID %d: CRASH EVENT DETECTED! Type: %s. Preparing for airbag deployment.\",                   crash_event_id_counter_, crash_type_desc.c_str())"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "fabs(impact_data.lateral_g)",
                    "callee_name_at_call_site": "fabs",
                    "callee_resolved_key": "fabs",
                    "callee_resolved_display_name": "fabs",
                    "line": 136
                },
                {
                    "callee_expression": "fabs(impact_data.roll_rate_deg_s)",
                    "callee_name_at_call_site": "fabs",
                    "callee_resolved_key": "fabs",
                    "callee_resolved_display_name": "fabs",
                    "line": 143
                },
                {
                    "callee_expression": "fabs(impact_data.vertical_g)",
                    "callee_name_at_call_site": "fabs",
                    "callee_resolved_key": "fabs",
                    "callee_resolved_display_name": "fabs",
                    "line": 143
                }
            ]
        },
        {
            "function_id_key": "_ZN18ecu_safety_systems13AirbagControl10fireAirbagENS_8AirbagIDEi",
            "display_signature": "ecu_safety_systems::fireAirbag",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_safety_systems/airbag_control.cpp",
            "line": 162,
            "end_line": 189,
            "logs_in_order": [
                {
                    "level": "ERROR",
                    "log_format_string": "\"AirbagControl: Event ID %d: Invalid AirbagID %d specified for firing.\", event_id, airbag_idx",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: Event ID %d: Invalid AirbagID %d specified for firing.\", event_id, airbag_idx",
                    "line": 165,
                    "raw_log_statement": "LOG_ERROR(\"AirbagControl: Event ID %d: Invalid AirbagID %d specified for firing.\", event_id, airbag_idx)"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"AirbagControl: Event ID %d: CANNOT DEPLOY AIRBAG %s. Fault detected in its deployment circuit (Code: %d).\",                    event_id, airbagIdToString(airbag_to_fire).c_str(), fault_code_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: Event ID %d: CANNOT DEPLOY AIRBAG %s. Fault detected in its deployment circuit (Code: %d).\",                    event_id, airbagIdToString(airbag_to_fire).c_str(), fault_code_",
                    "line": 170,
                    "raw_log_statement": "LOG_ERROR(\"AirbagControl: Event ID %d: CANNOT DEPLOY AIRBAG %s. Fault detected in its deployment circuit (Code: %d).\",                    event_id, airbagIdToString(airbag_to_fire).c_str(), fault_code_)"
                },
                {
                    "level": "FATAL",
                    "log_format_string": "\"AirbagControl: Event ID %d: FIRING AIRBAG %s!\",                   event_id, airbagIdToString(airbag_to_fire).c_str()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: Event ID %d: FIRING AIRBAG %s!\",                   event_id, airbagIdToString(airbag_to_fire).c_str()",
                    "line": 181,
                    "raw_log_statement": "LOG_FATAL(\"AirbagControl: Event ID %d: FIRING AIRBAG %s!\",                   event_id, airbagIdToString(airbag_to_fire).c_str())"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"AirbagControl: Event ID %d: Airbag %s already deployed or commanded.\",                     event_id, airbagIdToString(airbag_to_fire).c_str()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: Event ID %d: Airbag %s already deployed or commanded.\",                     event_id, airbagIdToString(airbag_to_fire).c_str()",
                    "line": 186,
                    "raw_log_statement": "LOG_WARNING(\"AirbagControl: Event ID %d: Airbag %s already deployed or commanded.\",                     event_id, airbagIdToString(airbag_to_fire).c_str())"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "airbagIdToString",
                    "callee_resolved_key": "_ZN18ecu_safety_systems16airbagIdToStringB5cxx11ENS_8AirbagIDE",
                    "callee_resolved_display_name": "ecu_safety_systems::airbagIdToString",
                    "line": 170
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "airbagIdToString",
                    "callee_resolved_key": "_ZN18ecu_safety_systems16airbagIdToStringB5cxx11ENS_8AirbagIDE",
                    "callee_resolved_display_name": "ecu_safety_systems::airbagIdToString",
                    "line": 181
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "airbagIdToString",
                    "callee_resolved_key": "_ZN18ecu_safety_systems16airbagIdToStringB5cxx11ENS_8AirbagIDE",
                    "callee_resolved_display_name": "ecu_safety_systems::airbagIdToString",
                    "line": 186
                }
            ]
        },
        {
            "function_id_key": "_ZN18ecu_safety_systems13AirbagControl25triggerDeploymentSequenceERKNS_16CrashSensorInputE",
            "display_signature": "ecu_safety_systems::triggerDeploymentSequence",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_safety_systems/airbag_control.cpp",
            "line": 191,
            "end_line": 238,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"AirbagControl: Event ID %d: Initiating airbag deployment sequence based on impact data.\", crash_event_id_counter_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: Event ID %d: Initiating airbag deployment sequence based on impact data.\", crash_event_id_counter_",
                    "line": 192,
                    "raw_log_statement": "LOG_INFO(\"AirbagControl: Event ID %d: Initiating airbag deployment sequence based on impact data.\", crash_event_id_counter_)"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"AirbagControl: Event ID %d: Passenger front airbag NOT deployed (passenger unbelted - simplified rule).\", crash_event_id_counter_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: Event ID %d: Passenger front airbag NOT deployed (passenger unbelted - simplified rule).\", crash_event_id_counter_",
                    "line": 204,
                    "raw_log_statement": "LOG_WARNING(\"AirbagControl: Event ID %d: Passenger front airbag NOT deployed (passenger unbelted - simplified rule).\", crash_event_id_counter_)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"AirbagControl: Event ID %d: Passenger front airbag NOT deployed (passenger seat unoccupied).\", crash_event_id_counter_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: Event ID %d: Passenger front airbag NOT deployed (passenger seat unoccupied).\", crash_event_id_counter_",
                    "line": 206,
                    "raw_log_statement": "LOG_INFO(\"AirbagControl: Event ID %d: Passenger front airbag NOT deployed (passenger seat unoccupied).\", crash_event_id_counter_)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"AirbagControl: Event ID %d: Rollover detected, deploying curtain airbags.\", crash_event_id_counter_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: Event ID %d: Rollover detected, deploying curtain airbags.\", crash_event_id_counter_",
                    "line": 230,
                    "raw_log_statement": "LOG_INFO(\"AirbagControl: Event ID %d: Rollover detected, deploying curtain airbags.\", crash_event_id_counter_)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"AirbagControl: Event ID %d: Airbag deployment sequence commands issued.\", crash_event_id_counter_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: Event ID %d: Airbag deployment sequence commands issued.\", crash_event_id_counter_",
                    "line": 236,
                    "raw_log_statement": "LOG_INFO(\"AirbagControl: Event ID %d: Airbag deployment sequence commands issued.\", crash_event_id_counter_)"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "fireAirbag(AirbagID::DRIVER_FRONT, crash_event_id_counter_)",
                    "callee_name_at_call_site": "fireAirbag",
                    "callee_resolved_key": "_ZN18ecu_safety_systems13AirbagControl10fireAirbagENS_8AirbagIDEi",
                    "callee_resolved_display_name": "ecu_safety_systems::fireAirbag",
                    "line": 200
                },
                {
                    "callee_expression": "fireAirbag(AirbagID::PASSENGER_FRONT, crash_event_id_counter_)",
                    "callee_name_at_call_site": "fireAirbag",
                    "callee_resolved_key": "_ZN18ecu_safety_systems13AirbagControl10fireAirbagENS_8AirbagIDEi",
                    "callee_resolved_display_name": "ecu_safety_systems::fireAirbag",
                    "line": 202
                },
                {
                    "callee_expression": "fireAirbag(AirbagID::DRIVER_KNEE, crash_event_id_counter_)",
                    "callee_name_at_call_site": "fireAirbag",
                    "callee_resolved_key": "_ZN18ecu_safety_systems13AirbagControl10fireAirbagENS_8AirbagIDEi",
                    "callee_resolved_display_name": "ecu_safety_systems::fireAirbag",
                    "line": 210
                },
                {
                    "callee_expression": "fireAirbag(AirbagID::PASSENGER_KNEE, crash_event_id_counter_)",
                    "callee_name_at_call_site": "fireAirbag",
                    "callee_resolved_key": "_ZN18ecu_safety_systems13AirbagControl10fireAirbagENS_8AirbagIDEi",
                    "callee_resolved_display_name": "ecu_safety_systems::fireAirbag",
                    "line": 212
                },
                {
                    "callee_expression": "fabs(impact_data.lateral_g)",
                    "callee_name_at_call_site": "fabs",
                    "callee_resolved_key": "fabs",
                    "callee_resolved_display_name": "fabs",
                    "line": 218
                },
                {
                    "callee_expression": "fireAirbag(AirbagID::DRIVER_SIDE_THORAX, crash_event_id_counter_)",
                    "callee_name_at_call_site": "fireAirbag",
                    "callee_resolved_key": "_ZN18ecu_safety_systems13AirbagControl10fireAirbagENS_8AirbagIDEi",
                    "callee_resolved_display_name": "ecu_safety_systems::fireAirbag",
                    "line": 220
                },
                {
                    "callee_expression": "fireAirbag(AirbagID::DRIVER_SIDE_CURTAIN, crash_event_id_counter_)",
                    "callee_name_at_call_site": "fireAirbag",
                    "callee_resolved_key": "_ZN18ecu_safety_systems13AirbagControl10fireAirbagENS_8AirbagIDEi",
                    "callee_resolved_display_name": "ecu_safety_systems::fireAirbag",
                    "line": 221
                },
                {
                    "callee_expression": "fireAirbag(AirbagID::PASSENGER_SIDE_THORAX, crash_event_id_counter_)",
                    "callee_name_at_call_site": "fireAirbag",
                    "callee_resolved_key": "_ZN18ecu_safety_systems13AirbagControl10fireAirbagENS_8AirbagIDEi",
                    "callee_resolved_display_name": "ecu_safety_systems::fireAirbag",
                    "line": 223
                },
                {
                    "callee_expression": "fireAirbag(AirbagID::PASSENGER_SIDE_CURTAIN, crash_event_id_counter_)",
                    "callee_name_at_call_site": "fireAirbag",
                    "callee_resolved_key": "_ZN18ecu_safety_systems13AirbagControl10fireAirbagENS_8AirbagIDEi",
                    "callee_resolved_display_name": "ecu_safety_systems::fireAirbag",
                    "line": 224
                },
                {
                    "callee_expression": "fabs(impact_data.roll_rate_deg_s)",
                    "callee_name_at_call_site": "fabs",
                    "callee_resolved_key": "fabs",
                    "callee_resolved_display_name": "fabs",
                    "line": 229
                },
                {
                    "callee_expression": "fireAirbag(AirbagID::DRIVER_SIDE_CURTAIN, crash_event_id_counter_)",
                    "callee_name_at_call_site": "fireAirbag",
                    "callee_resolved_key": "_ZN18ecu_safety_systems13AirbagControl10fireAirbagENS_8AirbagIDEi",
                    "callee_resolved_display_name": "ecu_safety_systems::fireAirbag",
                    "line": 231
                },
                {
                    "callee_expression": "fireAirbag(AirbagID::PASSENGER_SIDE_CURTAIN, crash_event_id_counter_)",
                    "callee_name_at_call_site": "fireAirbag",
                    "callee_resolved_key": "_ZN18ecu_safety_systems13AirbagControl10fireAirbagENS_8AirbagIDEi",
                    "callee_resolved_display_name": "ecu_safety_systems::fireAirbag",
                    "line": 232
                },
                {
                    "callee_expression": "enterPostCrashSafeMode(crash_event_id_counter_)",
                    "callee_name_at_call_site": "enterPostCrashSafeMode",
                    "callee_resolved_key": "_ZN18ecu_safety_systems13AirbagControl22enterPostCrashSafeModeEi",
                    "callee_resolved_display_name": "ecu_safety_systems::AirbagControl::enterPostCrashSafeMode",
                    "line": 237
                }
            ]
        },
        {
            "function_id_key": "_ZN18ecu_safety_systems13AirbagControl22enterPostCrashSafeModeEi",
            "display_signature": "ecu_safety_systems::enterPostCrashSafeMode",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_safety_systems/airbag_control.cpp",
            "line": 240,
            "end_line": 263,
            "logs_in_order": [
                {
                    "level": "WARNING",
                    "log_format_string": "\"AirbagControl: Event ID %d: Entering POST-CRASH SAFE MODE.\", event_id",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: Event ID %d: Entering POST-CRASH SAFE MODE.\", event_id",
                    "line": 241,
                    "raw_log_statement": "LOG_WARNING(\"AirbagControl: Event ID %d: Entering POST-CRASH SAFE MODE.\", event_id)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"AirbagControl: Event ID %d: Simulating post-crash actions: Doors unlocked, Hazards ON, Fuel pump OFF, eCall initiated.\", event_id",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: Event ID %d: Simulating post-crash actions: Doors unlocked, Hazards ON, Fuel pump OFF, eCall initiated.\", event_id",
                    "line": 249,
                    "raw_log_statement": "LOG_INFO(\"AirbagControl: Event ID %d: Simulating post-crash actions: Doors unlocked, Hazards ON, Fuel pump OFF, eCall initiated.\", event_id)"
                },
                {
                    "level": "FATAL",
                    "log_format_string": "\"AirbagControl: %s\", deployed_summary.c_str()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: %s\", deployed_summary.c_str()",
                    "line": 262,
                    "raw_log_statement": "LOG_FATAL(\"AirbagControl: %s\", deployed_summary.c_str())"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "airbagIdToString(deployed_airbags_list_[i])",
                    "callee_name_at_call_site": "airbagIdToString",
                    "callee_resolved_key": "_ZN18ecu_safety_systems16airbagIdToStringB5cxx11ENS_8AirbagIDE",
                    "callee_resolved_display_name": "ecu_safety_systems::airbagIdToString",
                    "line": 258
                }
            ]
        },
        {
            "function_id_key": "_ZN18ecu_safety_systems13AirbagControl17processImpactDataERKNS_16CrashSensorInputERK12VehicleState",
            "display_signature": "ecu_safety_systems::processImpactData",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_safety_systems/airbag_control.cpp",
            "line": 266,
            "end_line": 304,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"AirbagControl: Processing impact data. G-long: %.2f, G-lat: %.2f, G-vert: %.2f, Roll: %.2f, Speed: %.1f\",               impact_data.longitudinal_g, impact_data.lateral_g, impact_data.vertical_g,               impact_data.roll_rate_deg_s, vehicle_state.speed_kmh",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: Processing impact data. G-long: %.2f, G-lat: %.2f, G-vert: %.2f, Roll: %.2f, Speed: %.1f\",               impact_data.longitudinal_g, impact_data.lateral_g, impact_data.vertical_g,               impact_data.roll_rate_deg_s, vehicle_state.speed_kmh",
                    "line": 267,
                    "raw_log_statement": "LOG_DEBUG(\"AirbagControl: Processing impact data. G-long: %.2f, G-lat: %.2f, G-vert: %.2f, Roll: %.2f, Speed: %.1f\",               impact_data.longitudinal_g, impact_data.lateral_g, impact_data.vertical_g,               impact_data.roll_rate_deg_s, vehicle_state.speed_kmh)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"AirbagControl: System is OFF or Inoperative. Impact data processing skipped.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: System is OFF or Inoperative. Impact data processing skipped.\"",
                    "line": 278,
                    "raw_log_statement": "LOG_INFO(\"AirbagControl: System is OFF or Inoperative. Impact data processing skipped.\")"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"AirbagControl: Currently in crash/deployment state (%s). Monitoring for stability or secondary events (not fully simulated).\",                  airbagSysStateToString(system_state_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: Currently in crash/deployment state (%s). Monitoring for stability or secondary events (not fully simulated).\",                  airbagSysStateToString(system_state_)",
                    "line": 297,
                    "raw_log_statement": "LOG_INFO(\"AirbagControl: Currently in crash/deployment state (%s). Monitoring for stability or secondary events (not fully simulated).\",                  airbagSysStateToString(system_state_))"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"AirbagControl: System in POST_CRASH_SAFE mode. No further impact processing for this event.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: System in POST_CRASH_SAFE mode. No further impact processing for this event.\"",
                    "line": 300,
                    "raw_log_statement": "LOG_INFO(\"AirbagControl: System in POST_CRASH_SAFE mode. No further impact processing for this event.\")"
                },
                {
                    "level": "DEBUG",
                    "log_format_string": "\"AirbagControl: Impact data processing cycle complete. System state: %s\", airbagSysStateToString(system_state_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: Impact data processing cycle complete. System state: %s\", airbagSysStateToString(system_state_)",
                    "line": 303,
                    "raw_log_statement": "LOG_DEBUG(\"AirbagControl: Impact data processing cycle complete. System state: %s\", airbagSysStateToString(system_state_))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "detectSystemFaults(impact_data)",
                    "callee_name_at_call_site": "detectSystemFaults",
                    "callee_resolved_key": "_ZN18ecu_safety_systems13AirbagControl18detectSystemFaultsERKNS_16CrashSensorInputE",
                    "callee_resolved_display_name": "ecu_safety_systems::detectSystemFaults",
                    "line": 272
                },
                {
                    "callee_expression": "evaluateCrashSeverity(impact_data, vehicle_state)",
                    "callee_name_at_call_site": "evaluateCrashSeverity",
                    "callee_resolved_key": "_ZN18ecu_safety_systems13AirbagControl21evaluateCrashSeverityERKNS_16CrashSensorInputERK12VehicleState",
                    "callee_resolved_display_name": "ecu_safety_systems::evaluateCrashSeverity",
                    "line": 291
                },
                {
                    "callee_expression": "triggerDeploymentSequence(impact_data)",
                    "callee_name_at_call_site": "triggerDeploymentSequence",
                    "callee_resolved_key": "_ZN18ecu_safety_systems13AirbagControl25triggerDeploymentSequenceERKNS_16CrashSensorInputE",
                    "callee_resolved_display_name": "ecu_safety_systems::triggerDeploymentSequence",
                    "line": 292
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "airbagSysStateToString",
                    "callee_resolved_key": "_ZN18ecu_safety_systems22airbagSysStateToStringENS_17AirbagSystemStateE",
                    "callee_resolved_display_name": "ecu_safety_systems::airbagSysStateToString",
                    "line": 297
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "airbagSysStateToString",
                    "callee_resolved_key": "_ZN18ecu_safety_systems22airbagSysStateToStringENS_17AirbagSystemStateE",
                    "callee_resolved_display_name": "ecu_safety_systems::airbagSysStateToString",
                    "line": 303
                }
            ]
        },
        {
            "function_id_key": "_ZNK18ecu_safety_systems13AirbagControl14getSystemStateEv",
            "display_signature": "ecu_safety_systems::getSystemState",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_safety_systems/airbag_control.cpp",
            "line": 306,
            "end_line": 309,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"AirbagControl: getSystemState() -> %s\", airbagSysStateToString(system_state_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: getSystemState() -> %s\", airbagSysStateToString(system_state_)",
                    "line": 307,
                    "raw_log_statement": "LOG_DEBUG(\"AirbagControl: getSystemState() -> %s\", airbagSysStateToString(system_state_))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "airbagSysStateToString",
                    "callee_resolved_key": "_ZN18ecu_safety_systems22airbagSysStateToStringENS_17AirbagSystemStateE",
                    "callee_resolved_display_name": "ecu_safety_systems::airbagSysStateToString",
                    "line": 307
                }
            ]
        },
        {
            "function_id_key": "_ZNK18ecu_safety_systems13AirbagControl18getDeployedAirbagsEv",
            "display_signature": "ecu_safety_systems::getDeployedAirbags",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_safety_systems/airbag_control.cpp",
            "line": 311,
            "end_line": 314,
            "logs_in_order": [
                {
                    "level": "DEBUG",
                    "log_format_string": "\"AirbagControl: getDeployedAirbags() called. Count: %zu\", deployed_airbags_list_.size()",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: getDeployedAirbags() called. Count: %zu\", deployed_airbags_list_.size()",
                    "line": 312,
                    "raw_log_statement": "LOG_DEBUG(\"AirbagControl: getDeployedAirbags() called. Count: %zu\", deployed_airbags_list_.size())"
                }
            ],
            "calls_in_order": []
        },
        {
            "function_id_key": "_ZN18ecu_safety_systems13AirbagControl14runSystemCheckEv",
            "display_signature": "ecu_safety_systems::runSystemCheck",
            "file": "/workspaces/MyPFE/AutoSystemSim/ecu_safety_systems/airbag_control.cpp",
            "line": 316,
            "end_line": 352,
            "logs_in_order": [
                {
                    "level": "INFO",
                    "log_format_string": "\"AirbagControl: Performing ACU ad-hoc system check...\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: Performing ACU ad-hoc system check...\"",
                    "line": 317,
                    "raw_log_statement": "LOG_INFO(\"AirbagControl: Performing ACU ad-hoc system check...\")"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"AirbagControl: AD-HOC CHECK FAULT: Main G-Sensor unresponsive. Code: %d\", fault_code_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: AD-HOC CHECK FAULT: Main G-Sensor unresponsive. Code: %d\", fault_code_",
                    "line": 329,
                    "raw_log_statement": "LOG_ERROR(\"AirbagControl: AD-HOC CHECK FAULT: Main G-Sensor unresponsive. Code: %d\", fault_code_)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"AirbagControl: AD-HOC CHECK: G-Sensors OK.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: AD-HOC CHECK: G-Sensors OK.\"",
                    "line": 331,
                    "raw_log_statement": "LOG_INFO(\"AirbagControl: AD-HOC CHECK: G-Sensors OK.\")"
                },
                {
                    "level": "ERROR",
                    "log_format_string": "\"AirbagControl: AD-HOC CHECK FAULT: Open circuit detected for airbag %s. Code: %d\",                   airbagIdToString(faulty_airbag).c_str(), fault_code_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: AD-HOC CHECK FAULT: Open circuit detected for airbag %s. Code: %d\",                   airbagIdToString(faulty_airbag).c_str(), fault_code_",
                    "line": 339,
                    "raw_log_statement": "LOG_ERROR(\"AirbagControl: AD-HOC CHECK FAULT: Open circuit detected for airbag %s. Code: %d\",                   airbagIdToString(faulty_airbag).c_str(), fault_code_)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"AirbagControl: AD-HOC CHECK: Squib circuits OK.\"",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: AD-HOC CHECK: Squib circuits OK.\"",
                    "line": 342,
                    "raw_log_statement": "LOG_INFO(\"AirbagControl: AD-HOC CHECK: Squib circuits OK.\")"
                },
                {
                    "level": "WARNING",
                    "log_format_string": "\"AirbagControl: Ad-hoc system check complete. NEW FAULT(s) DETECTED. System state: %s, Code: %d\",                     airbagSysStateToString(system_state_), fault_code_",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: Ad-hoc system check complete. NEW FAULT(s) DETECTED. System state: %s, Code: %d\",                     airbagSysStateToString(system_state_), fault_code_",
                    "line": 346,
                    "raw_log_statement": "LOG_WARNING(\"AirbagControl: Ad-hoc system check complete. NEW FAULT(s) DETECTED. System state: %s, Code: %d\",                     airbagSysStateToString(system_state_), fault_code_)"
                },
                {
                    "level": "INFO",
                    "log_format_string": "\"AirbagControl: Ad-hoc system check complete. No new faults. System state: %s\", airbagSysStateToString(system_state_)",
                    "log_arguments": [],
                    "message_args_str_combined": "\"AirbagControl: Ad-hoc system check complete. No new faults. System state: %s\", airbagSysStateToString(system_state_)",
                    "line": 350,
                    "raw_log_statement": "LOG_INFO(\"AirbagControl: Ad-hoc system check complete. No new faults. System state: %s\", airbagSysStateToString(system_state_))"
                }
            ],
            "calls_in_order": [
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "airbagIdToString",
                    "callee_resolved_key": "_ZN18ecu_safety_systems16airbagIdToStringB5cxx11ENS_8AirbagIDE",
                    "callee_resolved_display_name": "ecu_safety_systems::airbagIdToString",
                    "line": 339
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "airbagSysStateToString",
                    "callee_resolved_key": "_ZN18ecu_safety_systems22airbagSysStateToStringENS_17AirbagSystemStateE",
                    "callee_resolved_display_name": "ecu_safety_systems::airbagSysStateToString",
                    "line": 346
                },
                {
                    "callee_expression": "",
                    "callee_name_at_call_site": "airbagSysStateToString",
                    "callee_resolved_key": "_ZN18ecu_safety_systems22airbagSysStateToStringENS_17AirbagSystemStateE",
                    "callee_resolved_display_name": "ecu_safety_systems::airbagSysStateToString",
                    "line": 350
                }
            ]
        }
    ],
    "clang_diagnostics": {
        "/workspaces/MyPFE/AutoSystemSim/ecu_powertrain_control/transmission_manager.cpp": [
            {
                "severity": "WARNING",
                "line": 223,
                "column": 13,
                "message": "data argument not used by format string"
            }
        ],
        "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/navigation_system.cpp": [
            {
                "severity": "WARNING",
                "line": 224,
                "column": 5,
                "message": "format specifies type 'long long' but the argument has type 'std::chrono::duration<long, std::ratio<1, 1> >::rep' (aka 'long')"
            },
            {
                "severity": "WARNING",
                "line": 238,
                "column": 5,
                "message": "format specifies type 'long long' but the argument has type 'std::chrono::duration<long, std::ratio<1, 1> >::rep' (aka 'long')"
            },
            {
                "severity": "WARNING",
                "line": 441,
                "column": 9,
                "message": "format specifies type 'long long' but the argument has type 'std::chrono::duration<long, std::ratio<1, 1> >::rep' (aka 'long')"
            }
        ],
        "/workspaces/MyPFE/AutoSystemSim/ecu_infotainment/media_player.cpp": [
            {
                "severity": "WARNING",
                "line": 146,
                "column": 5,
                "message": "format specifies type 'long long' but the argument has type 'std::chrono::duration<long, std::ratio<1, 1> >::rep' (aka 'long')"
            },
            {
                "severity": "WARNING",
                "line": 209,
                "column": 9,
                "message": "format specifies type 'long long' but the argument has type 'std::chrono::duration<long, std::ratio<1, 1> >::rep' (aka 'long')"
            },
            {
                "severity": "WARNING",
                "line": 281,
                "column": 5,
                "message": "format specifies type 'long long' but the argument has type 'std::chrono::duration<long, std::ratio<1, 1> >::rep' (aka 'long')"
            },
            {
                "severity": "WARNING",
                "line": 297,
                "column": 9,
                "message": "format specifies type 'long long' but the argument has type 'std::chrono::duration<long, std::ratio<1, 1> >::rep' (aka 'long')"
            },
            {
                "severity": "WARNING",
                "line": 297,
                "column": 9,
                "message": "format specifies type 'long long' but the argument has type 'std::chrono::duration<long, std::ratio<1, 1> >::rep' (aka 'long')"
            },
            {
                "severity": "WARNING",
                "line": 306,
                "column": 5,
                "message": "format specifies type 'long long' but the argument has type 'std::chrono::duration<long, std::ratio<1, 1> >::rep' (aka 'long')"
            },
            {
                "severity": "WARNING",
                "line": 374,
                "column": 9,
                "message": "format specifies type 'long long' but the argument has type 'std::chrono::duration<long, std::ratio<1, 1> >::rep' (aka 'long')"
            },
            {
                "severity": "WARNING",
                "line": 377,
                "column": 9,
                "message": "format specifies type 'long long' but the argument has type 'std::chrono::duration<long, std::ratio<1, 1> >::rep' (aka 'long')"
            },
            {
                "severity": "WARNING",
                "line": 455,
                "column": 13,
                "message": "format specifies type 'long long' but the argument has type 'std::chrono::duration<long, std::ratio<1, 1> >::rep' (aka 'long')"
            },
            {
                "severity": "WARNING",
                "line": 455,
                "column": 13,
                "message": "format specifies type 'long long' but the argument has type 'std::chrono::duration<long, std::ratio<1, 1> >::rep' (aka 'long')"
            }
        ]
    }
}