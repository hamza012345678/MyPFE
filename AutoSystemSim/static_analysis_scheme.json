[
    {
        "signature": "ecu_powertrain_control_transmission_manager_h::TransmissionManager",
        "raw_name": "TransmissionManager",
        "file": "./ecu_powertrain_control/transmission_manager.h",
        "line": 34,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_h::~TransmissionManager",
        "raw_name": "~TransmissionManager",
        "file": "./ecu_powertrain_control/transmission_manager.h",
        "line": 35,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_h::setTransmissionMode",
        "raw_name": "setTransmissionMode",
        "file": "./ecu_powertrain_control/transmission_manager.h",
        "line": 38,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_h::shiftUp",
        "raw_name": "shiftUp",
        "file": "./ecu_powertrain_control/transmission_manager.h",
        "line": 39,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_h::shiftDown",
        "raw_name": "shiftDown",
        "file": "./ecu_powertrain_control/transmission_manager.h",
        "line": 40,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_h::requestNeutral",
        "raw_name": "requestNeutral",
        "file": "./ecu_powertrain_control/transmission_manager.h",
        "line": 41,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_h::getCurrentMode",
        "raw_name": "getCurrentMode",
        "file": "./ecu_powertrain_control/transmission_manager.h",
        "line": 44,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_h::getCurrentGear",
        "raw_name": "getCurrentGear",
        "file": "./ecu_powertrain_control/transmission_manager.h",
        "line": 45,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_h::updateState",
        "raw_name": "updateState",
        "file": "./ecu_powertrain_control/transmission_manager.h",
        "line": 46,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_h::isShiftInProgress",
        "raw_name": "isShiftInProgress",
        "file": "./ecu_powertrain_control/transmission_manager.h",
        "line": 47,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_h::canShiftToMode",
        "raw_name": "canShiftToMode",
        "file": "./ecu_powertrain_control/transmission_manager.h",
        "line": 61,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_h::canShiftGear",
        "raw_name": "canShiftGear",
        "file": "./ecu_powertrain_control/transmission_manager.h",
        "line": 62,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_h::performGearShift",
        "raw_name": "performGearShift",
        "file": "./ecu_powertrain_control/transmission_manager.h",
        "line": 63,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_h::manageAutomaticShifting",
        "raw_name": "manageAutomaticShifting",
        "file": "./ecu_powertrain_control/transmission_manager.h",
        "line": 64,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_h::checkTransmissionHealth",
        "raw_name": "checkTransmissionHealth",
        "file": "./ecu_powertrain_control/transmission_manager.h",
        "line": 65,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_h::updateTransmissionTemperature",
        "raw_name": "updateTransmissionTemperature",
        "file": "./ecu_powertrain_control/transmission_manager.h",
        "line": 66,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_cpp::LOG_INFO",
        "raw_name": "LOG_INFO",
        "file": "./ecu_powertrain_control/engine_manager.cpp",
        "line": 26,
        "end_line": 191,
        "logs_in_order": [
            {
                "level": "INFO",
                "message_args_str": "\"EngineManager: Initializing. Engine status: STOPPED.\"",
                "line": 27,
                "raw_log_statement": "LOG_INFO(\"EngineManager: Initializing. Engine status: STOPPED.\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"EngineManager: PowerMonitor service acquired.\"",
                "line": 32,
                "raw_log_statement": "LOG_DEBUG(\"EngineManager: PowerMonitor service acquired.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"EngineManager: Shutting down. Current RPM: %d\", current_rpm_",
                "line": 36,
                "raw_log_statement": "LOG_INFO(\"EngineManager: Shutting down. Current RPM: %d\", current_rpm_);"
            },
            {
                "level": "INFO",
                "message_args_str": "\"EngineManager: Checking system power status via PowerMonitor service.\"",
                "line": 46,
                "raw_log_statement": "LOG_INFO(\"EngineManager: Checking system power status via PowerMonitor service.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"EngineManager: System power is stable.\"",
                "line": 54,
                "raw_log_statement": "LOG_INFO(\"EngineManager: System power is stable.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"EngineManager: Starting ignition sequence.\"",
                "line": 63,
                "raw_log_statement": "LOG_INFO(\"EngineManager: Starting ignition sequence.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"EngineManager: Engine crank detected. RPM: %d\", current_rpm_",
                "line": 79,
                "raw_log_statement": "LOG_INFO(\"EngineManager: Engine crank detected. RPM: %d\", current_rpm_);"
            },
            {
                "level": "INFO",
                "message_args_str": "\"EngineManager: Initial fuel injected. Engine should start.\"",
                "line": 81,
                "raw_log_statement": "LOG_INFO(\"EngineManager: Initial fuel injected. Engine should start.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"EngineManager: Received start engine request.\"",
                "line": 107,
                "raw_log_statement": "LOG_INFO(\"EngineManager: Received start engine request.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"EngineManager: Received stop engine request.\"",
                "line": 157,
                "raw_log_statement": "LOG_INFO(\"EngineManager: Received stop engine request.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"EngineManager: Cutting fuel supply (simulated).\"",
                "line": 179,
                "raw_log_statement": "LOG_INFO(\"EngineManager: Cutting fuel supply (simulated).\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"EngineManager: Setting target RPM to %d.\", rpm",
                "line": 191,
                "raw_log_statement": "LOG_INFO(\"EngineManager: Setting target RPM to %d.\", rpm);"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"EngineManager: Initializing. Engine status: STOPPED.\"",
                "line": 27
            },
            {
                "callee_expression": "ecu_power_management::PowerMonitor",
                "callee_args_str": "",
                "line": 31
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"EngineManager: PowerMonitor service acquired.\"",
                "line": 32
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"EngineManager: Shutting down. Current RPM: %d\", current_rpm_",
                "line": 36
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"EngineManager: Checking system power status via PowerMonitor service.\"",
                "line": 46
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"EngineManager: System power is stable.\"",
                "line": 54
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"EngineManager: Starting ignition sequence.\"",
                "line": 63
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"EngineManager: Engine crank detected. RPM: %d\", current_rpm_",
                "line": 79
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"EngineManager: Initial fuel injected. Engine should start.\"",
                "line": 81
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"EngineManager: Received start engine request.\"",
                "line": 107
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"EngineManager: Received stop engine request.\"",
                "line": 157
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"EngineManager: Cutting fuel supply (simulated).\"",
                "line": 179
            },
            {
                "callee_expression": "fuel_system_.cutFuelSupply",
                "callee_args_str": "",
                "line": 180
            },
            {
                "callee_expression": "cutFuelSupply",
                "callee_args_str": "",
                "line": 180
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"EngineManager: Setting target RPM to %d.\", rpm",
                "line": 191
            }
        ]
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_cpp::ecu_power_management::PowerMonitor",
        "raw_name": "ecu_power_management::PowerMonitor",
        "file": "./ecu_powertrain_control/engine_manager.cpp",
        "line": 31,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_cpp::LOG_DEBUG",
        "raw_name": "LOG_DEBUG",
        "file": "./ecu_powertrain_control/engine_manager.cpp",
        "line": 31,
        "end_line": 244,
        "logs_in_order": [
            {
                "level": "DEBUG",
                "message_args_str": "\"EngineManager: Ignition attempt %d...\", i + 1",
                "line": 74,
                "raw_log_statement": "LOG_DEBUG(\"EngineManager: Ignition attempt %d...\", i + 1);"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"EngineManager: Checking oil pressure.\"",
                "line": 95,
                "raw_log_statement": "LOG_DEBUG(\"EngineManager: Checking oil pressure.\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"EngineManager: Current RPM requested: %d\", current_rpm_",
                "line": 220,
                "raw_log_statement": "LOG_DEBUG(\"EngineManager: Current RPM requested: %d\", current_rpm_);"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"EngineManager: Engine temperature requested: %.1f C\", engine_temperature_celsius_",
                "line": 225,
                "raw_log_statement": "LOG_DEBUG(\"EngineManager: Engine temperature requested: %.1f C\", engine_temperature_celsius_);"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"EngineManager: Engine state requested.\"",
                "line": 230,
                "raw_log_statement": "LOG_DEBUG(\"EngineManager: Engine state requested.\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"EngineManager: Updating engine parameters based on current RPM and load (simulated).\"",
                "line": 239,
                "raw_log_statement": "LOG_DEBUG(\"EngineManager: Updating engine parameters based on current RPM and load (simulated).\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"EngineManager: Ignition attempt %d...\", i + 1",
                "line": 74
            },
            {
                "callee_expression": "std::this_thread::sleep_for",
                "callee_args_str": "std::chrono::milliseconds(150)",
                "line": 77
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"EngineManager: Checking oil pressure.\"",
                "line": 95
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"EngineManager: Current RPM requested: %d\", current_rpm_",
                "line": 220
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"EngineManager: Engine temperature requested: %.1f C\", engine_temperature_celsius_",
                "line": 225
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"EngineManager: Engine state requested.\"",
                "line": 230
            },
            {
                "callee_expression": "std::to_string",
                "callee_args_str": "static_cast<int>(current_status_)",
                "line": 233
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"EngineManager: Updating engine parameters based on current RPM and load (simulated).\"",
                "line": 239
            }
        ]
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_cpp::EngineManager::~EngineManager",
        "raw_name": "EngineManager::~EngineManager",
        "file": "./ecu_powertrain_control/engine_manager.cpp",
        "line": 33,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_cpp::if",
        "raw_name": "if",
        "file": "./ecu_powertrain_control/engine_manager.cpp",
        "line": 36,
        "end_line": 262,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "std::max",
                "callee_args_str": "target_rpm_, current_rpm_ - 500",
                "line": 209
            }
        ]
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_cpp::LOG_WARNING",
        "raw_name": "LOG_WARNING",
        "file": "./ecu_powertrain_control/engine_manager.cpp",
        "line": 37,
        "end_line": 266,
        "logs_in_order": [
            {
                "level": "WARNING",
                "message_args_str": "\"EngineManager: Engine was still running during shutdown. Forcing stop.\"",
                "line": 38,
                "raw_log_statement": "LOG_WARNING(\"EngineManager: Engine was still running during shutdown. Forcing stop.\");"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"EngineManager: System power is UNSTABLE. This might affect engine operations.\"",
                "line": 56,
                "raw_log_statement": "LOG_WARNING(\"EngineManager: System power is UNSTABLE. This might affect engine operations.\");"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"EngineManager: Initial fuel injection failed during ignition. Attempt %d\", i+1",
                "line": 84,
                "raw_log_statement": "LOG_WARNING(\"EngineManager: Initial fuel injection failed during ignition. Attempt %d\", i+1);"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"EngineManager: Low oil pressure detected!\"",
                "line": 99,
                "raw_log_statement": "LOG_WARNING(\"EngineManager: Low oil pressure detected!\");"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"EngineManager: Engine is already running. RPM: %d\", current_rpm_",
                "line": 109,
                "raw_log_statement": "LOG_WARNING(\"EngineManager: Engine is already running. RPM: %d\", current_rpm_);"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"EngineManager: Engine is already in starting sequence.\"",
                "line": 113,
                "raw_log_statement": "LOG_WARNING(\"EngineManager: Engine is already in starting sequence.\");"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"EngineManager: Engine is already stopped.\"",
                "line": 159,
                "raw_log_statement": "LOG_WARNING(\"EngineManager: Engine is already stopped.\");"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"EngineManager: Engine is already in stopping sequence.\"",
                "line": 163,
                "raw_log_statement": "LOG_WARNING(\"EngineManager: Engine is already in stopping sequence.\");"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"EngineManager: Cannot set target RPM. Engine not running. Status: %d\", static_cast<int>(current_status_)",
                "line": 193,
                "raw_log_statement": "LOG_WARNING(\"EngineManager: Cannot set target RPM. Engine not running. Status: %d\", static_cast<int>(current_status_));"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"EngineManager: Engine temperature high: %.1f C\", engine_temperature_celsius_",
                "line": 246,
                "raw_log_statement": "LOG_WARNING(\"EngineManager: Engine temperature high: %.1f C\", engine_temperature_celsius_);"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"EngineManager: Fuel injection failed for cylinder %d during update.\", cyl",
                "line": 264,
                "raw_log_statement": "LOG_WARNING(\"EngineManager: Fuel injection failed for cylinder %d during update.\", cyl);"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"EngineManager: Engine was still running during shutdown. Forcing stop.\"",
                "line": 38
            },
            {
                "callee_expression": "stopEngine",
                "callee_args_str": "",
                "line": 39
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"EngineManager: System power is UNSTABLE. This might affect engine operations.\"",
                "line": 56
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"EngineManager: Initial fuel injection failed during ignition. Attempt %d\", i+1",
                "line": 84
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"EngineManager: Low oil pressure detected!\"",
                "line": 99
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"EngineManager: Engine is already running. RPM: %d\", current_rpm_",
                "line": 109
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"EngineManager: Engine is already in starting sequence.\"",
                "line": 113
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"EngineManager: Engine is already stopped.\"",
                "line": 159
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"EngineManager: Engine is already in stopping sequence.\"",
                "line": 163
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"EngineManager: Cannot set target RPM. Engine not running. Status: %d\", static_cast<int>(current_status_)",
                "line": 193
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"EngineManager: Engine temperature high: %.1f C\", engine_temperature_celsius_",
                "line": 246
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"EngineManager: Fuel injection failed for cylinder %d during update.\", cyl",
                "line": 264
            }
        ]
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_cpp::stopEngine",
        "raw_name": "stopEngine",
        "file": "./ecu_powertrain_control/engine_manager.cpp",
        "line": 38,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_cpp::EngineManager::checkSystemPower",
        "raw_name": "EngineManager::checkSystemPower",
        "file": "./ecu_powertrain_control/engine_manager.cpp",
        "line": 43,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_cpp::LOG_ERROR",
        "raw_name": "LOG_ERROR",
        "file": "./ecu_powertrain_control/engine_manager.cpp",
        "line": 47,
        "end_line": 199,
        "logs_in_order": [
            {
                "level": "ERROR",
                "message_args_str": "\"EngineManager: PowerMonitor service not available!\"",
                "line": 48,
                "raw_log_statement": "LOG_ERROR(\"EngineManager: PowerMonitor service not available!\");"
            },
            {
                "level": "ERROR",
                "message_args_str": "\"EngineManager: Ignition aborted. Low fuel pressure.\"",
                "line": 67,
                "raw_log_statement": "LOG_ERROR(\"EngineManager: Ignition aborted. Low fuel pressure.\");"
            },
            {
                "level": "ERROR",
                "message_args_str": "\"EngineManager: Cannot start engine. Overheated! Temp: %.1f C\", engine_temperature_celsius_",
                "line": 119,
                "raw_log_statement": "LOG_ERROR(\"EngineManager: Cannot start engine. Overheated! Temp: %.1f C\", engine_temperature_celsius_);"
            },
            {
                "level": "ERROR",
                "message_args_str": "\"EngineManager: Cannot start engine due to system power issues.\"",
                "line": 127,
                "raw_log_statement": "LOG_ERROR(\"EngineManager: Cannot start engine due to system power issues.\");"
            },
            {
                "level": "ERROR",
                "message_args_str": "\"EngineManager: Engine started but low oil pressure detected! Risk of damage.\"",
                "line": 142,
                "raw_log_statement": "LOG_ERROR(\"EngineManager: Engine started but low oil pressure detected! Risk of damage.\");"
            },
            {
                "level": "ERROR",
                "message_args_str": "\"EngineManager: Failed to start engine.\"",
                "line": 150,
                "raw_log_statement": "LOG_ERROR(\"EngineManager: Failed to start engine.\");"
            },
            {
                "level": "ERROR",
                "message_args_str": "\"EngineManager: Invalid target RPM: %d. Must be between 0 and 7000.\", rpm",
                "line": 197,
                "raw_log_statement": "LOG_ERROR(\"EngineManager: Invalid target RPM: %d. Must be between 0 and 7000.\", rpm);"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"EngineManager: PowerMonitor service not available!\"",
                "line": 48
            },
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"EngineManager: Ignition aborted. Low fuel pressure.\"",
                "line": 67
            },
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"EngineManager: Cannot start engine. Overheated! Temp: %.1f C\", engine_temperature_celsius_",
                "line": 119
            },
            {
                "callee_expression": "reportCriticalFault",
                "callee_args_str": "\"Engine Overheat on Start Attempt\"",
                "line": 120
            },
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"EngineManager: Cannot start engine due to system power issues.\"",
                "line": 127
            },
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"EngineManager: Engine started but low oil pressure detected! Risk of damage.\"",
                "line": 142
            },
            {
                "callee_expression": "reportCriticalFault",
                "callee_args_str": "\"Low oil pressure after start\"",
                "line": 145
            },
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"EngineManager: Failed to start engine.\"",
                "line": 150
            },
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"EngineManager: Invalid target RPM: %d. Must be between 0 and 7000.\", rpm",
                "line": 197
            }
        ]
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_cpp::EngineManager::performIgnitionSequence",
        "raw_name": "EngineManager::performIgnitionSequence",
        "file": "./ecu_powertrain_control/engine_manager.cpp",
        "line": 59,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_cpp::for",
        "raw_name": "for",
        "file": "./ecu_powertrain_control/engine_manager.cpp",
        "line": 71,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_cpp::std::this_thread::sleep_for",
        "raw_name": "std::this_thread::sleep_for",
        "file": "./ecu_powertrain_control/engine_manager.cpp",
        "line": 76,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_cpp::EngineManager::checkOilPressure",
        "raw_name": "EngineManager::checkOilPressure",
        "file": "./ecu_powertrain_control/engine_manager.cpp",
        "line": 92,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_cpp::LOG_VERBOSE",
        "raw_name": "LOG_VERBOSE",
        "file": "./ecu_powertrain_control/engine_manager.cpp",
        "line": 100,
        "end_line": 101,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "LOG_VERBOSE",
                "callee_args_str": "\"EngineManager: Oil pressure nominal.\"",
                "line": 101
            }
        ]
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_cpp::EngineManager::startEngine",
        "raw_name": "EngineManager::startEngine",
        "file": "./ecu_powertrain_control/engine_manager.cpp",
        "line": 104,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_cpp::reportCriticalFault",
        "raw_name": "reportCriticalFault",
        "file": "./ecu_powertrain_control/engine_manager.cpp",
        "line": 119,
        "end_line": 255,
        "logs_in_order": [
            {
                "level": "FATAL",
                "message_args_str": "\"EngineManager: CRITICAL OVERHEAT! %.1f C. Shutting down immediately!\", engine_temperature_celsius_",
                "line": 249,
                "raw_log_statement": "LOG_FATAL(\"EngineManager: CRITICAL OVERHEAT! %.1f C. Shutting down immediately!\", engine_temperature_celsius_);"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "reportCriticalFault",
                "callee_args_str": "\"Engine Overheat Critical\"",
                "line": 248
            },
            {
                "callee_expression": "LOG_FATAL",
                "callee_args_str": "\"EngineManager: CRITICAL OVERHEAT! %.1f C. Shutting down immediately!\", engine_temperature_celsius_",
                "line": 249
            },
            {
                "callee_expression": "stopEngine",
                "callee_args_str": "",
                "line": 254
            }
        ]
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_cpp::EngineManager::stopEngine",
        "raw_name": "EngineManager::stopEngine",
        "file": "./ecu_powertrain_control/engine_manager.cpp",
        "line": 154,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_cpp::EngineManager::setTargetRPM",
        "raw_name": "EngineManager::setTargetRPM",
        "file": "./ecu_powertrain_control/engine_manager.cpp",
        "line": 188,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_cpp::updateEngineParameters",
        "raw_name": "updateEngineParameters",
        "file": "./ecu_powertrain_control/engine_manager.cpp",
        "line": 214,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_cpp::EngineManager::getCurrentRPM",
        "raw_name": "EngineManager::getCurrentRPM",
        "file": "./ecu_powertrain_control/engine_manager.cpp",
        "line": 217,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_cpp::EngineManager::getEngineTemperature",
        "raw_name": "EngineManager::getEngineTemperature",
        "file": "./ecu_powertrain_control/engine_manager.cpp",
        "line": 222,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_cpp::EngineManager::getEngineState",
        "raw_name": "EngineManager::getEngineState",
        "file": "./ecu_powertrain_control/engine_manager.cpp",
        "line": 227,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_cpp::EngineManager::updateEngineParameters",
        "raw_name": "EngineManager::updateEngineParameters",
        "file": "./ecu_powertrain_control/engine_manager.cpp",
        "line": 236,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_cpp::LOG_FATAL",
        "raw_name": "LOG_FATAL",
        "file": "./ecu_powertrain_control/engine_manager.cpp",
        "line": 248,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_cpp::EngineManager::reportCriticalFault",
        "raw_name": "EngineManager::reportCriticalFault",
        "file": "./ecu_powertrain_control/engine_manager.cpp",
        "line": 275,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_h::EngineManager",
        "raw_name": "EngineManager",
        "file": "./ecu_powertrain_control/engine_manager.h",
        "line": 17,
        "end_line": 54,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "EngineManager",
                "callee_args_str": "",
                "line": 19
            },
            {
                "callee_expression": "EngineManager",
                "callee_args_str": "",
                "line": 20
            },
            {
                "callee_expression": "startEngine",
                "callee_args_str": "",
                "line": 22
            },
            {
                "callee_expression": "stopEngine",
                "callee_args_str": "",
                "line": 23
            },
            {
                "callee_expression": "setTargetRPM",
                "callee_args_str": "int rpm",
                "line": 24
            },
            {
                "callee_expression": "checkSystemPower",
                "callee_args_str": "",
                "line": 30
            },
            {
                "callee_expression": "performIgnitionSequence",
                "callee_args_str": "",
                "line": 50
            },
            {
                "callee_expression": "updateEngineParameters",
                "callee_args_str": "",
                "line": 51
            },
            {
                "callee_expression": "checkOilPressure",
                "callee_args_str": "",
                "line": 52
            },
            {
                "callee_expression": "reportCriticalFault",
                "callee_args_str": "const std::string& fault_description",
                "line": 53
            }
        ]
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_h::~EngineManager",
        "raw_name": "~EngineManager",
        "file": "./ecu_powertrain_control/engine_manager.h",
        "line": 19,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_h::startEngine",
        "raw_name": "startEngine",
        "file": "./ecu_powertrain_control/engine_manager.h",
        "line": 20,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_h::stopEngine",
        "raw_name": "stopEngine",
        "file": "./ecu_powertrain_control/engine_manager.h",
        "line": 22,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_h::setTargetRPM",
        "raw_name": "setTargetRPM",
        "file": "./ecu_powertrain_control/engine_manager.h",
        "line": 23,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_h::getCurrentRPM",
        "raw_name": "getCurrentRPM",
        "file": "./ecu_powertrain_control/engine_manager.h",
        "line": 24,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_h::getEngineTemperature",
        "raw_name": "getEngineTemperature",
        "file": "./ecu_powertrain_control/engine_manager.h",
        "line": 25,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_h::getEngineState",
        "raw_name": "getEngineState",
        "file": "./ecu_powertrain_control/engine_manager.h",
        "line": 26,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_h::checkSystemPower",
        "raw_name": "checkSystemPower",
        "file": "./ecu_powertrain_control/engine_manager.h",
        "line": 29,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_h::performIgnitionSequence",
        "raw_name": "performIgnitionSequence",
        "file": "./ecu_powertrain_control/engine_manager.h",
        "line": 48,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_h::updateEngineParameters",
        "raw_name": "updateEngineParameters",
        "file": "./ecu_powertrain_control/engine_manager.h",
        "line": 50,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_h::checkOilPressure",
        "raw_name": "checkOilPressure",
        "file": "./ecu_powertrain_control/engine_manager.h",
        "line": 51,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_engine_manager_h::reportCriticalFault",
        "raw_name": "reportCriticalFault",
        "file": "./ecu_powertrain_control/engine_manager.h",
        "line": 52,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_fuel_system_h::FuelSystem",
        "raw_name": "FuelSystem",
        "file": "./ecu_powertrain_control/fuel_system.h",
        "line": 10,
        "end_line": 28,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "FuelSystem",
                "callee_args_str": "",
                "line": 12
            },
            {
                "callee_expression": "FuelSystem",
                "callee_args_str": "",
                "line": 13
            },
            {
                "callee_expression": "injectFuel",
                "callee_args_str": "int cylinder_id, double amount_ml",
                "line": 17
            },
            {
                "callee_expression": "checkFuelPressure",
                "callee_args_str": "",
                "line": 18
            },
            {
                "callee_expression": "primePump",
                "callee_args_str": "",
                "line": 19
            },
            {
                "callee_expression": "simulateFuelConsumption",
                "callee_args_str": "double amount_ml",
                "line": 27
            }
        ]
    },
    {
        "signature": "ecu_powertrain_control_fuel_system_h::~FuelSystem",
        "raw_name": "~FuelSystem",
        "file": "./ecu_powertrain_control/fuel_system.h",
        "line": 12,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_fuel_system_h::injectFuel",
        "raw_name": "injectFuel",
        "file": "./ecu_powertrain_control/fuel_system.h",
        "line": 16,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_fuel_system_h::checkFuelPressure",
        "raw_name": "checkFuelPressure",
        "file": "./ecu_powertrain_control/fuel_system.h",
        "line": 17,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_fuel_system_h::primePump",
        "raw_name": "primePump",
        "file": "./ecu_powertrain_control/fuel_system.h",
        "line": 18,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_fuel_system_h::getFuelLevel",
        "raw_name": "getFuelLevel",
        "file": "./ecu_powertrain_control/fuel_system.h",
        "line": 19,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_fuel_system_h::simulateFuelConsumption",
        "raw_name": "simulateFuelConsumption",
        "file": "./ecu_powertrain_control/fuel_system.h",
        "line": 25,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_fuel_system_cpp::FuelSystem::FuelSystem",
        "raw_name": "FuelSystem::FuelSystem",
        "file": "./ecu_powertrain_control/fuel_system.cpp",
        "line": 6,
        "end_line": 7,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_fuel_system_cpp::LOG_INFO",
        "raw_name": "LOG_INFO",
        "file": "./ecu_powertrain_control/fuel_system.cpp",
        "line": 8,
        "end_line": 14,
        "logs_in_order": [
            {
                "level": "INFO",
                "message_args_str": "\"FuelSystem: Initializing. Fuel level: %.1f%%\", current_fuel_level_",
                "line": 9,
                "raw_log_statement": "LOG_INFO(\"FuelSystem: Initializing. Fuel level: %.1f%%\", current_fuel_level_);"
            },
            {
                "level": "INFO",
                "message_args_str": "\"FuelSystem: Shutting down.\"",
                "line": 13,
                "raw_log_statement": "LOG_INFO(\"FuelSystem: Shutting down.\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"FuelSystem: Initializing. Fuel level: %.1f%%\", current_fuel_level_",
                "line": 9
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"FuelSystem: Shutting down.\"",
                "line": 13
            }
        ]
    },
    {
        "signature": "ecu_powertrain_control_fuel_system_cpp::FuelSystem::~FuelSystem",
        "raw_name": "FuelSystem::~FuelSystem",
        "file": "./ecu_powertrain_control/fuel_system.cpp",
        "line": 10,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_fuel_system_cpp::FuelSystem::primePump",
        "raw_name": "FuelSystem::primePump",
        "file": "./ecu_powertrain_control/fuel_system.cpp",
        "line": 14,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_fuel_system_cpp::LOG_DEBUG",
        "raw_name": "LOG_DEBUG",
        "file": "./ecu_powertrain_control/fuel_system.cpp",
        "line": 16,
        "end_line": 71,
        "logs_in_order": [
            {
                "level": "DEBUG",
                "message_args_str": "\"FuelSystem: Priming fuel pump...\"",
                "line": 17,
                "raw_log_statement": "LOG_DEBUG(\"FuelSystem: Priming fuel pump...\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"FuelSystem: Fuel pump primed.\"",
                "line": 21,
                "raw_log_statement": "LOG_INFO(\"FuelSystem: Fuel pump primed.\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"FuelSystem: Checking fuel pressure.\"",
                "line": 25,
                "raw_log_statement": "LOG_DEBUG(\"FuelSystem: Checking fuel pressure.\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"FuelSystem: Attempting to inject %.2f ml of fuel into cylinder %d.\", amount_ml, cylinder_id",
                "line": 41,
                "raw_log_statement": "LOG_DEBUG(\"FuelSystem: Attempting to inject %.2f ml of fuel into cylinder %d.\", amount_ml, cylinder_id);"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"FuelSystem: Current fuel level requested: %.1f%%\", current_fuel_level_",
                "line": 69,
                "raw_log_statement": "LOG_DEBUG(\"FuelSystem: Current fuel level requested: %.1f%%\", current_fuel_level_);"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"FuelSystem: Priming fuel pump...\"",
                "line": 17
            },
            {
                "callee_expression": "std::this_thread::sleep_for",
                "callee_args_str": "std::chrono::milliseconds(50)",
                "line": 19
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"FuelSystem: Fuel pump primed.\"",
                "line": 21
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"FuelSystem: Checking fuel pressure.\"",
                "line": 25
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"FuelSystem: Attempting to inject %.2f ml of fuel into cylinder %d.\", amount_ml, cylinder_id",
                "line": 41
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"FuelSystem: Current fuel level requested: %.1f%%\", current_fuel_level_",
                "line": 69
            }
        ]
    },
    {
        "signature": "ecu_powertrain_control_fuel_system_cpp::std::this_thread::sleep_for",
        "raw_name": "std::this_thread::sleep_for",
        "file": "./ecu_powertrain_control/fuel_system.cpp",
        "line": 18,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_fuel_system_cpp::FuelSystem::checkFuelPressure",
        "raw_name": "FuelSystem::checkFuelPressure",
        "file": "./ecu_powertrain_control/fuel_system.cpp",
        "line": 22,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_fuel_system_cpp::if",
        "raw_name": "if",
        "file": "./ecu_powertrain_control/fuel_system.cpp",
        "line": 25,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_fuel_system_cpp::LOG_WARNING",
        "raw_name": "LOG_WARNING",
        "file": "./ecu_powertrain_control/fuel_system.cpp",
        "line": 26,
        "end_line": 50,
        "logs_in_order": [
            {
                "level": "WARNING",
                "message_args_str": "\"FuelSystem: Fuel pump not primed, cannot check pressure accurately.\"",
                "line": 27,
                "raw_log_statement": "LOG_WARNING(\"FuelSystem: Fuel pump not primed, cannot check pressure accurately.\");"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"FuelSystem: Fuel pump not primed. Priming now.\"",
                "line": 49,
                "raw_log_statement": "LOG_WARNING(\"FuelSystem: Fuel pump not primed. Priming now.\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"FuelSystem: Fuel pump not primed, cannot check pressure accurately.\"",
                "line": 27
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"FuelSystem: Fuel pump not primed. Priming now.\"",
                "line": 49
            },
            {
                "callee_expression": "primePump",
                "callee_args_str": "",
                "line": 50
            }
        ]
    },
    {
        "signature": "ecu_powertrain_control_fuel_system_cpp::LOG_ERROR",
        "raw_name": "LOG_ERROR",
        "file": "./ecu_powertrain_control/fuel_system.cpp",
        "line": 32,
        "end_line": 60,
        "logs_in_order": [
            {
                "level": "ERROR",
                "message_args_str": "\"FuelSystem: Low fuel pressure detected: %.2f PSI. Required: %.2f PSI\", current_pressure, required_pressure_psi_",
                "line": 33,
                "raw_log_statement": "LOG_ERROR(\"FuelSystem: Low fuel pressure detected: %.2f PSI. Required: %.2f PSI\", current_pressure, required_pressure_psi_);"
            },
            {
                "level": "ERROR",
                "message_args_str": "\"FuelSystem: Cannot inject fuel. Fuel tank empty!\"",
                "line": 44,
                "raw_log_statement": "LOG_ERROR(\"FuelSystem: Cannot inject fuel. Fuel tank empty!\");"
            },
            {
                "level": "ERROR",
                "message_args_str": "\"FuelSystem: Failed to prime pump. Cannot inject fuel for cylinder %d.\", cylinder_id",
                "line": 52,
                "raw_log_statement": "LOG_ERROR(\"FuelSystem: Failed to prime pump. Cannot inject fuel for cylinder %d.\", cylinder_id);"
            },
            {
                "level": "ERROR",
                "message_args_str": "\"FuelSystem: Fuel injection aborted for cylinder %d due to low pressure.\", cylinder_id",
                "line": 58,
                "raw_log_statement": "LOG_ERROR(\"FuelSystem: Fuel injection aborted for cylinder %d due to low pressure.\", cylinder_id);"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"FuelSystem: Low fuel pressure detected: %.2f PSI. Required: %.2f PSI\", current_pressure, required_pressure_psi_",
                "line": 33
            },
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"FuelSystem: Cannot inject fuel. Fuel tank empty!\"",
                "line": 44
            },
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"FuelSystem: Failed to prime pump. Cannot inject fuel for cylinder %d.\", cylinder_id",
                "line": 52
            },
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"FuelSystem: Fuel injection aborted for cylinder %d due to low pressure.\", cylinder_id",
                "line": 58
            }
        ]
    },
    {
        "signature": "ecu_powertrain_control_fuel_system_cpp::FuelSystem::injectFuel",
        "raw_name": "FuelSystem::injectFuel",
        "file": "./ecu_powertrain_control/fuel_system.cpp",
        "line": 38,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_fuel_system_cpp::primePump",
        "raw_name": "primePump",
        "file": "./ecu_powertrain_control/fuel_system.cpp",
        "line": 49,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_fuel_system_cpp::simulateFuelConsumption",
        "raw_name": "simulateFuelConsumption",
        "file": "./ecu_powertrain_control/fuel_system.cpp",
        "line": 63,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_fuel_system_cpp::FuelSystem::getFuelLevel",
        "raw_name": "FuelSystem::getFuelLevel",
        "file": "./ecu_powertrain_control/fuel_system.cpp",
        "line": 66,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_fuel_system_cpp::FuelSystem::simulateFuelConsumption",
        "raw_name": "FuelSystem::simulateFuelConsumption",
        "file": "./ecu_powertrain_control/fuel_system.cpp",
        "line": 71,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_fuel_system_cpp::LOG_VERBOSE",
        "raw_name": "LOG_VERBOSE",
        "file": "./ecu_powertrain_control/fuel_system.cpp",
        "line": 77,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::transmission_oil_temp_celsius_",
        "raw_name": "transmission_oil_temp_celsius_",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 17,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::LOG_INFO",
        "raw_name": "LOG_INFO",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 19,
        "end_line": 366,
        "logs_in_order": [
            {
                "level": "INFO",
                "message_args_str": "\"TransmissionManager: Initializing. Mode: PARK, Gear: %d\", current_gear_",
                "line": 20,
                "raw_log_statement": "LOG_INFO(\"TransmissionManager: Initializing. Mode: PARK, Gear: %d\", current_gear_);"
            },
            {
                "level": "INFO",
                "message_args_str": "\"TransmissionManager: Already in requested mode %d.\", static_cast<int>(new_mode)",
                "line": 37,
                "raw_log_statement": "LOG_INFO(\"TransmissionManager: Already in requested mode %d.\", static_cast<int>(new_mode));"
            },
            {
                "level": "INFO",
                "message_args_str": "\"TransmissionManager: Request to set transmission mode to %d.\", static_cast<int>(mode)",
                "line": 88,
                "raw_log_statement": "LOG_INFO(\"TransmissionManager: Request to set transmission mode to %d.\", static_cast<int>(mode));"
            },
            {
                "level": "INFO",
                "message_args_str": "\"TransmissionManager: Attempting to shift from gear %d to gear %d.\", current_gear_, to_gear",
                "line": 146,
                "raw_log_statement": "LOG_INFO(\"TransmissionManager: Attempting to shift from gear %d to gear %d.\", current_gear_, to_gear);"
            },
            {
                "level": "INFO",
                "message_args_str": "\"TransmissionManager: Already in highest gear (%d). Cannot upshift.\", current_gear_",
                "line": 213,
                "raw_log_statement": "LOG_INFO(\"TransmissionManager: Already in highest gear (%d). Cannot upshift.\", current_gear_);"
            },
            {
                "level": "INFO",
                "message_args_str": "\"TransmissionManager: Already in lowest gear (1). Cannot downshift further.\", current_gear_",
                "line": 223,
                "raw_log_statement": "LOG_INFO(\"TransmissionManager: Already in lowest gear (1). Cannot downshift further.\", current_gear_);"
            },
            {
                "level": "INFO",
                "message_args_str": "\"TransmissionManager: Request to SHIFT UP from gear %d.\", current_gear_",
                "line": 239,
                "raw_log_statement": "LOG_INFO(\"TransmissionManager: Request to SHIFT UP from gear %d.\", current_gear_);"
            },
            {
                "level": "INFO",
                "message_args_str": "\"TransmissionManager: Request to SHIFT DOWN from gear %d.\", current_gear_",
                "line": 260,
                "raw_log_statement": "LOG_INFO(\"TransmissionManager: Request to SHIFT DOWN from gear %d.\", current_gear_);"
            },
            {
                "level": "INFO",
                "message_args_str": "\"TransmissionManager: Neutral requested explicitly.\"",
                "line": 281,
                "raw_log_statement": "LOG_INFO(\"TransmissionManager: Neutral requested explicitly.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"TransmissionManager: Oil temperature elevated: %.1f C\", transmission_oil_temp_celsius_",
                "line": 366,
                "raw_log_statement": "LOG_INFO(\"TransmissionManager: Oil temperature elevated: %.1f C\", transmission_oil_temp_celsius_);"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"TransmissionManager: Initializing. Mode: PARK, Gear: %d\", current_gear_",
                "line": 20
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"TransmissionManager: Already in requested mode %d.\", static_cast<int>(new_mode)",
                "line": 37
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"TransmissionManager: Request to set transmission mode to %d.\", static_cast<int>(mode)",
                "line": 88
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"TransmissionManager: Attempting to shift from gear %d to gear %d.\", current_gear_, to_gear",
                "line": 146
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"TransmissionManager: Already in highest gear (%d). Cannot upshift.\", current_gear_",
                "line": 213
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"TransmissionManager: Already in lowest gear (1). Cannot downshift further.\", current_gear_",
                "line": 223
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"TransmissionManager: Request to SHIFT UP from gear %d.\", current_gear_",
                "line": 239
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"TransmissionManager: Request to SHIFT DOWN from gear %d.\", current_gear_",
                "line": 260
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"TransmissionManager: Neutral requested explicitly.\"",
                "line": 281
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"TransmissionManager: Oil temperature elevated: %.1f C\", transmission_oil_temp_celsius_",
                "line": 366
            }
        ]
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::if",
        "raw_name": "if",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 20,
        "end_line": 337,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "performGearShift",
                "callee_args_str": "current_gear_ + 1",
                "line": 321
            },
            {
                "callee_expression": "performGearShift",
                "callee_args_str": "current_gear_ - 1",
                "line": 332
            }
        ]
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::LOG_WARNING",
        "raw_name": "LOG_WARNING",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 21,
        "end_line": 356,
        "logs_in_order": [
            {
                "level": "WARNING",
                "message_args_str": "\"TransmissionManager: EngineManager instance is NULL. Some functionalities might be limited.\"",
                "line": 22,
                "raw_log_statement": "LOG_WARNING(\"TransmissionManager: EngineManager instance is NULL. Some functionalities might be limited.\");"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"TransmissionManager: Cannot shift to PARK. Vehicle speed %.1f km/h is too high.\", vehicle_state.speed_kmh",
                "line": 45,
                "raw_log_statement": "LOG_WARNING(\"TransmissionManager: Cannot shift to PARK. Vehicle speed %.1f km/h is too high.\", vehicle_state.speed_kmh);"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"TransmissionManager: Cannot shift to REVERSE. Vehicle speed %.1f km/h is too high.\", vehicle_state.speed_kmh",
                "line": 52,
                "raw_log_statement": "LOG_WARNING(\"TransmissionManager: Cannot shift to REVERSE. Vehicle speed %.1f km/h is too high.\", vehicle_state.speed_kmh);"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"TransmissionManager: Cannot shift to REVERSE from DRIVE at %.1f km/h.\", vehicle_state.speed_kmh",
                "line": 57,
                "raw_log_statement": "LOG_WARNING(\"TransmissionManager: Cannot shift to REVERSE from DRIVE at %.1f km/h.\", vehicle_state.speed_kmh);"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"TransmissionManager: Cannot shift to DRIVE/SPORT from REVERSE at %.1f km/h.\", vehicle_state.speed_kmh",
                "line": 66,
                "raw_log_statement": "LOG_WARNING(\"TransmissionManager: Cannot shift to DRIVE/SPORT from REVERSE at %.1f km/h.\", vehicle_state.speed_kmh);"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"TransmissionManager: Can only shift to MANUAL from DRIVE or SPORT. Current mode: %d\", static_cast<int>(current_mode_)",
                "line": 75,
                "raw_log_statement": "LOG_WARNING(\"TransmissionManager: Can only shift to MANUAL from DRIVE or SPORT. Current mode: %d\", static_cast<int>(current_mode_));"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"TransmissionManager: Cannot change mode. Gear shift currently in progress.\"",
                "line": 90,
                "raw_log_statement": "LOG_WARNING(\"TransmissionManager: Cannot change mode. Gear shift currently in progress.\");"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"TransmissionManager: EngineManager not available. Cannot request torque reduction for shift.\"",
                "line": 158,
                "raw_log_statement": "LOG_WARNING(\"TransmissionManager: EngineManager not available. Cannot request torque reduction for shift.\");"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"TransmissionManager: Cannot SHIFT UP. Another shift is already in progress.\"",
                "line": 241,
                "raw_log_statement": "LOG_WARNING(\"TransmissionManager: Cannot SHIFT UP. Another shift is already in progress.\");"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"TransmissionManager: Manual SHIFT UP ignored. Not in MANUAL or SPORT mode.\"",
                "line": 245,
                "raw_log_statement": "LOG_WARNING(\"TransmissionManager: Manual SHIFT UP ignored. Not in MANUAL or SPORT mode.\");"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"TransmissionManager: Cannot SHIFT DOWN. Another shift is already in progress.\"",
                "line": 262,
                "raw_log_statement": "LOG_WARNING(\"TransmissionManager: Cannot SHIFT DOWN. Another shift is already in progress.\");"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"TransmissionManager: Manual SHIFT DOWN ignored. Not in MANUAL or SPORT mode.\"",
                "line": 266,
                "raw_log_statement": "LOG_WARNING(\"TransmissionManager: Manual SHIFT DOWN ignored. Not in MANUAL or SPORT mode.\");"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"TransmissionManager: Oil temperature HIGH: %.1f C\", transmission_oil_temp_celsius_",
                "line": 356,
                "raw_log_statement": "LOG_WARNING(\"TransmissionManager: Oil temperature HIGH: %.1f C\", transmission_oil_temp_celsius_);"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"TransmissionManager: EngineManager instance is NULL. Some functionalities might be limited.\"",
                "line": 22
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"TransmissionManager: Cannot shift to PARK. Vehicle speed %.1f km/h is too high.\", vehicle_state.speed_kmh",
                "line": 45
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"TransmissionManager: Cannot shift to REVERSE. Vehicle speed %.1f km/h is too high.\", vehicle_state.speed_kmh",
                "line": 52
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"TransmissionManager: Cannot shift to REVERSE from DRIVE at %.1f km/h.\", vehicle_state.speed_kmh",
                "line": 57
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"TransmissionManager: Cannot shift to DRIVE/SPORT from REVERSE at %.1f km/h.\", vehicle_state.speed_kmh",
                "line": 66
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"TransmissionManager: Can only shift to MANUAL from DRIVE or SPORT. Current mode: %d\", static_cast<int>(current_mode_)",
                "line": 75
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"TransmissionManager: Cannot change mode. Gear shift currently in progress.\"",
                "line": 90
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"TransmissionManager: EngineManager not available. Cannot request torque reduction for shift.\"",
                "line": 158
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"TransmissionManager: Cannot SHIFT UP. Another shift is already in progress.\"",
                "line": 241
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"TransmissionManager: Manual SHIFT UP ignored. Not in MANUAL or SPORT mode.\"",
                "line": 245
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"TransmissionManager: Cannot SHIFT DOWN. Another shift is already in progress.\"",
                "line": 262
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"TransmissionManager: Manual SHIFT DOWN ignored. Not in MANUAL or SPORT mode.\"",
                "line": 266
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"TransmissionManager: Oil temperature HIGH: %.1f C\", transmission_oil_temp_celsius_",
                "line": 356
            }
        ]
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::TransmissionManager::~TransmissionManager",
        "raw_name": "TransmissionManager::~TransmissionManager",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 25,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::TransmissionManager::canShiftToMode",
        "raw_name": "TransmissionManager::canShiftToMode",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 30,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::switch",
        "raw_name": "switch",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 41,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::LOG_ERROR",
        "raw_name": "LOG_ERROR",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 78,
        "end_line": 364,
        "logs_in_order": [
            {
                "level": "ERROR",
                "message_args_str": "\"TransmissionManager: Mode change to %d denied by safety checks.\", static_cast<int>(mode)",
                "line": 101,
                "raw_log_statement": "LOG_ERROR(\"TransmissionManager: Mode change to %d denied by safety checks.\", static_cast<int>(mode));"
            },
            {
                "level": "ERROR",
                "message_args_str": "\"TransmissionManager: Oil temperature CRITICAL: %.1f C! Risk of damage. Limiting performance.\", transmission_oil_temp_celsius_",
                "line": 358,
                "raw_log_statement": "LOG_ERROR(\"TransmissionManager: Oil temperature CRITICAL: %.1f C! Risk of damage. Limiting performance.\", transmission_oil_temp_celsius_);"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"TransmissionManager: Mode change to %d denied by safety checks.\", static_cast<int>(mode)",
                "line": 101
            },
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"TransmissionManager: Oil temperature CRITICAL: %.1f C! Risk of damage. Limiting performance.\", transmission_oil_temp_celsius_",
                "line": 358
            },
            {
                "callee_expression": "engine_manager_->reportSystemFault",
                "callee_args_str": "\"TRANSMISSION_OVERHEAT\", SystemError::Severity::CRITICAL",
                "line": 362
            },
            {
                "callee_expression": "reportSystemFault",
                "callee_args_str": "\"TRANSMISSION_OVERHEAT\", SystemError::Severity::CRITICAL",
                "line": 362
            }
        ]
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::TransmissionManager::setTransmissionMode",
        "raw_name": "TransmissionManager::setTransmissionMode",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 85,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::TransmissionManager::performGearShift",
        "raw_name": "TransmissionManager::performGearShift",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 143,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::LOG_DEBUG",
        "raw_name": "LOG_DEBUG",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 151,
        "end_line": 410,
        "logs_in_order": [
            {
                "level": "DEBUG",
                "message_args_str": "\"TransmissionManager: Requesting torque reduction from EngineManager for gear shift.\"",
                "line": 152,
                "raw_log_statement": "LOG_DEBUG(\"TransmissionManager: Requesting torque reduction from EngineManager for gear shift.\");"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"TransmissionManager: EngineManager denied torque reduction. Shift might be rough.\"",
                "line": 155,
                "raw_log_statement": "LOG_WARNING(\"TransmissionManager: EngineManager denied torque reduction. Shift might be rough.\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"TransmissionManager: Signaling EngineManager to restore torque.\"",
                "line": 191,
                "raw_log_statement": "LOG_DEBUG(\"TransmissionManager: Signaling EngineManager to restore torque.\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"TransmissionManager: getCurrentMode() called. Mode: %d\", static_cast<int>(current_mode_)",
                "line": 293,
                "raw_log_statement": "LOG_DEBUG(\"TransmissionManager: getCurrentMode() called. Mode: %d\", static_cast<int>(current_mode_));"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"TransmissionManager: getCurrentGear() called. Gear: %d\", current_gear_",
                "line": 298,
                "raw_log_statement": "LOG_DEBUG(\"TransmissionManager: getCurrentGear() called. Gear: %d\", current_gear_);"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"TransmissionManager: Performing transmission health check.\"",
                "line": 374,
                "raw_log_statement": "LOG_DEBUG(\"TransmissionManager: Performing transmission health check.\");"
            },
            {
                "level": "ERROR",
                "message_args_str": "\"TransmissionManager: DIAGNOSTIC FAULT DETECTED! Code: DTC_TRN_%03d. Possible clutch slip or solenoid issue.\", fault_code",
                "line": 382,
                "raw_log_statement": "LOG_ERROR(\"TransmissionManager: DIAGNOSTIC FAULT DETECTED! Code: DTC_TRN_%03d. Possible clutch slip or solenoid issue.\", fault_code);"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"TransmissionManager: Skipping auto-shift logic as a shift is already in progress.\"",
                "line": 410,
                "raw_log_statement": "LOG_DEBUG(\"TransmissionManager: Skipping auto-shift logic as a shift is already in progress.\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"TransmissionManager: Requesting torque reduction from EngineManager for gear shift.\"",
                "line": 152
            },
            {
                "callee_expression": "engine_manager_->requestTorqueReduction",
                "callee_args_str": "50",
                "line": 153
            },
            {
                "callee_expression": "requestTorqueReduction",
                "callee_args_str": "50",
                "line": 153
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"TransmissionManager: EngineManager denied torque reduction. Shift might be rough.\"",
                "line": 155
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"TransmissionManager: Signaling EngineManager to restore torque.\"",
                "line": 191
            },
            {
                "callee_expression": "engine_manager_->restoreNormalTorque",
                "callee_args_str": "",
                "line": 192
            },
            {
                "callee_expression": "restoreNormalTorque",
                "callee_args_str": "",
                "line": 192
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"TransmissionManager: getCurrentMode() called. Mode: %d\", static_cast<int>(current_mode_)",
                "line": 293
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"TransmissionManager: getCurrentGear() called. Gear: %d\", current_gear_",
                "line": 298
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"TransmissionManager: Performing transmission health check.\"",
                "line": 374
            },
            {
                "callee_expression": "gen",
                "callee_args_str": "rd()",
                "line": 377
            },
            {
                "callee_expression": "distrib",
                "callee_args_str": "1, 200",
                "line": 378
            },
            {
                "callee_expression": "rand",
                "callee_args_str": ") % 50",
                "line": 381
            },
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"TransmissionManager: DIAGNOSTIC FAULT DETECTED! Code: DTC_TRN_%03d. Possible clutch slip or solenoid issue.\", fault_code",
                "line": 382
            },
            {
                "callee_expression": "engine_manager_->reportSystemFault",
                "callee_args_str": "\"TRANSMISSION_INTERNAL_FAULT_\" + std::to_string(fault_code), SystemError::Severity::WARNING",
                "line": 385
            },
            {
                "callee_expression": "reportSystemFault",
                "callee_args_str": "\"TRANSMISSION_INTERNAL_FAULT_\" + std::to_string(fault_code), SystemError::Severity::WARNING",
                "line": 385
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"TransmissionManager: Skipping auto-shift logic as a shift is already in progress.\"",
                "line": 410
            }
        ]
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::std::this_thread::sleep_for",
        "raw_name": "std::this_thread::sleep_for",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 162,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::gen",
        "raw_name": "gen",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 165,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::distrib",
        "raw_name": "distrib",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 166,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::TransmissionManager::canShiftGear",
        "raw_name": "TransmissionManager::canShiftGear",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 198,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::RPM",
        "raw_name": "RPM",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 218,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::TransmissionManager::shiftUp",
        "raw_name": "TransmissionManager::shiftUp",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 236,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::performGearShift",
        "raw_name": "performGearShift",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 252,
        "end_line": 276,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "performGearShift",
                "callee_args_str": "current_gear_ + 1",
                "line": 253
            },
            {
                "callee_expression": "performGearShift",
                "callee_args_str": "current_gear_ - 1",
                "line": 274
            }
        ]
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::TransmissionManager::shiftDown",
        "raw_name": "TransmissionManager::shiftDown",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 257,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::TransmissionManager::requestNeutral",
        "raw_name": "TransmissionManager::requestNeutral",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 278,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::setTransmissionMode",
        "raw_name": "setTransmissionMode",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 285,
        "end_line": 287,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "setTransmissionMode",
                "callee_args_str": "TransmissionMode::NEUTRAL",
                "line": 286
            }
        ]
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::TransmissionManager::getCurrentMode",
        "raw_name": "TransmissionManager::getCurrentMode",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 290,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::TransmissionManager::getCurrentGear",
        "raw_name": "TransmissionManager::getCurrentGear",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 295,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::TransmissionManager::isShiftInProgress",
        "raw_name": "TransmissionManager::isShiftInProgress",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 300,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::TransmissionManager::manageAutomaticShifting",
        "raw_name": "TransmissionManager::manageAutomaticShifting",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 304,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::TransmissionManager::updateTransmissionTemperature",
        "raw_name": "TransmissionManager::updateTransmissionTemperature",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 340,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::LOG_VERBOSE",
        "raw_name": "LOG_VERBOSE",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 367,
        "end_line": 388,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "LOG_VERBOSE",
                "callee_args_str": "\"TransmissionManager: Oil temperature: %.1f C\", transmission_oil_temp_celsius_",
                "line": 368
            },
            {
                "callee_expression": "LOG_VERBOSE",
                "callee_args_str": "\"TransmissionManager: Transmission health check OK.\"",
                "line": 388
            }
        ]
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::TransmissionManager::checkTransmissionHealth",
        "raw_name": "TransmissionManager::checkTransmissionHealth",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 370,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::TransmissionManager::updateState",
        "raw_name": "TransmissionManager::updateState",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 390,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::manageAutomaticShifting",
        "raw_name": "manageAutomaticShifting",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 407,
        "end_line": 408,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "manageAutomaticShifting",
                "callee_args_str": "vehicle_state, engine_rpm",
                "line": 408
            }
        ]
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::updateTransmissionTemperature",
        "raw_name": "updateTransmissionTemperature",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 411,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_powertrain_control_transmission_manager_cpp::checkTransmissionHealth",
        "raw_name": "checkTransmissionHealth",
        "file": "./ecu_powertrain_control/transmission_manager.cpp",
        "line": 417,
        "end_line": 419,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "checkTransmissionHealth",
                "callee_args_str": "",
                "line": 418
            }
        ]
    },
    {
        "signature": "ecu_power_management_power_monitor_h::PowerMonitor",
        "raw_name": "PowerMonitor",
        "file": "./ecu_power_management/power_monitor.h",
        "line": 9,
        "end_line": 34,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "PowerMonitor",
                "callee_args_str": "",
                "line": 11
            },
            {
                "callee_expression": "PowerMonitor",
                "callee_args_str": "",
                "line": 12
            },
            {
                "callee_expression": "updatePowerStatus",
                "callee_args_str": "",
                "line": 19
            },
            {
                "callee_expression": "simulateHighLoadEvent",
                "callee_args_str": "bool start_event",
                "line": 23
            },
            {
                "callee_expression": "checkVoltageLevels",
                "callee_args_str": "",
                "line": 32
            },
            {
                "callee_expression": "assessSystemStability",
                "callee_args_str": "",
                "line": 33
            }
        ]
    },
    {
        "signature": "ecu_power_management_power_monitor_h::~PowerMonitor",
        "raw_name": "~PowerMonitor",
        "file": "./ecu_power_management/power_monitor.h",
        "line": 11,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_power_management_power_monitor_h::isPowerStable",
        "raw_name": "isPowerStable",
        "file": "./ecu_power_management/power_monitor.h",
        "line": 14,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_power_management_power_monitor_h::getBatteryVoltage",
        "raw_name": "getBatteryVoltage",
        "file": "./ecu_power_management/power_monitor.h",
        "line": 15,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_power_management_power_monitor_h::updatePowerStatus",
        "raw_name": "updatePowerStatus",
        "file": "./ecu_power_management/power_monitor.h",
        "line": 18,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_power_management_power_monitor_h::simulateHighLoadEvent",
        "raw_name": "simulateHighLoadEvent",
        "file": "./ecu_power_management/power_monitor.h",
        "line": 22,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_power_management_power_monitor_h::checkVoltageLevels",
        "raw_name": "checkVoltageLevels",
        "file": "./ecu_power_management/power_monitor.h",
        "line": 31,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_power_management_power_monitor_h::assessSystemStability",
        "raw_name": "assessSystemStability",
        "file": "./ecu_power_management/power_monitor.h",
        "line": 32,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_power_management_power_monitor_cpp::critical_load_events_count_",
        "raw_name": "critical_load_events_count_",
        "file": "./ecu_power_management/power_monitor.cpp",
        "line": 11,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_power_management_power_monitor_cpp::PowerMonitor::~PowerMonitor",
        "raw_name": "PowerMonitor::~PowerMonitor",
        "file": "./ecu_power_management/power_monitor.cpp",
        "line": 16,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_power_management_power_monitor_cpp::LOG_INFO",
        "raw_name": "LOG_INFO",
        "file": "./ecu_power_management/power_monitor.cpp",
        "line": 18,
        "end_line": 108,
        "logs_in_order": [
            {
                "level": "INFO",
                "message_args_str": "\"PowerMonitor: Shutting down. Final Battery Voltage: %.2fV\", current_battery_voltage_V_",
                "line": 19,
                "raw_log_statement": "LOG_INFO(\"PowerMonitor: Shutting down. Final Battery Voltage: %.2fV\", current_battery_voltage_V_);"
            },
            {
                "level": "INFO",
                "message_args_str": "\"PowerMonitor: Battery voltage low: %.2fV. Consider charging.\", current_battery_voltage_V_",
                "line": 53,
                "raw_log_statement": "LOG_INFO(\"PowerMonitor: Battery voltage low: %.2fV. Consider charging.\", current_battery_voltage_V_);"
            },
            {
                "level": "INFO",
                "message_args_str": "\"PowerMonitor: System stability RESTORED. Voltage: %.2fV\", current_battery_voltage_V_",
                "line": 74,
                "raw_log_statement": "LOG_INFO(\"PowerMonitor: System stability RESTORED. Voltage: %.2fV\", current_battery_voltage_V_);"
            },
            {
                "level": "INFO",
                "message_args_str": "\"PowerMonitor: Updating power status cycle.\"",
                "line": 81,
                "raw_log_statement": "LOG_INFO(\"PowerMonitor: Updating power status cycle.\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"PowerMonitor: Performing peripheral power checks (simulated).\"",
                "line": 86,
                "raw_log_statement": "LOG_DEBUG(\"PowerMonitor: Performing peripheral power checks (simulated).\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"PowerMonitor: Power status update complete. System is STABLE. Voltage: %.2fV\", current_battery_voltage_V_",
                "line": 91,
                "raw_log_statement": "LOG_INFO(\"PowerMonitor: Power status update complete. System is STABLE. Voltage: %.2fV\", current_battery_voltage_V_);"
            },
            {
                "level": "INFO",
                "message_args_str": "\"PowerMonitor: High electrical load event ENDED.\"",
                "line": 108,
                "raw_log_statement": "LOG_INFO(\"PowerMonitor: High electrical load event ENDED.\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"PowerMonitor: Shutting down. Final Battery Voltage: %.2fV\", current_battery_voltage_V_",
                "line": 19
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"PowerMonitor: Battery voltage low: %.2fV. Consider charging.\", current_battery_voltage_V_",
                "line": 53
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"PowerMonitor: System stability RESTORED. Voltage: %.2fV\", current_battery_voltage_V_",
                "line": 74
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"PowerMonitor: Updating power status cycle.\"",
                "line": 81
            },
            {
                "callee_expression": "checkVoltageLevels",
                "callee_args_str": "",
                "line": 82
            },
            {
                "callee_expression": "std::this_thread::sleep_for",
                "callee_args_str": "std::chrono::milliseconds(30)",
                "line": 85
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"PowerMonitor: Performing peripheral power checks (simulated).\"",
                "line": 86
            },
            {
                "callee_expression": "assessSystemStability",
                "callee_args_str": "",
                "line": 88
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"PowerMonitor: Power status update complete. System is STABLE. Voltage: %.2fV\", current_battery_voltage_V_",
                "line": 91
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"PowerMonitor: High electrical load event ENDED.\"",
                "line": 108
            }
        ]
    },
    {
        "signature": "ecu_power_management_power_monitor_cpp::PowerMonitor::isPowerStable",
        "raw_name": "PowerMonitor::isPowerStable",
        "file": "./ecu_power_management/power_monitor.cpp",
        "line": 20,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_power_management_power_monitor_cpp::LOG_DEBUG",
        "raw_name": "LOG_DEBUG",
        "file": "./ecu_power_management/power_monitor.cpp",
        "line": 23,
        "end_line": 63,
        "logs_in_order": [
            {
                "level": "DEBUG",
                "message_args_str": "\"PowerMonitor: getBatteryVoltage() called. Voltage: %.2fV\", current_battery_voltage_V_",
                "line": 32,
                "raw_log_statement": "LOG_DEBUG(\"PowerMonitor: getBatteryVoltage() called. Voltage: %.2fV\", current_battery_voltage_V_);"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"PowerMonitor: Checking voltage levels. Current: %.2fV\", current_battery_voltage_V_",
                "line": 37,
                "raw_log_statement": "LOG_DEBUG(\"PowerMonitor: Checking voltage levels. Current: %.2fV\", current_battery_voltage_V_);"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"PowerMonitor: Assessing overall system stability.\"",
                "line": 62,
                "raw_log_statement": "LOG_DEBUG(\"PowerMonitor: Assessing overall system stability.\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"PowerMonitor: getBatteryVoltage() called. Voltage: %.2fV\", current_battery_voltage_V_",
                "line": 32
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"PowerMonitor: Checking voltage levels. Current: %.2fV\", current_battery_voltage_V_",
                "line": 37
            },
            {
                "callee_expression": "gen",
                "callee_args_str": "rd()",
                "line": 41
            },
            {
                "callee_expression": "distr",
                "callee_args_str": "-0.1, 0.05",
                "line": 42
            },
            {
                "callee_expression": "distr",
                "callee_args_str": "gen",
                "line": 43
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"PowerMonitor: Assessing overall system stability.\"",
                "line": 62
            }
        ]
    },
    {
        "signature": "ecu_power_management_power_monitor_cpp::if",
        "raw_name": "if",
        "file": "./ecu_power_management/power_monitor.cpp",
        "line": 24,
        "end_line": 97,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_power_management_power_monitor_cpp::LOG_WARNING",
        "raw_name": "LOG_WARNING",
        "file": "./ecu_power_management/power_monitor.cpp",
        "line": 25,
        "end_line": 103,
        "logs_in_order": [
            {
                "level": "WARNING",
                "message_args_str": "\"PowerMonitor: Reporting system power as UNSTABLE.\"",
                "line": 26,
                "raw_log_statement": "LOG_WARNING(\"PowerMonitor: Reporting system power as UNSTABLE.\");"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"PowerMonitor: Battery voltage critically low: %.2fV!\", current_battery_voltage_V_",
                "line": 50,
                "raw_log_statement": "LOG_WARNING(\"PowerMonitor: Battery voltage critically low: %.2fV!\", current_battery_voltage_V_);"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"PowerMonitor: Power status update complete. System is UNSTABLE. Voltage: %.2fV\", current_battery_voltage_V_",
                "line": 93,
                "raw_log_statement": "LOG_WARNING(\"PowerMonitor: Power status update complete. System is UNSTABLE. Voltage: %.2fV\", current_battery_voltage_V_);"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"PowerMonitor: High electrical load event STARTED (e.g., AC compressor, multiple window motors).\"",
                "line": 99,
                "raw_log_statement": "LOG_WARNING(\"PowerMonitor: High electrical load event STARTED (e.g., AC compressor, multiple window motors).\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"PowerMonitor: Reporting system power as UNSTABLE.\"",
                "line": 26
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"PowerMonitor: Battery voltage critically low: %.2fV!\", current_battery_voltage_V_",
                "line": 50
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"PowerMonitor: Power status update complete. System is UNSTABLE. Voltage: %.2fV\", current_battery_voltage_V_",
                "line": 93
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"PowerMonitor: High electrical load event STARTED (e.g., AC compressor, multiple window motors).\"",
                "line": 99
            },
            {
                "callee_expression": "checkVoltageLevels",
                "callee_args_str": "",
                "line": 102
            },
            {
                "callee_expression": "assessSystemStability",
                "callee_args_str": "",
                "line": 103
            }
        ]
    },
    {
        "signature": "ecu_power_management_power_monitor_cpp::PowerMonitor::getBatteryVoltage",
        "raw_name": "PowerMonitor::getBatteryVoltage",
        "file": "./ecu_power_management/power_monitor.cpp",
        "line": 29,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_power_management_power_monitor_cpp::PowerMonitor::checkVoltageLevels",
        "raw_name": "PowerMonitor::checkVoltageLevels",
        "file": "./ecu_power_management/power_monitor.cpp",
        "line": 34,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_power_management_power_monitor_cpp::gen",
        "raw_name": "gen",
        "file": "./ecu_power_management/power_monitor.cpp",
        "line": 40,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_power_management_power_monitor_cpp::distr",
        "raw_name": "distr",
        "file": "./ecu_power_management/power_monitor.cpp",
        "line": 41,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_power_management_power_monitor_cpp::LOG_VERBOSE",
        "raw_name": "LOG_VERBOSE",
        "file": "./ecu_power_management/power_monitor.cpp",
        "line": 55,
        "end_line": 56,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "LOG_VERBOSE",
                "callee_args_str": "\"PowerMonitor: Battery voltage nominal: %.2fV\", current_battery_voltage_V_",
                "line": 56
            }
        ]
    },
    {
        "signature": "ecu_power_management_power_monitor_cpp::PowerMonitor::assessSystemStability",
        "raw_name": "PowerMonitor::assessSystemStability",
        "file": "./ecu_power_management/power_monitor.cpp",
        "line": 59,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_power_management_power_monitor_cpp::LOG_ERROR",
        "raw_name": "LOG_ERROR",
        "file": "./ecu_power_management/power_monitor.cpp",
        "line": 64,
        "end_line": 106,
        "logs_in_order": [
            {
                "level": "ERROR",
                "message_args_str": "\"PowerMonitor: Multiple consecutive high load events detected. System declared UNSTABLE.\"",
                "line": 65,
                "raw_log_statement": "LOG_ERROR(\"PowerMonitor: Multiple consecutive high load events detected. System declared UNSTABLE.\");"
            },
            {
                "level": "ERROR",
                "message_args_str": "\"PowerMonitor: System became UNSTABLE during high load event!\"",
                "line": 105,
                "raw_log_statement": "LOG_ERROR(\"PowerMonitor: System became UNSTABLE during high load event!\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"PowerMonitor: Multiple consecutive high load events detected. System declared UNSTABLE.\"",
                "line": 65
            },
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"PowerMonitor: System became UNSTABLE during high load event!\"",
                "line": 105
            }
        ]
    },
    {
        "signature": "ecu_power_management_power_monitor_cpp::PowerMonitor::updatePowerStatus",
        "raw_name": "PowerMonitor::updatePowerStatus",
        "file": "./ecu_power_management/power_monitor.cpp",
        "line": 78,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_power_management_power_monitor_cpp::checkVoltageLevels",
        "raw_name": "checkVoltageLevels",
        "file": "./ecu_power_management/power_monitor.cpp",
        "line": 81,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_power_management_power_monitor_cpp::std::this_thread::sleep_for",
        "raw_name": "std::this_thread::sleep_for",
        "file": "./ecu_power_management/power_monitor.cpp",
        "line": 84,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_power_management_power_monitor_cpp::assessSystemStability",
        "raw_name": "assessSystemStability",
        "file": "./ecu_power_management/power_monitor.cpp",
        "line": 86,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_power_management_power_monitor_cpp::PowerMonitor::simulateHighLoadEvent",
        "raw_name": "PowerMonitor::simulateHighLoadEvent",
        "file": "./ecu_power_management/power_monitor.cpp",
        "line": 95,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_lighting_control_h::BulbState",
        "raw_name": "BulbState",
        "file": "./ecu_body_control_module/lighting_control.h",
        "line": 39,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_lighting_control_h::LightingControl",
        "raw_name": "LightingControl",
        "file": "./ecu_body_control_module/lighting_control.h",
        "line": 45,
        "end_line": 75,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "LightingControl",
                "callee_args_str": "ecu_power_management::PowerMonitor* pm",
                "line": 47
            },
            {
                "callee_expression": "LightingControl",
                "callee_args_str": "",
                "line": 48
            },
            {
                "callee_expression": "setLightState",
                "callee_args_str": "LightType type, bool on",
                "line": 51
            },
            {
                "callee_expression": "activateHazardLights",
                "callee_args_str": "bool activate",
                "line": 52
            },
            {
                "callee_expression": "activateIndicator",
                "callee_args_str": "LightType indicator_type, bool activate",
                "line": 53
            },
            {
                "callee_expression": "performBulbCheck",
                "callee_args_str": "",
                "line": 57
            },
            {
                "callee_expression": "updateLighting",
                "callee_args_str": "const VehicleState& current_vehicle_state",
                "line": 58
            },
            {
                "callee_expression": "findBulb",
                "callee_args_str": "LightType type",
                "line": 69
            },
            {
                "callee_expression": "setSpecificLight",
                "callee_args_str": "LightType type, bool on",
                "line": 72
            },
            {
                "callee_expression": "handleAutomaticHeadlights",
                "callee_args_str": "const VehicleState& vehicle_state, bool power_stable",
                "line": 73
            },
            {
                "callee_expression": "checkBrakeLights",
                "callee_args_str": "const VehicleState& vehicle_state",
                "line": 74
            }
        ]
    },
    {
        "signature": "ecu_body_control_module_lighting_control_h::~LightingControl",
        "raw_name": "~LightingControl",
        "file": "./ecu_body_control_module/lighting_control.h",
        "line": 47,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_lighting_control_h::setLightState",
        "raw_name": "setLightState",
        "file": "./ecu_body_control_module/lighting_control.h",
        "line": 50,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_lighting_control_h::activateHazardLights",
        "raw_name": "activateHazardLights",
        "file": "./ecu_body_control_module/lighting_control.h",
        "line": 51,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_lighting_control_h::activateIndicator",
        "raw_name": "activateIndicator",
        "file": "./ecu_body_control_module/lighting_control.h",
        "line": 52,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_lighting_control_h::getLightStatus",
        "raw_name": "getLightStatus",
        "file": "./ecu_body_control_module/lighting_control.h",
        "line": 55,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_lighting_control_h::performBulbCheck",
        "raw_name": "performBulbCheck",
        "file": "./ecu_body_control_module/lighting_control.h",
        "line": 56,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_lighting_control_h::updateLighting",
        "raw_name": "updateLighting",
        "file": "./ecu_body_control_module/lighting_control.h",
        "line": 57,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_lighting_control_h::findBulb",
        "raw_name": "findBulb",
        "file": "./ecu_body_control_module/lighting_control.h",
        "line": 68,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_lighting_control_h::setSpecificLight",
        "raw_name": "setSpecificLight",
        "file": "./ecu_body_control_module/lighting_control.h",
        "line": 70,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_lighting_control_h::handleAutomaticHeadlights",
        "raw_name": "handleAutomaticHeadlights",
        "file": "./ecu_body_control_module/lighting_control.h",
        "line": 72,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_lighting_control_h::checkBrakeLights",
        "raw_name": "checkBrakeLights",
        "file": "./ecu_body_control_module/lighting_control.h",
        "line": 73,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_h::ClimateControl",
        "raw_name": "ClimateControl",
        "file": "./ecu_body_control_module/calimate_control.h",
        "line": 33,
        "end_line": 85,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "ClimateControl",
                "callee_args_str": "ecu_power_management::PowerMonitor* pm",
                "line": 35
            },
            {
                "callee_expression": "ClimateControl",
                "callee_args_str": "",
                "line": 36
            },
            {
                "callee_expression": "setTargetTemperature",
                "callee_args_str": "double celsius",
                "line": 39
            },
            {
                "callee_expression": "setFanSpeed",
                "callee_args_str": "int level",
                "line": 40
            },
            {
                "callee_expression": "setAirDistribution",
                "callee_args_str": "AirDistributionMode mode",
                "line": 41
            },
            {
                "callee_expression": "setACActive",
                "callee_args_str": "bool active",
                "line": 42
            },
            {
                "callee_expression": "setRecirculationActive",
                "callee_args_str": "bool active",
                "line": 43
            },
            {
                "callee_expression": "setAutoMode",
                "callee_args_str": "bool enabled",
                "line": 44
            },
            {
                "callee_expression": "updateClimateState",
                "callee_args_str": "const VehicleState& vehicle_state, const SensorData& interior_temp_sensor, const SensorData& exterior_temp_sensor",
                "line": 59
            },
            {
                "callee_expression": "manageAutomaticOperation",
                "callee_args_str": "",
                "line": 79
            },
            {
                "callee_expression": "controlACCompressor",
                "callee_args_str": "bool engine_running, bool high_engine_load_simulated",
                "line": 80
            },
            {
                "callee_expression": "adjustFanForTemperature",
                "callee_args_str": "",
                "line": 81
            },
            {
                "callee_expression": "adjustAirDistributionForMode",
                "callee_args_str": "",
                "line": 82
            },
            {
                "callee_expression": "simulateTemperatureChange",
                "callee_args_str": "",
                "line": 83
            }
        ]
    },
    {
        "signature": "ecu_body_control_module_calimate_control_h::~ClimateControl",
        "raw_name": "~ClimateControl",
        "file": "./ecu_body_control_module/calimate_control.h",
        "line": 35,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_h::setTargetTemperature",
        "raw_name": "setTargetTemperature",
        "file": "./ecu_body_control_module/calimate_control.h",
        "line": 38,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_h::setFanSpeed",
        "raw_name": "setFanSpeed",
        "file": "./ecu_body_control_module/calimate_control.h",
        "line": 39,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_h::setAirDistribution",
        "raw_name": "setAirDistribution",
        "file": "./ecu_body_control_module/calimate_control.h",
        "line": 40,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_h::setACActive",
        "raw_name": "setACActive",
        "file": "./ecu_body_control_module/calimate_control.h",
        "line": 41,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_h::setRecirculationActive",
        "raw_name": "setRecirculationActive",
        "file": "./ecu_body_control_module/calimate_control.h",
        "line": 42,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_h::setAutoMode",
        "raw_name": "setAutoMode",
        "file": "./ecu_body_control_module/calimate_control.h",
        "line": 43,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_h::getCurrentInteriorTemp",
        "raw_name": "getCurrentInteriorTemp",
        "file": "./ecu_body_control_module/calimate_control.h",
        "line": 46,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_h::getTargetTemperature",
        "raw_name": "getTargetTemperature",
        "file": "./ecu_body_control_module/calimate_control.h",
        "line": 47,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_h::getFanSpeed",
        "raw_name": "getFanSpeed",
        "file": "./ecu_body_control_module/calimate_control.h",
        "line": 48,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_h::getAirDistribution",
        "raw_name": "getAirDistribution",
        "file": "./ecu_body_control_module/calimate_control.h",
        "line": 49,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_h::isACActive",
        "raw_name": "isACActive",
        "file": "./ecu_body_control_module/calimate_control.h",
        "line": 50,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_h::getACCompressorStatus",
        "raw_name": "getACCompressorStatus",
        "file": "./ecu_body_control_module/calimate_control.h",
        "line": 51,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_h::isRecirculationActive",
        "raw_name": "isRecirculationActive",
        "file": "./ecu_body_control_module/calimate_control.h",
        "line": 52,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_h::isAutoModeEnabled",
        "raw_name": "isAutoModeEnabled",
        "file": "./ecu_body_control_module/calimate_control.h",
        "line": 53,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_h::updateClimateState",
        "raw_name": "updateClimateState",
        "file": "./ecu_body_control_module/calimate_control.h",
        "line": 58,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_h::manageAutomaticOperation",
        "raw_name": "manageAutomaticOperation",
        "file": "./ecu_body_control_module/calimate_control.h",
        "line": 78,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_h::controlACCompressor",
        "raw_name": "controlACCompressor",
        "file": "./ecu_body_control_module/calimate_control.h",
        "line": 79,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_h::adjustFanForTemperature",
        "raw_name": "adjustFanForTemperature",
        "file": "./ecu_body_control_module/calimate_control.h",
        "line": 80,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_h::adjustAirDistributionForMode",
        "raw_name": "adjustAirDistributionForMode",
        "file": "./ecu_body_control_module/calimate_control.h",
        "line": 81,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_h::simulateTemperatureChange",
        "raw_name": "simulateTemperatureChange",
        "file": "./ecu_body_control_module/calimate_control.h",
        "line": 82,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_h::canActivateAC",
        "raw_name": "canActivateAC",
        "file": "./ecu_body_control_module/calimate_control.h",
        "line": 83,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_h::obstruction_counter",
        "raw_name": "obstruction_counter",
        "file": "./ecu_body_control_module/window_control.h",
        "line": 42,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_h::WindowControl",
        "raw_name": "WindowControl",
        "file": "./ecu_body_control_module/window_control.h",
        "line": 46,
        "end_line": 77,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "WindowControl",
                "callee_args_str": "ecu_power_management::PowerMonitor* pm",
                "line": 48
            },
            {
                "callee_expression": "WindowControl",
                "callee_args_str": "",
                "line": 49
            },
            {
                "callee_expression": "moveWindow",
                "callee_args_str": "WindowID id, double target_position_percent, bool one_touch",
                "line": 54
            },
            {
                "callee_expression": "stopWindowMovement",
                "callee_args_str": "WindowID id",
                "line": 55
            },
            {
                "callee_expression": "setChildLock",
                "callee_args_str": "WindowID id, bool locked",
                "line": 58
            },
            {
                "callee_expression": "setAllWindowsLock",
                "callee_args_str": "bool locked",
                "line": 59
            },
            {
                "callee_expression": "updateWindowStates",
                "callee_args_str": "",
                "line": 63
            },
            {
                "callee_expression": "findWindow",
                "callee_args_str": "WindowID id",
                "line": 71
            },
            {
                "callee_expression": "simulateMotorMovement",
                "callee_args_str": "SingleWindowState& window, double step_change_percent",
                "line": 74
            },
            {
                "callee_expression": "checkAntiPinch",
                "callee_args_str": "SingleWindowState& window",
                "line": 75
            }
        ]
    },
    {
        "signature": "ecu_body_control_module_window_control_h::~WindowControl",
        "raw_name": "~WindowControl",
        "file": "./ecu_body_control_module/window_control.h",
        "line": 48,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_h::moveWindow",
        "raw_name": "moveWindow",
        "file": "./ecu_body_control_module/window_control.h",
        "line": 53,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_h::stopWindowMovement",
        "raw_name": "stopWindowMovement",
        "file": "./ecu_body_control_module/window_control.h",
        "line": 54,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_h::setChildLock",
        "raw_name": "setChildLock",
        "file": "./ecu_body_control_module/window_control.h",
        "line": 57,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_h::setAllWindowsLock",
        "raw_name": "setAllWindowsLock",
        "file": "./ecu_body_control_module/window_control.h",
        "line": 58,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_h::getWindowPosition",
        "raw_name": "getWindowPosition",
        "file": "./ecu_body_control_module/window_control.h",
        "line": 61,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_h::updateWindowStates",
        "raw_name": "updateWindowStates",
        "file": "./ecu_body_control_module/window_control.h",
        "line": 62,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_h::findWindow",
        "raw_name": "findWindow",
        "file": "./ecu_body_control_module/window_control.h",
        "line": 69,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_h::simulateMotorMovement",
        "raw_name": "simulateMotorMovement",
        "file": "./ecu_body_control_module/window_control.h",
        "line": 72,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_h::checkAntiPinch",
        "raw_name": "checkAntiPinch",
        "file": "./ecu_body_control_module/window_control.h",
        "line": 74,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_h::canOperateWindow",
        "raw_name": "canOperateWindow",
        "file": "./ecu_body_control_module/window_control.h",
        "line": 75,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::airDistModeToString",
        "raw_name": "airDistModeToString",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 9,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::switch",
        "raw_name": "switch",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 10,
        "end_line": 33,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::acStatusToString",
        "raw_name": "acStatusToString",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 22,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::ac_power_denial_counter_",
        "raw_name": "ac_power_denial_counter_",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 45,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::if",
        "raw_name": "if",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 49,
        "end_line": 376,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "LOG_VERBOSE",
                "callee_args_str": "\"ClimateControl: Cooling active. Temp change rate: %.2f C/cycle\", rate_of_change",
                "line": 374
            }
        ]
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::LOG_WARNING",
        "raw_name": "LOG_WARNING",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 50,
        "end_line": 213,
        "logs_in_order": [
            {
                "level": "WARNING",
                "message_args_str": "\"ClimateControl: PowerMonitor service is NULL. AC compressor management might be impaired.\"",
                "line": 51,
                "raw_log_statement": "LOG_WARNING(\"ClimateControl: PowerMonitor service is NULL. AC compressor management might be impaired.\");"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"ClimateControl: Recirculation requested during WINDSHIELD_DEFROST. This is often overridden to FRESH AIR for safety/effectiveness.\"",
                "line": 137,
                "raw_log_statement": "LOG_WARNING(\"ClimateControl: Recirculation requested during WINDSHIELD_DEFROST. This is often overridden to FRESH AIR for safety/effectiveness.\");"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"ClimateControl: Power system unstable. AC activation deferred by PowerMonitor.\"",
                "line": 207,
                "raw_log_statement": "LOG_WARNING(\"ClimateControl: Power system unstable. AC activation deferred by PowerMonitor.\");"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"ClimateControl: Battery voltage (%.2fV) too low for AC compressor. Activation deferred.\", power_monitor_->getBatteryVoltage()",
                "line": 211,
                "raw_log_statement": "LOG_WARNING(\"ClimateControl: Battery voltage (%.2fV) too low for AC compressor. Activation deferred.\", power_monitor_->getBatteryVoltage());"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"ClimateControl: PowerMonitor service is NULL. AC compressor management might be impaired.\"",
                "line": 51
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"ClimateControl: Recirculation requested during WINDSHIELD_DEFROST. This is often overridden to FRESH AIR for safety/effectiveness.\"",
                "line": 137
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"ClimateControl: Power system unstable. AC activation deferred by PowerMonitor.\"",
                "line": 207
            },
            {
                "callee_expression": "power_monitor_->getBatteryVoltage",
                "callee_args_str": ")",
                "line": 211
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"ClimateControl: Battery voltage (%.2fV) too low for AC compressor. Activation deferred.\", power_monitor_->getBatteryVoltage()",
                "line": 211
            }
        ]
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::ClimateControl::~ClimateControl",
        "raw_name": "ClimateControl::~ClimateControl",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 53,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::ClimateControl::setTargetTemperature",
        "raw_name": "ClimateControl::setTargetTemperature",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 58,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::std::min",
        "raw_name": "std::min",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 62,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::LOG_INFO",
        "raw_name": "LOG_INFO",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 62,
        "end_line": 352,
        "logs_in_order": [
            {
                "level": "INFO",
                "message_args_str": "\"ClimateControl: Fan turned OFF. This might also turn off AC compressor if it's not needed for defrost.\"",
                "line": 84,
                "raw_log_statement": "LOG_INFO(\"ClimateControl: Fan turned OFF. This might also turn off AC compressor if it's not needed for defrost.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"ClimateControl: Manual fan speed change. Disabling AUTO mode.\"",
                "line": 89,
                "raw_log_statement": "LOG_INFO(\"ClimateControl: Manual fan speed change. Disabling AUTO mode.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"ClimateControl: Manual air distribution change. Disabling AUTO mode.\"",
                "line": 103,
                "raw_log_statement": "LOG_INFO(\"ClimateControl: Manual air distribution change. Disabling AUTO mode.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"ClimateControl: Windshield defrost selected. AC might be activated for dehumidification.\"",
                "line": 107,
                "raw_log_statement": "LOG_INFO(\"ClimateControl: Windshield defrost selected. AC might be activated for dehumidification.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"ClimateControl: Manual AC OFF request. Disabling AUTO mode.\"",
                "line": 121,
                "raw_log_statement": "LOG_INFO(\"ClimateControl: Manual AC OFF request. Disabling AUTO mode.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"ClimateControl: AUTO mode enabled. System will now manage fan, distribution, and AC.\"",
                "line": 151,
                "raw_log_statement": "LOG_INFO(\"ClimateControl: AUTO mode enabled. System will now manage fan, distribution, and AC.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"ClimateControl: AUTO mode disabled. System reverts to last manual settings.\"",
                "line": 154,
                "raw_log_statement": "LOG_INFO(\"ClimateControl: AUTO mode disabled. System reverts to last manual settings.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"ClimateControl: Cannot activate AC. Engine is not running.\"",
                "line": 197,
                "raw_log_statement": "LOG_INFO(\"ClimateControl: Cannot activate AC. Engine is not running.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"ClimateControl: Cannot activate AC. High engine load detected (e.g. full throttle).\"",
                "line": 201,
                "raw_log_statement": "LOG_INFO(\"ClimateControl: Cannot activate AC. High engine load detected (e.g. full throttle).\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"ClimateControl: Exterior temperature (%.1fC) very low. AC compressor might not engage for cooling.\", current_exterior_temperature_celsius_",
                "line": 216,
                "raw_log_statement": "LOG_INFO(\"ClimateControl: Exterior temperature (%.1fC) very low. AC compressor might not engage for cooling.\", current_exterior_temperature_celsius_);"
            },
            {
                "level": "INFO",
                "message_args_str": "\"ClimateControl: AC Compressor ACTIVATED.\"",
                "line": 247,
                "raw_log_statement": "LOG_INFO(\"ClimateControl: AC Compressor ACTIVATED.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"ClimateControl: AC Compressor DEACTIVATED (no longer needed).\"",
                "line": 266,
                "raw_log_statement": "LOG_INFO(\"ClimateControl: AC Compressor DEACTIVATED (no longer needed).\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"ClimateControl: AUTO mode requesting AC ON.\"",
                "line": 344,
                "raw_log_statement": "LOG_INFO(\"ClimateControl: AUTO mode requesting AC ON.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"ClimateControl: AUTO mode requesting AC OFF (heating phase).\"",
                "line": 351,
                "raw_log_statement": "LOG_INFO(\"ClimateControl: AUTO mode requesting AC OFF (heating phase).\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"ClimateControl: Fan turned OFF. This might also turn off AC compressor if it's not needed for defrost.\"",
                "line": 84
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"ClimateControl: Manual fan speed change. Disabling AUTO mode.\"",
                "line": 89
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"ClimateControl: Manual air distribution change. Disabling AUTO mode.\"",
                "line": 103
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"ClimateControl: Windshield defrost selected. AC might be activated for dehumidification.\"",
                "line": 107
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"ClimateControl: Manual AC OFF request. Disabling AUTO mode.\"",
                "line": 121
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"ClimateControl: AUTO mode enabled. System will now manage fan, distribution, and AC.\"",
                "line": 151
            },
            {
                "callee_expression": "manageAutomaticOperation",
                "callee_args_str": "",
                "line": 152
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"ClimateControl: AUTO mode disabled. System reverts to last manual settings.\"",
                "line": 154
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"ClimateControl: Cannot activate AC. Engine is not running.\"",
                "line": 197
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"ClimateControl: Cannot activate AC. High engine load detected (e.g. full throttle).\"",
                "line": 201
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"ClimateControl: Exterior temperature (%.1fC) very low. AC compressor might not engage for cooling.\", current_exterior_temperature_celsius_",
                "line": 216
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"ClimateControl: AC Compressor ACTIVATED.\"",
                "line": 247
            },
            {
                "callee_expression": "power_monitor_->simulateHighLoadEvent",
                "callee_args_str": "true",
                "line": 248
            },
            {
                "callee_expression": "if",
                "callee_args_str": "power_monitor_) power_monitor_->simulateHighLoadEvent(true",
                "line": 248
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"ClimateControl: AC Compressor DEACTIVATED (no longer needed).\"",
                "line": 266
            },
            {
                "callee_expression": "power_monitor_->simulateHighLoadEvent",
                "callee_args_str": "false",
                "line": 267
            },
            {
                "callee_expression": "if",
                "callee_args_str": "power_monitor_) power_monitor_->simulateHighLoadEvent(false",
                "line": 267
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"ClimateControl: AUTO mode requesting AC ON.\"",
                "line": 344
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"ClimateControl: AUTO mode requesting AC OFF (heating phase).\"",
                "line": 351
            }
        ]
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::LOG_DEBUG",
        "raw_name": "LOG_DEBUG",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 64,
        "end_line": 453,
        "logs_in_order": [
            {
                "level": "DEBUG",
                "message_args_str": "\"ClimateControl: Target temperature already set to %.1fC or auto mode is off.\", celsius",
                "line": 65,
                "raw_log_statement": "LOG_DEBUG(\"ClimateControl: Target temperature already set to %.1fC or auto mode is off.\", celsius);"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"ClimateControl: Auto mode is ON. Temperature change may trigger recalculation of fan/distribution.\"",
                "line": 70,
                "raw_log_statement": "LOG_DEBUG(\"ClimateControl: Auto mode is ON. Temperature change may trigger recalculation of fan/distribution.\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"ClimateControl: Fan speed already at level %d.\", level",
                "line": 80,
                "raw_log_statement": "LOG_DEBUG(\"ClimateControl: Fan speed already at level %d.\", level);"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"ClimateControl: Air distribution already %s.\", airDistModeToString(mode)",
                "line": 99,
                "raw_log_statement": "LOG_DEBUG(\"ClimateControl: Air distribution already %s.\", airDistModeToString(mode));"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"ClimateControl: AC user request already %s.\", active ? \"ON\" : \"OFF\"",
                "line": 117,
                "raw_log_statement": "LOG_DEBUG(\"ClimateControl: AC user request already %s.\", active ? \"ON\" : \"OFF\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"ClimateControl: Recirculation already %s.\", active ? \"ON\" : \"OFF\"",
                "line": 132,
                "raw_log_statement": "LOG_DEBUG(\"ClimateControl: Recirculation already %s.\", active ? \"ON\" : \"OFF\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"ClimateControl: AUTO mode already %s.\", enabled ? \"ENABLED\" : \"DISABLED\"",
                "line": 147,
                "raw_log_statement": "LOG_DEBUG(\"ClimateControl: AUTO mode already %s.\", enabled ? \"ENABLED\" : \"DISABLED\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"ClimateControl: getCurrentInteriorTemp() -> %.1fC\", current_interior_temperature_celsius_",
                "line": 160,
                "raw_log_statement": "LOG_DEBUG(\"ClimateControl: getCurrentInteriorTemp() -> %.1fC\", current_interior_temperature_celsius_);"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"ClimateControl: getTargetTemperature() -> %.1fC\", target_temperature_celsius_",
                "line": 164,
                "raw_log_statement": "LOG_DEBUG(\"ClimateControl: getTargetTemperature() -> %.1fC\", target_temperature_celsius_);"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"ClimateControl: getFanSpeed() -> Level %d\", fan_speed_level_",
                "line": 168,
                "raw_log_statement": "LOG_DEBUG(\"ClimateControl: getFanSpeed() -> Level %d\", fan_speed_level_);"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"ClimateControl: getAirDistribution() -> %s\", airDistModeToString(current_air_distribution_)",
                "line": 172,
                "raw_log_statement": "LOG_DEBUG(\"ClimateControl: getAirDistribution() -> %s\", airDistModeToString(current_air_distribution_));"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"ClimateControl: getACCompressorStatus() -> %s\", acStatusToString(ac_compressor_status_)",
                "line": 182,
                "raw_log_statement": "LOG_DEBUG(\"ClimateControl: getACCompressorStatus() -> %s\", acStatusToString(ac_compressor_status_));"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"ClimateControl: isRecirculationActive() -> %s\", recirculation_active_ ? \"YES\" : \"NO\"",
                "line": 186,
                "raw_log_statement": "LOG_DEBUG(\"ClimateControl: isRecirculationActive() -> %s\", recirculation_active_ ? \"YES\" : \"NO\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"ClimateControl: isAutoModeEnabled() -> %s\", auto_mode_enabled_ ? \"YES\" : \"NO\"",
                "line": 190,
                "raw_log_statement": "LOG_DEBUG(\"ClimateControl: isAutoModeEnabled() -> %s\", auto_mode_enabled_ ? \"YES\" : \"NO\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"ClimateControl: Fan is off, ensuring air distribution is also OFF.\"",
                "line": 451,
                "raw_log_statement": "LOG_DEBUG(\"ClimateControl: Fan is off, ensuring air distribution is also OFF.\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"ClimateControl: Target temperature already set to %.1fC or auto mode is off.\", celsius",
                "line": 65
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"ClimateControl: Auto mode is ON. Temperature change may trigger recalculation of fan/distribution.\"",
                "line": 70
            },
            {
                "callee_expression": "manageAutomaticOperation",
                "callee_args_str": "",
                "line": 71
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"ClimateControl: Fan speed already at level %d.\", level",
                "line": 80
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"ClimateControl: Air distribution already %s.\", airDistModeToString(mode)",
                "line": 99
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"ClimateControl: AC user request already %s.\", active ? \"ON\" : \"OFF\"",
                "line": 117
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"ClimateControl: Recirculation already %s.\", active ? \"ON\" : \"OFF\"",
                "line": 132
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"ClimateControl: AUTO mode already %s.\", enabled ? \"ENABLED\" : \"DISABLED\"",
                "line": 147
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"ClimateControl: getCurrentInteriorTemp() -> %.1fC\", current_interior_temperature_celsius_",
                "line": 160
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"ClimateControl: getTargetTemperature() -> %.1fC\", target_temperature_celsius_",
                "line": 164
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"ClimateControl: getFanSpeed() -> Level %d\", fan_speed_level_",
                "line": 168
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"ClimateControl: getAirDistribution() -> %s\", airDistModeToString(current_air_distribution_)",
                "line": 172
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"ClimateControl: getACCompressorStatus() -> %s\", acStatusToString(ac_compressor_status_)",
                "line": 182
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"ClimateControl: isRecirculationActive() -> %s\", recirculation_active_ ? \"YES\" : \"NO\"",
                "line": 186
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"ClimateControl: isAutoModeEnabled() -> %s\", auto_mode_enabled_ ? \"YES\" : \"NO\"",
                "line": 190
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"ClimateControl: Fan is off, ensuring air distribution is also OFF.\"",
                "line": 451
            }
        ]
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::ClimateControl::setFanSpeed",
        "raw_name": "ClimateControl::setFanSpeed",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 74,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::ClimateControl::setAirDistribution",
        "raw_name": "ClimateControl::setAirDistribution",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 93,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::ClimateControl::setACActive",
        "raw_name": "ClimateControl::setACActive",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 111,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::ClimateControl::setRecirculationActive",
        "raw_name": "ClimateControl::setRecirculationActive",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 126,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::ClimateControl::setAutoMode",
        "raw_name": "ClimateControl::setAutoMode",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 141,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::ClimateControl::getCurrentInteriorTemp",
        "raw_name": "ClimateControl::getCurrentInteriorTemp",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 157,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::ClimateControl::getTargetTemperature",
        "raw_name": "ClimateControl::getTargetTemperature",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 162,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::ClimateControl::getFanSpeed",
        "raw_name": "ClimateControl::getFanSpeed",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 166,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::ClimateControl::getAirDistribution",
        "raw_name": "ClimateControl::getAirDistribution",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 170,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::ClimateControl::isACActive",
        "raw_name": "ClimateControl::isACActive",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 174,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::ClimateControl::getACCompressorStatus",
        "raw_name": "ClimateControl::getACCompressorStatus",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 180,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::ClimateControl::isRecirculationActive",
        "raw_name": "ClimateControl::isRecirculationActive",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 184,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::ClimateControl::isAutoModeEnabled",
        "raw_name": "ClimateControl::isAutoModeEnabled",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 188,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::ClimateControl::canActivateAC",
        "raw_name": "ClimateControl::canActivateAC",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 192,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::ClimateControl::controlACCompressor",
        "raw_name": "ClimateControl::controlACCompressor",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 220,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::LOG_ERROR",
        "raw_name": "LOG_ERROR",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 259,
        "end_line": 262,
        "logs_in_order": [
            {
                "level": "ERROR",
                "message_args_str": "\"ClimateControl: AC compressor denied %d consecutive times. Potential underlying issue or prolonged condition.\", ac_power_denial_counter_",
                "line": 260,
                "raw_log_statement": "LOG_ERROR(\"ClimateControl: AC compressor denied %d consecutive times. Potential underlying issue or prolonged condition.\", ac_power_denial_counter_);"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"ClimateControl: AC compressor denied %d consecutive times. Potential underlying issue or prolonged condition.\", ac_power_denial_counter_",
                "line": 260
            }
        ]
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::ClimateControl::adjustFanForTemperature",
        "raw_name": "ClimateControl::adjustFanForTemperature",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 277,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::ClimateControl::adjustAirDistributionForMode",
        "raw_name": "ClimateControl::adjustAirDistributionForMode",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 307,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::ClimateControl::manageAutomaticOperation",
        "raw_name": "ClimateControl::manageAutomaticOperation",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 328,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::adjustFanForTemperature",
        "raw_name": "adjustFanForTemperature",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 334,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::adjustAirDistributionForMode",
        "raw_name": "adjustAirDistributionForMode",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 336,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::ClimateControl::simulateTemperatureChange",
        "raw_name": "ClimateControl::simulateTemperatureChange",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 361,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::LOG_VERBOSE",
        "raw_name": "LOG_VERBOSE",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 373,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::gen",
        "raw_name": "gen",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 397,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::distr",
        "raw_name": "distr",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 398,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::manageAutomaticOperation",
        "raw_name": "manageAutomaticOperation",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 429,
        "end_line": 431,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "manageAutomaticOperation",
                "callee_args_str": "",
                "line": 430
            }
        ]
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::controlACCompressor",
        "raw_name": "controlACCompressor",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 433,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_calimate_control_cpp::simulateTemperatureChange",
        "raw_name": "simulateTemperatureChange",
        "file": "./ecu_body_control_module/calimate_control.cpp",
        "line": 439,
        "end_line": 447,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "simulateTemperatureChange",
                "callee_args_str": "",
                "line": 440
            }
        ]
    },
    {
        "signature": "ecu_body_control_module_window_control_cpp::windowPosToString",
        "raw_name": "windowPosToString",
        "file": "./ecu_body_control_module/window_control.cpp",
        "line": 10,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_cpp::switch",
        "raw_name": "switch",
        "file": "./ecu_body_control_module/window_control.cpp",
        "line": 11,
        "end_line": 33,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_cpp::windowIdToString",
        "raw_name": "windowIdToString",
        "file": "./ecu_body_control_module/window_control.cpp",
        "line": 23,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_cpp::power_monitor_",
        "raw_name": "power_monitor_",
        "file": "./ecu_body_control_module/window_control.cpp",
        "line": 36,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_cpp::LOG_INFO",
        "raw_name": "LOG_INFO",
        "file": "./ecu_body_control_module/window_control.cpp",
        "line": 38,
        "end_line": 202,
        "logs_in_order": [
            {
                "level": "INFO",
                "message_args_str": "\"WindowControl: Initializing...\"",
                "line": 39,
                "raw_log_statement": "LOG_INFO(\"WindowControl: Initializing...\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"WindowControl: Shutting down.\"",
                "line": 54,
                "raw_log_statement": "LOG_INFO(\"WindowControl: Shutting down.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"WindowControl: Operation for window %s denied by driver master lock.\", windowIdToString(window.id)",
                "line": 79,
                "raw_log_statement": "LOG_INFO(\"WindowControl: Operation for window %s denied by driver master lock.\", windowIdToString(window.id));"
            },
            {
                "level": "INFO",
                "message_args_str": "\"WindowControl: Request to STOP movement for window %s.\", windowIdToString(id)",
                "line": 162,
                "raw_log_statement": "LOG_INFO(\"WindowControl: Request to STOP movement for window %s.\", windowIdToString(id));"
            },
            {
                "level": "INFO",
                "message_args_str": "\"WindowControl: Driver master window lock set to %s.\", locked ? \"LOCKED\" : \"UNLOCKED\"",
                "line": 193,
                "raw_log_statement": "LOG_INFO(\"WindowControl: Driver master window lock set to %s.\", locked ? \"LOCKED\" : \"UNLOCKED\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"WindowControl: Stopping passenger window %s due to master lock activation.\", windowIdToString(win.id)",
                "line": 200,
                "raw_log_statement": "LOG_INFO(\"WindowControl: Stopping passenger window %s due to master lock activation.\", windowIdToString(win.id));"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"WindowControl: Initializing...\"",
                "line": 39
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"WindowControl: Shutting down.\"",
                "line": 54
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"WindowControl: Operation for window %s denied by driver master lock.\", windowIdToString(window.id)",
                "line": 79
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"WindowControl: Request to STOP movement for window %s.\", windowIdToString(id)",
                "line": 162
            },
            {
                "callee_expression": "findWindow",
                "callee_args_str": "id",
                "line": 163
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"WindowControl: Driver master window lock set to %s.\", locked ? \"LOCKED\" : \"UNLOCKED\"",
                "line": 193
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"WindowControl: Stopping passenger window %s due to master lock activation.\", windowIdToString(win.id)",
                "line": 200
            },
            {
                "callee_expression": "stopWindowMovement",
                "callee_args_str": "win.id",
                "line": 201
            }
        ]
    },
    {
        "signature": "ecu_body_control_module_window_control_cpp::if",
        "raw_name": "if",
        "file": "./ecu_body_control_module/window_control.cpp",
        "line": 39,
        "end_line": 320,
        "logs_in_order": [
            {
                "level": "DEBUG",
                "message_args_str": "\"WindowControl: Anti-pinch for %s modified state. Continuing update.\", windowIdToString(window.id)",
                "line": 318,
                "raw_log_statement": "LOG_DEBUG(\"WindowControl: Anti-pinch for %s modified state. Continuing update.\", windowIdToString(window.id));"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "windowIdToString",
                "callee_args_str": "window.id), windowPosToString(window.current_pos), windowPosToString(window.target_pos)",
                "line": 310
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"WindowControl: Anti-pinch for %s modified state. Continuing update.\", windowIdToString(window.id)",
                "line": 318
            }
        ]
    },
    {
        "signature": "ecu_body_control_module_window_control_cpp::LOG_WARNING",
        "raw_name": "LOG_WARNING",
        "file": "./ecu_body_control_module/window_control.cpp",
        "line": 40,
        "end_line": 240,
        "logs_in_order": [
            {
                "level": "WARNING",
                "message_args_str": "\"WindowControl: PowerMonitor service is NULL. Window operations might be affected by power availability.\"",
                "line": 41,
                "raw_log_statement": "LOG_WARNING(\"WindowControl: PowerMonitor service is NULL. Window operations might be affected by power availability.\");"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"WindowControl: Power system unstable. Window %s operation might be slow or denied.\", windowIdToString(window.id)",
                "line": 90,
                "raw_log_statement": "LOG_WARNING(\"WindowControl: Power system unstable. Window %s operation might be slow or denied.\", windowIdToString(window.id));"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"WindowControl: Move request for window %s denied by operational checks.\", windowIdToString(id)",
                "line": 130,
                "raw_log_statement": "LOG_WARNING(\"WindowControl: Move request for window %s denied by operational checks.\", windowIdToString(id));"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"WindowControl: ANTI-PINCH DETECTED for window %s! Reversing direction.\", windowIdToString(window.id)",
                "line": 225,
                "raw_log_statement": "LOG_WARNING(\"WindowControl: ANTI-PINCH DETECTED for window %s! Reversing direction.\", windowIdToString(window.id));"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"WindowControl: PowerMonitor service is NULL. Window operations might be affected by power availability.\"",
                "line": 41
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"WindowControl: Power system unstable. Window %s operation might be slow or denied.\", windowIdToString(window.id)",
                "line": 90
            },
            {
                "callee_expression": "power_monitor_->getBatteryVoltage",
                "callee_args_str": "), windowIdToString(window.id)",
                "line": 93
            },
            {
                "callee_expression": "getBatteryVoltage",
                "callee_args_str": "), windowIdToString(window.id)",
                "line": 93
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"WindowControl: Move request for window %s denied by operational checks.\", windowIdToString(id)",
                "line": 130
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"WindowControl: ANTI-PINCH DETECTED for window %s! Reversing direction.\", windowIdToString(window.id)",
                "line": 225
            },
            {
                "callee_expression": "windowIdToString",
                "callee_args_str": "window.id), window.obstruction_counter",
                "line": 235
            }
        ]
    },
    {
        "signature": "ecu_body_control_module_window_control_cpp::WindowControl::~WindowControl",
        "raw_name": "WindowControl::~WindowControl",
        "file": "./ecu_body_control_module/window_control.cpp",
        "line": 51,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_cpp::WindowControl::findWindow",
        "raw_name": "WindowControl::findWindow",
        "file": "./ecu_body_control_module/window_control.cpp",
        "line": 55,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_cpp::WindowControl::canOperateWindow",
        "raw_name": "WindowControl::canOperateWindow",
        "file": "./ecu_body_control_module/window_control.cpp",
        "line": 75,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_cpp::WindowControl::moveWindow",
        "raw_name": "WindowControl::moveWindow",
        "file": "./ecu_body_control_module/window_control.cpp",
        "line": 104,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_cpp::LOG_DEBUG",
        "raw_name": "LOG_DEBUG",
        "file": "./ecu_body_control_module/window_control.cpp",
        "line": 152,
        "end_line": 303,
        "logs_in_order": [
            {
                "level": "DEBUG",
                "message_args_str": "\"WindowControl: Non-one-touch for %s. Motor will stop if not periodically re-commanded (simulated).\", windowIdToString(id)",
                "line": 153,
                "raw_log_statement": "LOG_DEBUG(\"WindowControl: Non-one-touch for %s. Motor will stop if not periodically re-commanded (simulated).\", windowIdToString(id));"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"WindowControl: Window %s motor is not active. No action needed for stop.\", windowIdToString(id)",
                "line": 169,
                "raw_log_statement": "LOG_DEBUG(\"WindowControl: Window %s motor is not active. No action needed for stop.\", windowIdToString(id));"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"WindowControl: All passenger windows (except driver) are now locked from local operation.\"",
                "line": 196,
                "raw_log_statement": "LOG_DEBUG(\"WindowControl: All passenger windows (except driver) are now locked from local operation.\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"WindowControl: Position of window %s is %s.\", windowIdToString(id), windowPosToString(window->current_pos)",
                "line": 211,
                "raw_log_statement": "LOG_DEBUG(\"WindowControl: Position of window %s is %s.\", windowIdToString(id), windowPosToString(window->current_pos));"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"WindowControl: Updating all window states...\"",
                "line": 294,
                "raw_log_statement": "LOG_DEBUG(\"WindowControl: Updating all window states...\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"WindowControl: Signaled high power load to PowerMonitor due to active window motor(s).\"",
                "line": 301,
                "raw_log_statement": "LOG_INFO(\"WindowControl: Signaled high power load to PowerMonitor due to active window motor(s).\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"WindowControl: Non-one-touch for %s. Motor will stop if not periodically re-commanded (simulated).\", windowIdToString(id)",
                "line": 153
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"WindowControl: Window %s motor is not active. No action needed for stop.\", windowIdToString(id)",
                "line": 169
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"WindowControl: All passenger windows (except driver) are now locked from local operation.\"",
                "line": 196
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"WindowControl: Position of window %s is %s.\", windowIdToString(id), windowPosToString(window->current_pos)",
                "line": 211
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"WindowControl: Updating all window states...\"",
                "line": 294
            },
            {
                "callee_expression": "power_monitor_->simulateHighLoadEvent",
                "callee_args_str": "true",
                "line": 300
            },
            {
                "callee_expression": "simulateHighLoadEvent",
                "callee_args_str": "true",
                "line": 300
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"WindowControl: Signaled high power load to PowerMonitor due to active window motor(s).\"",
                "line": 301
            }
        ]
    },
    {
        "signature": "ecu_body_control_module_window_control_cpp::WindowControl::stopWindowMovement",
        "raw_name": "WindowControl::stopWindowMovement",
        "file": "./ecu_body_control_module/window_control.cpp",
        "line": 159,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_cpp::WindowControl::setChildLock",
        "raw_name": "WindowControl::setChildLock",
        "file": "./ecu_body_control_module/window_control.cpp",
        "line": 178,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_cpp::WindowControl::setAllWindowsLock",
        "raw_name": "WindowControl::setAllWindowsLock",
        "file": "./ecu_body_control_module/window_control.cpp",
        "line": 190,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_cpp::for",
        "raw_name": "for",
        "file": "./ecu_body_control_module/window_control.cpp",
        "line": 197,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_cpp::stopWindowMovement",
        "raw_name": "stopWindowMovement",
        "file": "./ecu_body_control_module/window_control.cpp",
        "line": 200,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_cpp::WindowControl::getWindowPosition",
        "raw_name": "WindowControl::getWindowPosition",
        "file": "./ecu_body_control_module/window_control.cpp",
        "line": 206,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_cpp::WindowControl::checkAntiPinch",
        "raw_name": "WindowControl::checkAntiPinch",
        "file": "./ecu_body_control_module/window_control.cpp",
        "line": 216,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_cpp::gen",
        "raw_name": "gen",
        "file": "./ecu_body_control_module/window_control.cpp",
        "line": 221,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_cpp::distrib",
        "raw_name": "distrib",
        "file": "./ecu_body_control_module/window_control.cpp",
        "line": 222,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_cpp::WindowControl::simulateMotorMovement",
        "raw_name": "WindowControl::simulateMotorMovement",
        "file": "./ecu_body_control_module/window_control.cpp",
        "line": 243,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_cpp::WindowControl::updateWindowStates",
        "raw_name": "WindowControl::updateWindowStates",
        "file": "./ecu_body_control_module/window_control.cpp",
        "line": 290,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_window_control_cpp::simulateMotorMovement",
        "raw_name": "simulateMotorMovement",
        "file": "./ecu_body_control_module/window_control.cpp",
        "line": 323,
        "end_line": 325,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "simulateMotorMovement",
                "callee_args_str": "window, 0.1",
                "line": 324
            }
        ]
    },
    {
        "signature": "ecu_body_control_module_lighting_control_cpp::is_right_indicator_active_",
        "raw_name": "is_right_indicator_active_",
        "file": "./ecu_body_control_module/lighting_control.cpp",
        "line": 12,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_lighting_control_cpp::LOG_INFO",
        "raw_name": "LOG_INFO",
        "file": "./ecu_body_control_module/lighting_control.cpp",
        "line": 14,
        "end_line": 324,
        "logs_in_order": [
            {
                "level": "INFO",
                "message_args_str": "\"LightingControl: Initializing...\"",
                "line": 15,
                "raw_log_statement": "LOG_INFO(\"LightingControl: Initializing...\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"LightingControl: Shutting down.\"",
                "line": 39,
                "raw_log_statement": "LOG_INFO(\"LightingControl: Shutting down.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"LightingControl: Low beams turned OFF while high beams were ON. Turning OFF high beams for safety.\"",
                "line": 110,
                "raw_log_statement": "LOG_INFO(\"LightingControl: Low beams turned OFF while high beams were ON. Turning OFF high beams for safety.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"LightingControl: Hazard lights are active. Ignoring individual indicator request for LightType %d.\", static_cast<int>(type)",
                "line": 122,
                "raw_log_statement": "LOG_INFO(\"LightingControl: Hazard lights are active. Ignoring individual indicator request for LightType %d.\", static_cast<int>(type));"
            },
            {
                "level": "INFO",
                "message_args_str": "\"LightingControl: Hazard lights requested to %s.\", activate ? \"ACTIVATE\" : \"DEACTIVATE\"",
                "line": 146,
                "raw_log_statement": "LOG_INFO(\"LightingControl: Hazard lights requested to %s.\", activate ? \"ACTIVATE\" : \"DEACTIVATE\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"LightingControl: Deactivating hazard sequence (both indicators OFF).\"",
                "line": 169,
                "raw_log_statement": "LOG_INFO(\"LightingControl: Deactivating hazard sequence (both indicators OFF).\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"LightingControl: Performing diagnostic bulb check sequence...\"",
                "line": 206,
                "raw_log_statement": "LOG_INFO(\"LightingControl: Performing diagnostic bulb check sequence...\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"LightingControl: Automatic Headlights: Turning ON low beams. Speed: %.1f km/h.\", vehicle_state.speed_kmh",
                "line": 260,
                "raw_log_statement": "LOG_INFO(\"LightingControl: Automatic Headlights: Turning ON low beams. Speed: %.1f km/h.\", vehicle_state.speed_kmh);"
            },
            {
                "level": "INFO",
                "message_args_str": "\"LightingControl: Significant deceleration detected (%.1f -> %.1f km/h). Activating brake lights.\", last_speed, vehicle_state.speed_kmh",
                "line": 288,
                "raw_log_statement": "LOG_INFO(\"LightingControl: Significant deceleration detected (%.1f -> %.1f km/h). Activating brake lights.\", last_speed, vehicle_state.speed_kmh);"
            },
            {
                "level": "INFO",
                "message_args_str": "\"LightingControl: Activating brake lights.\"",
                "line": 295,
                "raw_log_statement": "LOG_INFO(\"LightingControl: Activating brake lights.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"LightingControl: Deactivating brake lights (no braking condition detected).\"",
                "line": 303,
                "raw_log_statement": "LOG_INFO(\"LightingControl: Deactivating brake lights (no braking condition detected).\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"LightingControl: Dimming interior light due to unstable power (simulated).\"",
                "line": 322,
                "raw_log_statement": "LOG_INFO(\"LightingControl: Dimming interior light due to unstable power (simulated).\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"LightingControl: Initializing...\"",
                "line": 15
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"LightingControl: Shutting down.\"",
                "line": 39
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"LightingControl: Low beams turned OFF while high beams were ON. Turning OFF high beams for safety.\"",
                "line": 110
            },
            {
                "callee_expression": "setSpecificLight",
                "callee_args_str": "LightType::HEADLIGHT_HIGH, false",
                "line": 111
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"LightingControl: Hazard lights are active. Ignoring individual indicator request for LightType %d.\", static_cast<int>(type)",
                "line": 122
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"LightingControl: Hazard lights requested to %s.\", activate ? \"ACTIVATE\" : \"DEACTIVATE\"",
                "line": 146
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"LightingControl: Deactivating hazard sequence (both indicators OFF).\"",
                "line": 169
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"LightingControl: Performing diagnostic bulb check sequence...\"",
                "line": 206
            },
            {
                "callee_expression": "gen",
                "callee_args_str": "rd()",
                "line": 208
            },
            {
                "callee_expression": "distrib",
                "callee_args_str": "1, 100",
                "line": 209
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"LightingControl: Automatic Headlights: Turning ON low beams. Speed: %.1f km/h.\", vehicle_state.speed_kmh",
                "line": 260
            },
            {
                "callee_expression": "setSpecificLight",
                "callee_args_str": "LightType::HEADLIGHT_LOW, true",
                "line": 261
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"LightingControl: Significant deceleration detected (%.1f -> %.1f km/h). Activating brake lights.\", last_speed, vehicle_state.speed_kmh",
                "line": 288
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"LightingControl: Activating brake lights.\"",
                "line": 295
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"LightingControl: Deactivating brake lights (no braking condition detected).\"",
                "line": 303
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"LightingControl: Dimming interior light due to unstable power (simulated).\"",
                "line": 322
            }
        ]
    },
    {
        "signature": "ecu_body_control_module_lighting_control_cpp::if",
        "raw_name": "if",
        "file": "./ecu_body_control_module/lighting_control.cpp",
        "line": 15,
        "end_line": 293,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "if",
                "callee_args_str": "is_right_indicator_active_) setSpecificLight(LightType::INDICATOR_RIGHT, false",
                "line": 128
            },
            {
                "callee_expression": "if",
                "callee_args_str": "is_left_indicator_active_) setSpecificLight(LightType::INDICATOR_LEFT, false",
                "line": 132
            }
        ]
    },
    {
        "signature": "ecu_body_control_module_lighting_control_cpp::LOG_ERROR",
        "raw_name": "LOG_ERROR",
        "file": "./ecu_body_control_module/lighting_control.cpp",
        "line": 16,
        "end_line": 180,
        "logs_in_order": [
            {
                "level": "ERROR",
                "message_args_str": "\"LightingControl: PowerMonitor service is NULL! Lighting functions may be impaired.\"",
                "line": 17,
                "raw_log_statement": "LOG_ERROR(\"LightingControl: PowerMonitor service is NULL! Lighting functions may be impaired.\");"
            },
            {
                "level": "ERROR",
                "message_args_str": "\"LightingControl: Cannot set state for unknown LightType %d.\", static_cast<int>(type)",
                "line": 67,
                "raw_log_statement": "LOG_ERROR(\"LightingControl: Cannot set state for unknown LightType %d.\", static_cast<int>(type));"
            },
            {
                "level": "ERROR",
                "message_args_str": "\"LightingControl: CRITICAL: Battery too low (%.2fV) to activate LightType %d.\", power_monitor_->getBatteryVoltage(), static_cast<int>(type)",
                "line": 89,
                "raw_log_statement": "LOG_ERROR(\"LightingControl: CRITICAL: Battery too low (%.2fV) to activate LightType %d.\", power_monitor_->getBatteryVoltage(), static_cast<int>(type));"
            },
            {
                "level": "ERROR",
                "message_args_str": "\"LightingControl: Invalid LightType %d for indicator.\", static_cast<int>(indicator_type)",
                "line": 178,
                "raw_log_statement": "LOG_ERROR(\"LightingControl: Invalid LightType %d for indicator.\", static_cast<int>(indicator_type));"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"LightingControl: PowerMonitor service is NULL! Lighting functions may be impaired.\"",
                "line": 17
            },
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"LightingControl: Cannot set state for unknown LightType %d.\", static_cast<int>(type)",
                "line": 67
            },
            {
                "callee_expression": "power_monitor_->getBatteryVoltage",
                "callee_args_str": "), static_cast<int>(type)",
                "line": 89
            },
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"LightingControl: CRITICAL: Battery too low (%.2fV) to activate LightType %d.\", power_monitor_->getBatteryVoltage(), static_cast<int>(type)",
                "line": 89
            },
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"LightingControl: Invalid LightType %d for indicator.\", static_cast<int>(indicator_type)",
                "line": 178
            }
        ]
    },
    {
        "signature": "ecu_body_control_module_lighting_control_cpp::performBulbCheck",
        "raw_name": "performBulbCheck",
        "file": "./ecu_body_control_module/lighting_control.cpp",
        "line": 34,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_lighting_control_cpp::LightingControl::~LightingControl",
        "raw_name": "LightingControl::~LightingControl",
        "file": "./ecu_body_control_module/lighting_control.cpp",
        "line": 36,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_lighting_control_cpp::LightingControl::findBulb",
        "raw_name": "LightingControl::findBulb",
        "file": "./ecu_body_control_module/lighting_control.cpp",
        "line": 40,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_lighting_control_cpp::LOG_WARNING",
        "raw_name": "LOG_WARNING",
        "file": "./ecu_body_control_module/lighting_control.cpp",
        "line": 47,
        "end_line": 327,
        "logs_in_order": [
            {
                "level": "WARNING",
                "message_args_str": "\"LightingControl: Power system unstable. Deferring turning ON LightType %d.\", static_cast<int>(type)",
                "line": 86,
                "raw_log_statement": "LOG_WARNING(\"LightingControl: Power system unstable. Deferring turning ON LightType %d.\", static_cast<int>(type));"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"LightingControl: Auto Headlights: Low beam bulb faulty or not found. Cannot operate automatically.\"",
                "line": 252,
                "raw_log_statement": "LOG_WARNING(\"LightingControl: Auto Headlights: Low beam bulb faulty or not found. Cannot operate automatically.\");"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"LightingControl: Power system is UNSTABLE. Some lighting functions might be limited.\"",
                "line": 318,
                "raw_log_statement": "LOG_WARNING(\"LightingControl: Power system is UNSTABLE. Some lighting functions might be limited.\");"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"LightingControl: updateLighting: PowerMonitor not available. Assuming power is stable.\"",
                "line": 327,
                "raw_log_statement": "LOG_WARNING(\"LightingControl: updateLighting: PowerMonitor not available. Assuming power is stable.\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"LightingControl: Power system unstable. Deferring turning ON LightType %d.\", static_cast<int>(type)",
                "line": 86
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"LightingControl: Auto Headlights: Low beam bulb faulty or not found. Cannot operate automatically.\"",
                "line": 252
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"LightingControl: Power system is UNSTABLE. Some lighting functions might be limited.\"",
                "line": 318
            },
            {
                "callee_expression": "findBulb",
                "callee_args_str": "LightType::INTERIOR_DOME",
                "line": 320
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"LightingControl: updateLighting: PowerMonitor not available. Assuming power is stable.\"",
                "line": 327
            }
        ]
    },
    {
        "signature": "ecu_body_control_module_lighting_control_cpp::LightingControl::setSpecificLight",
        "raw_name": "LightingControl::setSpecificLight",
        "file": "./ecu_body_control_module/lighting_control.cpp",
        "line": 61,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_lighting_control_cpp::LOG_DEBUG",
        "raw_name": "LOG_DEBUG",
        "file": "./ecu_body_control_module/lighting_control.cpp",
        "line": 78,
        "end_line": 348,
        "logs_in_order": [
            {
                "level": "DEBUG",
                "message_args_str": "\"LightingControl: LightType %d already %s.\", static_cast<int>(type), on ? \"ON\" : \"OFF\"",
                "line": 79,
                "raw_log_statement": "LOG_DEBUG(\"LightingControl: LightType %d already %s.\", static_cast<int>(type), on ? \"ON\" : \"OFF\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"LightingControl: High beams activated, ensuring low beams are also ON.\"",
                "line": 102,
                "raw_log_statement": "LOG_DEBUG(\"LightingControl: High beams activated, ensuring low beams are also ON.\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"LightingControl: Request to set LightType %d to %s.\", static_cast<int>(type), on ? \"ON\" : \"OFF\"",
                "line": 118,
                "raw_log_statement": "LOG_DEBUG(\"LightingControl: Request to set LightType %d to %s.\", static_cast<int>(type), on ? \"ON\" : \"OFF\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"LightingControl: Hazard lights already in requested state (%s).\", activate ? \"ACTIVE\" : \"INACTIVE\"",
                "line": 148,
                "raw_log_statement": "LOG_DEBUG(\"LightingControl: Hazard lights already in requested state (%s).\", activate ? \"ACTIVE\" : \"INACTIVE\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"LightingControl: Status for LightType %d is %d.\", static_cast<int>(type), static_cast<int>(bulb->status)",
                "line": 198,
                "raw_log_statement": "LOG_DEBUG(\"LightingControl: Status for LightType %d is %d.\", static_cast<int>(type), static_cast<int>(bulb->status));"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"LightingControl: Bulb check OK for LightType %d (currently ON).\", static_cast<int>(bulb.type)",
                "line": 237,
                "raw_log_statement": "LOG_DEBUG(\"LightingControl: Bulb check OK for LightType %d (currently ON).\", static_cast<int>(bulb.type));"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"LightingControl: Periodic bulb check triggered during update cycle.\"",
                "line": 346,
                "raw_log_statement": "LOG_DEBUG(\"LightingControl: Periodic bulb check triggered during update cycle.\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"LightingControl: LightType %d already %s.\", static_cast<int>(type), on ? \"ON\" : \"OFF\"",
                "line": 79
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"LightingControl: High beams activated, ensuring low beams are also ON.\"",
                "line": 102
            },
            {
                "callee_expression": "setSpecificLight",
                "callee_args_str": "LightType::HEADLIGHT_LOW, true",
                "line": 103
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"LightingControl: Request to set LightType %d to %s.\", static_cast<int>(type), on ? \"ON\" : \"OFF\"",
                "line": 118
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"LightingControl: Hazard lights already in requested state (%s).\", activate ? \"ACTIVE\" : \"INACTIVE\"",
                "line": 148
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"LightingControl: Status for LightType %d is %d.\", static_cast<int>(type), static_cast<int>(bulb->status)",
                "line": 198
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"LightingControl: Bulb check OK for LightType %d (currently ON).\", static_cast<int>(bulb.type)",
                "line": 237
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"LightingControl: Periodic bulb check triggered during update cycle.\"",
                "line": 346
            },
            {
                "callee_expression": "performBulbCheck",
                "callee_args_str": "",
                "line": 347
            }
        ]
    },
    {
        "signature": "ecu_body_control_module_lighting_control_cpp::setSpecificLight",
        "raw_name": "setSpecificLight",
        "file": "./ecu_body_control_module/lighting_control.cpp",
        "line": 102,
        "end_line": 162,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "setSpecificLight",
                "callee_args_str": "LightType::INDICATOR_LEFT, false",
                "line": 156
            },
            {
                "callee_expression": "setSpecificLight",
                "callee_args_str": "LightType::INDICATOR_RIGHT, false",
                "line": 160
            }
        ]
    },
    {
        "signature": "ecu_body_control_module_lighting_control_cpp::LightingControl::setLightState",
        "raw_name": "LightingControl::setLightState",
        "file": "./ecu_body_control_module/lighting_control.cpp",
        "line": 114,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_lighting_control_cpp::LightingControl::activateHazardLights",
        "raw_name": "LightingControl::activateHazardLights",
        "file": "./ecu_body_control_module/lighting_control.cpp",
        "line": 143,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_lighting_control_cpp::LightingControl::activateIndicator",
        "raw_name": "LightingControl::activateIndicator",
        "file": "./ecu_body_control_module/lighting_control.cpp",
        "line": 174,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_lighting_control_cpp::setLightState",
        "raw_name": "setLightState",
        "file": "./ecu_body_control_module/lighting_control.cpp",
        "line": 189,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_lighting_control_cpp::LightingControl::getLightStatus",
        "raw_name": "LightingControl::getLightStatus",
        "file": "./ecu_body_control_module/lighting_control.cpp",
        "line": 192,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_lighting_control_cpp::LightingControl::performBulbCheck",
        "raw_name": "LightingControl::performBulbCheck",
        "file": "./ecu_body_control_module/lighting_control.cpp",
        "line": 203,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_lighting_control_cpp::gen",
        "raw_name": "gen",
        "file": "./ecu_body_control_module/lighting_control.cpp",
        "line": 207,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_lighting_control_cpp::distrib",
        "raw_name": "distrib",
        "file": "./ecu_body_control_module/lighting_control.cpp",
        "line": 208,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_lighting_control_cpp::for",
        "raw_name": "for",
        "file": "./ecu_body_control_module/lighting_control.cpp",
        "line": 209,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_lighting_control_cpp::LOG_VERBOSE",
        "raw_name": "LOG_VERBOSE",
        "file": "./ecu_body_control_module/lighting_control.cpp",
        "line": 234,
        "end_line": 268,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "LOG_VERBOSE",
                "callee_args_str": "\"LightingControl: Bulb check OK for LightType %d (currently OFF).\", static_cast<int>(bulb.type)",
                "line": 235
            },
            {
                "callee_expression": "LOG_VERBOSE",
                "callee_args_str": "\"LightingControl: Automatic Headlights: No change in low beam state required.\"",
                "line": 268
            }
        ]
    },
    {
        "signature": "ecu_body_control_module_lighting_control_cpp::LightingControl::handleAutomaticHeadlights",
        "raw_name": "LightingControl::handleAutomaticHeadlights",
        "file": "./ecu_body_control_module/lighting_control.cpp",
        "line": 242,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_lighting_control_cpp::LightingControl::checkBrakeLights",
        "raw_name": "LightingControl::checkBrakeLights",
        "file": "./ecu_body_control_module/lighting_control.cpp",
        "line": 270,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_lighting_control_cpp::LightingControl::updateLighting",
        "raw_name": "LightingControl::updateLighting",
        "file": "./ecu_body_control_module/lighting_control.cpp",
        "line": 307,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_lighting_control_cpp::handleAutomaticHeadlights",
        "raw_name": "handleAutomaticHeadlights",
        "file": "./ecu_body_control_module/lighting_control.cpp",
        "line": 332,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_body_control_module_lighting_control_cpp::checkBrakeLights",
        "raw_name": "checkBrakeLights",
        "file": "./ecu_body_control_module/lighting_control.cpp",
        "line": 336,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "common_logger_h::getCurrentTimestamp",
        "raw_name": "getCurrentTimestamp",
        "file": "./common/logger.h",
        "line": 10,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "common_logger_h::std::put_time",
        "raw_name": "std::put_time",
        "file": "./common/logger.h",
        "line": 14,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "common_logger_h::printf",
        "raw_name": "printf",
        "file": "./common/logger.h",
        "line": 27,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::current_brake_pedal_pressure_",
        "raw_name": "current_brake_pedal_pressure_",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 10,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::LOG_INFO",
        "raw_name": "LOG_INFO",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 12,
        "end_line": 373,
        "logs_in_order": [
            {
                "level": "INFO",
                "message_args_str": "\"MainVehicleController: Initializing...\"",
                "line": 13,
                "raw_log_statement": "LOG_INFO(\"MainVehicleController: Initializing...\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MainVehicleController: All core ECU instances created.\"",
                "line": 48,
                "raw_log_statement": "LOG_INFO(\"MainVehicleController: All core ECU instances created.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MainVehicleController: Shutting down...\"",
                "line": 52,
                "raw_log_statement": "LOG_INFO(\"MainVehicleController: Shutting down...\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MainVehicleController: Initializing all vehicle systems...\"",
                "line": 74,
                "raw_log_statement": "LOG_INFO(\"MainVehicleController: Initializing all vehicle systems...\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MainVehicleController: All vehicle systems initialized.\"",
                "line": 87,
                "raw_log_statement": "LOG_INFO(\"MainVehicleController: All vehicle systems initialized.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MainVehicleController: Starting main vehicle operation loop...\"",
                "line": 212,
                "raw_log_statement": "LOG_INFO(\"MainVehicleController: Starting main vehicle operation loop...\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MainVehicleController: Reached max simulation cycles for main loop.\"",
                "line": 249,
                "raw_log_statement": "LOG_INFO(\"MainVehicleController: Reached max simulation cycles for main loop.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MainVehicleController: Engine is running. Requesting engine stop.\"",
                "line": 281,
                "raw_log_statement": "LOG_INFO(\"MainVehicleController: Engine is running. Requesting engine stop.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MainVehicleController: Starting SIMULATED DRIVING CYCLE.\"",
                "line": 294,
                "raw_log_statement": "LOG_INFO(\"MainVehicleController: Starting SIMULATED DRIVING CYCLE.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MainVehicleController: DRIVING_CYCLE: Engine started.\"",
                "line": 307,
                "raw_log_statement": "LOG_INFO(\"MainVehicleController: DRIVING_CYCLE: Engine started.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MainVehicleController: DRIVING_CYCLE: Setting transmission to DRIVE.\"",
                "line": 311,
                "raw_log_statement": "LOG_INFO(\"MainVehicleController: DRIVING_CYCLE: Setting transmission to DRIVE.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MainVehicleController: DRIVING_CYCLE: Crash event processed. System may be in post-crash mode.\"",
                "line": 338,
                "raw_log_statement": "LOG_INFO(\"MainVehicleController: DRIVING_CYCLE: Crash event processed. System may be in post-crash mode.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MainVehicleController: DRIVING_CYCLE: Setting transmission to PARK.\"",
                "line": 350,
                "raw_log_statement": "LOG_INFO(\"MainVehicleController: DRIVING_CYCLE: Setting transmission to PARK.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MainVehicleController: Explicitly shutting down all ECU functionalities if applicable...\"",
                "line": 366,
                "raw_log_statement": "LOG_INFO(\"MainVehicleController: Explicitly shutting down all ECU functionalities if applicable...\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"MainVehicleController: System shutdown commands issued.\"",
                "line": 372,
                "raw_log_statement": "LOG_DEBUG(\"MainVehicleController: System shutdown commands issued.\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MainVehicleController: Initializing...\"",
                "line": 13
            },
            {
                "callee_expression": "ecu_power_management::PowerMonitor",
                "callee_args_str": "",
                "line": 17
            },
            {
                "callee_expression": "ecu_powertrain_control::EngineManager",
                "callee_args_str": "",
                "line": 20
            },
            {
                "callee_expression": "ecu_powertrain_control::TransmissionManager",
                "callee_args_str": "engine_manager_",
                "line": 25
            },
            {
                "callee_expression": "ecu_body_control_module::ClimateControl",
                "callee_args_str": "power_monitor_",
                "line": 29
            },
            {
                "callee_expression": "ecu_body_control_module::LightingControl",
                "callee_args_str": "power_monitor_",
                "line": 30
            },
            {
                "callee_expression": "ecu_body_control_module::WindowControl",
                "callee_args_str": "power_monitor_",
                "line": 31
            },
            {
                "callee_expression": "ecu_infotainment::MediaPlayer",
                "callee_args_str": "",
                "line": 34
            },
            {
                "callee_expression": "ecu_infotainment::NavigationSystem",
                "callee_args_str": "",
                "line": 35
            },
            {
                "callee_expression": "ecu_safety_systems::ABSControl",
                "callee_args_str": "/* no brake actuator for now */",
                "line": 38
            },
            {
                "callee_expression": "ecu_safety_systems::AirbagControl",
                "callee_args_str": "",
                "line": 39
            },
            {
                "callee_expression": "current_wheel_speed_sensors_.resize",
                "callee_args_str": "4",
                "line": 43
            },
            {
                "callee_expression": "resize",
                "callee_args_str": "4",
                "line": 43
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MainVehicleController: All core ECU instances created.\"",
                "line": 48
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MainVehicleController: Shutting down...\"",
                "line": 52
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MainVehicleController: Initializing all vehicle systems...\"",
                "line": 74
            },
            {
                "callee_expression": "abs_control_->runDiagnostics",
                "callee_args_str": "",
                "line": 83
            },
            {
                "callee_expression": "if",
                "callee_args_str": "abs_control_) abs_control_->runDiagnostics(",
                "line": 83
            },
            {
                "callee_expression": "airbag_control_->runSystemCheck",
                "callee_args_str": "",
                "line": 84
            },
            {
                "callee_expression": "if",
                "callee_args_str": "airbag_control_) airbag_control_->runSystemCheck(",
                "line": 84
            },
            {
                "callee_expression": "std::this_thread::sleep_for",
                "callee_args_str": "std::chrono::milliseconds(100)",
                "line": 86
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MainVehicleController: All vehicle systems initialized.\"",
                "line": 87
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MainVehicleController: Starting main vehicle operation loop...\"",
                "line": 212
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MainVehicleController: Reached max simulation cycles for main loop.\"",
                "line": 249
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MainVehicleController: Engine is running. Requesting engine stop.\"",
                "line": 281
            },
            {
                "callee_expression": "engine_manager_->stopEngine",
                "callee_args_str": "",
                "line": 282
            },
            {
                "callee_expression": "stopEngine",
                "callee_args_str": "",
                "line": 282
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MainVehicleController: Starting SIMULATED DRIVING CYCLE.\"",
                "line": 294
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MainVehicleController: DRIVING_CYCLE: Engine started.\"",
                "line": 307
            },
            {
                "callee_expression": "std::this_thread::sleep_for",
                "callee_args_str": "std::chrono::seconds(1)",
                "line": 308
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MainVehicleController: DRIVING_CYCLE: Setting transmission to DRIVE.\"",
                "line": 311
            },
            {
                "callee_expression": "transmission_manager_->setTransmissionMode",
                "callee_args_str": "ecu_powertrain_control::TransmissionMode::DRIVE",
                "line": 312
            },
            {
                "callee_expression": "setTransmissionMode",
                "callee_args_str": "ecu_powertrain_control::TransmissionMode::DRIVE",
                "line": 312
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MainVehicleController: DRIVING_CYCLE: Crash event processed. System may be in post-crash mode.\"",
                "line": 338
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MainVehicleController: DRIVING_CYCLE: Setting transmission to PARK.\"",
                "line": 350
            },
            {
                "callee_expression": "transmission_manager_->setTransmissionMode",
                "callee_args_str": "ecu_powertrain_control::TransmissionMode::PARK",
                "line": 351
            },
            {
                "callee_expression": "setTransmissionMode",
                "callee_args_str": "ecu_powertrain_control::TransmissionMode::PARK",
                "line": 351
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MainVehicleController: Explicitly shutting down all ECU functionalities if applicable...\"",
                "line": 366
            },
            {
                "callee_expression": "media_player_->stop",
                "callee_args_str": "",
                "line": 370
            },
            {
                "callee_expression": "if",
                "callee_args_str": "media_player_) media_player_->stop(",
                "line": 370
            },
            {
                "callee_expression": "navigation_system_->saveCurrentSettings",
                "callee_args_str": "",
                "line": 371
            },
            {
                "callee_expression": "if",
                "callee_args_str": "navigation_system_) navigation_system_->saveCurrentSettings(",
                "line": 371
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"MainVehicleController: System shutdown commands issued.\"",
                "line": 372
            }
        ]
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::ecu_power_management::PowerMonitor",
        "raw_name": "ecu_power_management::PowerMonitor",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 17,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::ecu_powertrain_control::EngineManager",
        "raw_name": "ecu_powertrain_control::EngineManager",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 20,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::ecu_powertrain_control::TransmissionManager",
        "raw_name": "ecu_powertrain_control::TransmissionManager",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 25,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::ecu_body_control_module::ClimateControl",
        "raw_name": "ecu_body_control_module::ClimateControl",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 29,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::ecu_body_control_module::LightingControl",
        "raw_name": "ecu_body_control_module::LightingControl",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 30,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::ecu_body_control_module::WindowControl",
        "raw_name": "ecu_body_control_module::WindowControl",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 31,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::ecu_infotainment::MediaPlayer",
        "raw_name": "ecu_infotainment::MediaPlayer",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 34,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::ecu_infotainment::NavigationSystem",
        "raw_name": "ecu_infotainment::NavigationSystem",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 35,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::ecu_safety_systems::ABSControl",
        "raw_name": "ecu_safety_systems::ABSControl",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 38,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::ecu_safety_systems::AirbagControl",
        "raw_name": "ecu_safety_systems::AirbagControl",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 39,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::for",
        "raw_name": "for",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 43,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::MainVehicleController::~MainVehicleController",
        "raw_name": "MainVehicleController::~MainVehicleController",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 49,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::if",
        "raw_name": "if",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 52,
        "end_line": 193,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::handleIgnitionOff",
        "raw_name": "handleIgnitionOff",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 53,
        "end_line": 55,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "handleIgnitionOff",
                "callee_args_str": "",
                "line": 54
            }
        ]
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::shutdownAllSystems",
        "raw_name": "shutdownAllSystems",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 55,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::MainVehicleController::initializeAllSystems",
        "raw_name": "MainVehicleController::initializeAllSystems",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 71,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::std::this_thread::sleep_for",
        "raw_name": "std::this_thread::sleep_for",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 84,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::MainVehicleController::updateVehicleStateInputs",
        "raw_name": "MainVehicleController::updateVehicleStateInputs",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 88,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::LOG_VERBOSE",
        "raw_name": "LOG_VERBOSE",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 90,
        "end_line": 98,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "LOG_VERBOSE",
                "callee_args_str": "\"MainVehicleController: Updating simulated vehicle state inputs...\"",
                "line": 91
            },
            {
                "callee_expression": "engine_manager_->getEngineState",
                "callee_args_str": "",
                "line": 95
            },
            {
                "callee_expression": "getEngineState",
                "callee_args_str": "",
                "line": 95
            }
        ]
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::gen",
        "raw_name": "gen",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 118,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::speed_noise",
        "raw_name": "speed_noise",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 119,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::g_noise",
        "raw_name": "g_noise",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 126,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::MainVehicleController::periodicECUUpdates",
        "raw_name": "MainVehicleController::periodicECUUpdates",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 144,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::LOG_DEBUG",
        "raw_name": "LOG_DEBUG",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 147,
        "end_line": 188,
        "logs_in_order": [
            {
                "level": "DEBUG",
                "message_args_str": "\"MainVehicleController: Performing periodic ECU updates...\"",
                "line": 148,
                "raw_log_statement": "LOG_DEBUG(\"MainVehicleController: Performing periodic ECU updates...\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"MainVehicleController: Periodic ECU updates complete.\"",
                "line": 182,
                "raw_log_statement": "LOG_DEBUG(\"MainVehicleController: Periodic ECU updates complete.\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"MainVehicleController: Performing periodic system health checks...\"",
                "line": 186,
                "raw_log_statement": "LOG_DEBUG(\"MainVehicleController: Performing periodic system health checks...\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"MainVehicleController: Performing periodic ECU updates...\"",
                "line": 148
            },
            {
                "callee_expression": "power_monitor_->updatePowerStatus",
                "callee_args_str": "",
                "line": 150
            },
            {
                "callee_expression": "if",
                "callee_args_str": "power_monitor_) power_monitor_->updatePowerStatus(",
                "line": 150
            },
            {
                "callee_expression": "engine_manager_->updateEngineParameters",
                "callee_args_str": "",
                "line": 153
            },
            {
                "callee_expression": "if",
                "callee_args_str": "engine_manager_) engine_manager_->updateEngineParameters(",
                "line": 153
            },
            {
                "callee_expression": "transmission_manager_->updateState",
                "callee_args_str": "current_vehicle_state_, engine_manager_->getCurrentRPM()",
                "line": 155
            },
            {
                "callee_expression": "updateState",
                "callee_args_str": "current_vehicle_state_, engine_manager_->getCurrentRPM()",
                "line": 155
            },
            {
                "callee_expression": "climate_control_->updateClimateState",
                "callee_args_str": "current_vehicle_state_, int_temp, ext_temp",
                "line": 162
            },
            {
                "callee_expression": "updateClimateState",
                "callee_args_str": "current_vehicle_state_, int_temp, ext_temp",
                "line": 162
            },
            {
                "callee_expression": "lighting_control_->updateLighting",
                "callee_args_str": "current_vehicle_state_",
                "line": 164
            },
            {
                "callee_expression": "if",
                "callee_args_str": "lighting_control_) lighting_control_->updateLighting(current_vehicle_state_",
                "line": 164
            },
            {
                "callee_expression": "window_control_->updateWindowStates",
                "callee_args_str": "",
                "line": 165
            },
            {
                "callee_expression": "if",
                "callee_args_str": "window_control_) window_control_->updateWindowStates(",
                "line": 165
            },
            {
                "callee_expression": "media_player_->updatePlaybackState",
                "callee_args_str": "",
                "line": 168
            },
            {
                "callee_expression": "if",
                "callee_args_str": "media_player_) media_player_->updatePlaybackState(",
                "line": 168
            },
            {
                "callee_expression": "navigation_system_->updateNavigationState",
                "callee_args_str": "current_vehicle_state_",
                "line": 169
            },
            {
                "callee_expression": "if",
                "callee_args_str": "navigation_system_) navigation_system_->updateNavigationState(current_vehicle_state_",
                "line": 169
            },
            {
                "callee_expression": "abs_control_->processBraking",
                "callee_args_str": "current_vehicle_state_, current_wheel_speed_sensors_, current_brake_pedal_pressure_",
                "line": 173
            },
            {
                "callee_expression": "processBraking",
                "callee_args_str": "current_vehicle_state_, current_wheel_speed_sensors_, current_brake_pedal_pressure_",
                "line": 173
            },
            {
                "callee_expression": "airbag_control_->processImpactData",
                "callee_args_str": "current_crash_sensors_input_, current_vehicle_state_",
                "line": 180
            },
            {
                "callee_expression": "processImpactData",
                "callee_args_str": "current_crash_sensors_input_, current_vehicle_state_",
                "line": 180
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"MainVehicleController: Periodic ECU updates complete.\"",
                "line": 182
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"MainVehicleController: Performing periodic system health checks...\"",
                "line": 186
            }
        ]
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::MainVehicleController::checkSystemHealth",
        "raw_name": "MainVehicleController::checkSystemHealth",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 183,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::LOG_WARNING",
        "raw_name": "LOG_WARNING",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 189,
        "end_line": 298,
        "logs_in_order": [
            {
                "level": "WARNING",
                "message_args_str": "\"MainVehicleController: Health Check: Engine is off but reported FAULT while ignition is ON.\"",
                "line": 190,
                "raw_log_statement": "LOG_WARNING(\"MainVehicleController: Health Check: Engine is off but reported FAULT while ignition is ON.\");"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"MainVehicleController: Health Check: ABS System reports FAULT_DETECTED.\"",
                "line": 195,
                "raw_log_statement": "LOG_WARNING(\"MainVehicleController: Health Check: ABS System reports FAULT_DETECTED.\");"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"MainVehicleController: Health Check: Airbag System reports FAULT (%s).\", ecu_safety_systems::airbagSysStateToString(airbag_state)",
                "line": 203,
                "raw_log_statement": "LOG_WARNING(\"MainVehicleController: Health Check: Airbag System reports FAULT (%s).\", ecu_safety_systems::airbagSysStateToString(airbag_state));"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"MainVehicleController: Cannot run main loop. Ignition is OFF.\"",
                "line": 214,
                "raw_log_statement": "LOG_WARNING(\"MainVehicleController: Cannot run main loop. Ignition is OFF.\");"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"MainVehicleController: Cannot start driving cycle, ignition is OFF. Turning ignition ON.\"",
                "line": 296,
                "raw_log_statement": "LOG_WARNING(\"MainVehicleController: Cannot start driving cycle, ignition is OFF. Turning ignition ON.\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"MainVehicleController: Health Check: Engine is off but reported FAULT while ignition is ON.\"",
                "line": 190
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"MainVehicleController: Health Check: ABS System reports FAULT_DETECTED.\"",
                "line": 195
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"MainVehicleController: Health Check: Airbag System reports FAULT (%s).\", ecu_safety_systems::airbagSysStateToString(airbag_state)",
                "line": 203
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"MainVehicleController: Cannot run main loop. Ignition is OFF.\"",
                "line": 214
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"MainVehicleController: Cannot start driving cycle, ignition is OFF. Turning ignition ON.\"",
                "line": 296
            },
            {
                "callee_expression": "handleIgnitionOn",
                "callee_args_str": "",
                "line": 297
            }
        ]
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::MainVehicleController::runMainLoop",
        "raw_name": "MainVehicleController::runMainLoop",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 208,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::while",
        "raw_name": "while",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 221,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::updateVehicleStateInputs",
        "raw_name": "updateVehicleStateInputs",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 229,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::periodicECUUpdates",
        "raw_name": "periodicECUUpdates",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 232,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::checkSystemHealth",
        "raw_name": "checkSystemHealth",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 236,
        "end_line": 238,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "checkSystemHealth",
                "callee_args_str": "",
                "line": 237
            }
        ]
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::MainVehicleController::handleIgnitionOn",
        "raw_name": "MainVehicleController::handleIgnitionOn",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 252,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::LOG_FATAL",
        "raw_name": "LOG_FATAL",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 254,
        "end_line": 279,
        "logs_in_order": [
            {
                "level": "FATAL",
                "message_args_str": "\"MainVehicleController: IGNITION ON sequence started.\"",
                "line": 255,
                "raw_log_statement": "LOG_FATAL(\"MainVehicleController: IGNITION ON sequence started.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MainVehicleController: Ignition ON sequence complete. Vehicle systems ready.\"",
                "line": 272,
                "raw_log_statement": "LOG_INFO(\"MainVehicleController: Ignition ON sequence complete. Vehicle systems ready.\");"
            },
            {
                "level": "FATAL",
                "message_args_str": "\"MainVehicleController: IGNITION OFF sequence started.\"",
                "line": 276,
                "raw_log_statement": "LOG_FATAL(\"MainVehicleController: IGNITION OFF sequence started.\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_FATAL",
                "callee_args_str": "\"MainVehicleController: IGNITION ON sequence started.\"",
                "line": 255
            },
            {
                "callee_expression": "power_monitor_->updatePowerStatus",
                "callee_args_str": "",
                "line": 258
            },
            {
                "callee_expression": "if",
                "callee_args_str": "power_monitor_) power_monitor_->updatePowerStatus(",
                "line": 258
            },
            {
                "callee_expression": "engine_manager_->primeFuelPump",
                "callee_args_str": "",
                "line": 262
            },
            {
                "callee_expression": "primeFuelPump",
                "callee_args_str": "",
                "line": 262
            },
            {
                "callee_expression": "airbag_control_->runSystemCheck",
                "callee_args_str": "",
                "line": 264
            },
            {
                "callee_expression": "if",
                "callee_args_str": "airbag_control_) airbag_control_->runSystemCheck(",
                "line": 264
            },
            {
                "callee_expression": "abs_control_->runDiagnostics",
                "callee_args_str": "",
                "line": 265
            },
            {
                "callee_expression": "if",
                "callee_args_str": "abs_control_) abs_control_->runDiagnostics(",
                "line": 265
            },
            {
                "callee_expression": "media_player_->selectSource",
                "callee_args_str": "ecu_infotainment::MediaSource::RADIO_FM",
                "line": 268
            },
            {
                "callee_expression": "if",
                "callee_args_str": "media_player_) media_player_->selectSource(ecu_infotainment::MediaSource::RADIO_FM",
                "line": 268
            },
            {
                "callee_expression": "climate_control_->setAutoMode",
                "callee_args_str": "true",
                "line": 269
            },
            {
                "callee_expression": "if",
                "callee_args_str": "climate_control_) climate_control_->setAutoMode(true",
                "line": 269
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MainVehicleController: Ignition ON sequence complete. Vehicle systems ready.\"",
                "line": 272
            },
            {
                "callee_expression": "LOG_FATAL",
                "callee_args_str": "\"MainVehicleController: IGNITION OFF sequence started.\"",
                "line": 276
            }
        ]
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::MainVehicleController::handleIgnitionOff",
        "raw_name": "MainVehicleController::handleIgnitionOff",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 273,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::MainVehicleController::simulateDrivingCycle",
        "raw_name": "MainVehicleController::simulateDrivingCycle",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 291,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::handleIgnitionOn",
        "raw_name": "handleIgnitionOn",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 296,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::LOG_ERROR",
        "raw_name": "LOG_ERROR",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 299,
        "end_line": 357,
        "logs_in_order": [
            {
                "level": "ERROR",
                "message_args_str": "\"MainVehicleController: EngineManager not available. Cannot simulate driving cycle.\"",
                "line": 300,
                "raw_log_statement": "LOG_ERROR(\"MainVehicleController: EngineManager not available. Cannot simulate driving cycle.\");"
            },
            {
                "level": "ERROR",
                "message_args_str": "\"MainVehicleController: DRIVING_CYCLE: Engine failed to start. Aborting cycle.\"",
                "line": 357,
                "raw_log_statement": "LOG_ERROR(\"MainVehicleController: DRIVING_CYCLE: Engine failed to start. Aborting cycle.\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"MainVehicleController: EngineManager not available. Cannot simulate driving cycle.\"",
                "line": 300
            },
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"MainVehicleController: DRIVING_CYCLE: Engine failed to start. Aborting cycle.\"",
                "line": 357
            }
        ]
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::runMainLoop",
        "raw_name": "runMainLoop",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 318,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_cpp::MainVehicleController::shutdownAllSystems",
        "raw_name": "MainVehicleController::shutdownAllSystems",
        "file": "./main_application/main_vehicle_controller.cpp",
        "line": 362,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_cpp::main",
        "raw_name": "main",
        "file": "./main_application/main.cpp",
        "line": 6,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_cpp::LOG_INFO",
        "raw_name": "LOG_INFO",
        "file": "./main_application/main.cpp",
        "line": 12,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_h::MainVehicleController",
        "raw_name": "MainVehicleController",
        "file": "./main_application/main_vehicle_controller.h",
        "line": 33,
        "end_line": 85,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "MainVehicleController",
                "callee_args_str": "",
                "line": 35
            },
            {
                "callee_expression": "MainVehicleController",
                "callee_args_str": "",
                "line": 36
            },
            {
                "callee_expression": "initializeAllSystems",
                "callee_args_str": "",
                "line": 38
            },
            {
                "callee_expression": "runMainLoop",
                "callee_args_str": "",
                "line": 39
            },
            {
                "callee_expression": "shutdownAllSystems",
                "callee_args_str": "",
                "line": 40
            },
            {
                "callee_expression": "handleIgnitionOn",
                "callee_args_str": "",
                "line": 43
            },
            {
                "callee_expression": "handleIgnitionOff",
                "callee_args_str": "",
                "line": 44
            },
            {
                "callee_expression": "simulateDrivingCycle",
                "callee_args_str": "",
                "line": 45
            },
            {
                "callee_expression": "updateVehicleStateInputs",
                "callee_args_str": "",
                "line": 82
            },
            {
                "callee_expression": "periodicECUUpdates",
                "callee_args_str": "",
                "line": 83
            },
            {
                "callee_expression": "checkSystemHealth",
                "callee_args_str": "",
                "line": 84
            }
        ]
    },
    {
        "signature": "main_application_main_vehicle_controller_h::~MainVehicleController",
        "raw_name": "~MainVehicleController",
        "file": "./main_application/main_vehicle_controller.h",
        "line": 35,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_h::initializeAllSystems",
        "raw_name": "initializeAllSystems",
        "file": "./main_application/main_vehicle_controller.h",
        "line": 36,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_h::runMainLoop",
        "raw_name": "runMainLoop",
        "file": "./main_application/main_vehicle_controller.h",
        "line": 38,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_h::shutdownAllSystems",
        "raw_name": "shutdownAllSystems",
        "file": "./main_application/main_vehicle_controller.h",
        "line": 39,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_h::handleIgnitionOn",
        "raw_name": "handleIgnitionOn",
        "file": "./main_application/main_vehicle_controller.h",
        "line": 42,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_h::handleIgnitionOff",
        "raw_name": "handleIgnitionOff",
        "file": "./main_application/main_vehicle_controller.h",
        "line": 43,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_h::simulateDrivingCycle",
        "raw_name": "simulateDrivingCycle",
        "file": "./main_application/main_vehicle_controller.h",
        "line": 44,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_h::updateVehicleStateInputs",
        "raw_name": "updateVehicleStateInputs",
        "file": "./main_application/main_vehicle_controller.h",
        "line": 81,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_h::periodicECUUpdates",
        "raw_name": "periodicECUUpdates",
        "file": "./main_application/main_vehicle_controller.h",
        "line": 82,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "main_application_main_vehicle_controller_h::checkSystemHealth",
        "raw_name": "checkSystemHealth",
        "file": "./main_application/main_vehicle_controller.h",
        "line": 83,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::gpsStatusToString",
        "raw_name": "gpsStatusToString",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 9,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::switch",
        "raw_name": "switch",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 10,
        "end_line": 33,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::navStatusToString",
        "raw_name": "navStatusToString",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 21,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::initial_eta_seconds_",
        "raw_name": "initial_eta_seconds_",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 40,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::LOG_INFO",
        "raw_name": "LOG_INFO",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 42,
        "end_line": 376,
        "logs_in_order": [
            {
                "level": "INFO",
                "message_args_str": "\"NavigationSystem: Initializing...\"",
                "line": 43,
                "raw_log_statement": "LOG_INFO(\"NavigationSystem: Initializing...\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"NavigationSystem: Map data loaded successfully.\"",
                "line": 52,
                "raw_log_statement": "LOG_INFO(\"NavigationSystem: Map data loaded successfully.\");"
            },
            {
                "level": "ERROR",
                "message_args_str": "\"NavigationSystem: Failed to load map data! Navigation will be unavailable.\"",
                "line": 55,
                "raw_log_statement": "LOG_ERROR(\"NavigationSystem: Failed to load map data! Navigation will be unavailable.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"NavigationSystem: Looking up address: '%s' (simulated).\", address.c_str()",
                "line": 117,
                "raw_log_statement": "LOG_INFO(\"NavigationSystem: Looking up address: '%s' (simulated).\", address.c_str());"
            },
            {
                "level": "INFO",
                "message_args_str": "\"NavigationSystem: Set destination by address request: '%s'.\", address.c_str()",
                "line": 154,
                "raw_log_statement": "LOG_INFO(\"NavigationSystem: Set destination by address request: '%s'.\", address.c_str());"
            },
            {
                "level": "INFO",
                "message_args_str": "\"NavigationSystem: Cancel navigation request.\"",
                "line": 164,
                "raw_log_statement": "LOG_INFO(\"NavigationSystem: Cancel navigation request.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"NavigationSystem: Already at destination '%s'. No route calculated.\", destination_name_.c_str()",
                "line": 197,
                "raw_log_statement": "LOG_INFO(\"NavigationSystem: Already at destination '%s'. No route calculated.\", destination_name_.c_str());"
            },
            {
                "level": "INFO",
                "message_args_str": "\"NavigationSystem: Approaching maneuver for segment: '%s'.\", current_segment.instruction.c_str()",
                "line": 244,
                "raw_log_statement": "LOG_INFO(\"NavigationSystem: Approaching maneuver for segment: '%s'.\", current_segment.instruction.c_str());"
            },
            {
                "level": "INFO",
                "message_args_str": "\"NavigationSystem: Maneuver '%s' completed.\", current_segment.instruction.c_str()",
                "line": 299,
                "raw_log_statement": "LOG_INFO(\"NavigationSystem: Maneuver '%s' completed.\", current_segment.instruction.c_str());"
            },
            {
                "level": "INFO",
                "message_args_str": "\"NavigationSystem: DESTINATION '%s' REACHED!\", destination_name_.c_str()",
                "line": 302,
                "raw_log_statement": "LOG_INFO(\"NavigationSystem: DESTINATION '%s' REACHED!\", destination_name_.c_str());"
            },
            {
                "level": "INFO",
                "message_args_str": "\"NavigationSystem: Proceeding to next segment: '%s'.\", current_route_[current_route_segment_index_].instruction.c_str()",
                "line": 307,
                "raw_log_statement": "LOG_INFO(\"NavigationSystem: Proceeding to next segment: '%s'.\", current_route_[current_route_segment_index_].instruction.c_str());"
            },
            {
                "level": "INFO",
                "message_args_str": "\"NavigationSystem: Attempting to recalculate route due to off-route condition.\"",
                "line": 355,
                "raw_log_statement": "LOG_INFO(\"NavigationSystem: Attempting to recalculate route due to off-route condition.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"NavigationSystem: Route successfully recalculated.\"",
                "line": 357,
                "raw_log_statement": "LOG_INFO(\"NavigationSystem: Route successfully recalculated.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"NavigationSystem: Destination reached for some time. Clearing route.\"",
                "line": 373,
                "raw_log_statement": "LOG_INFO(\"NavigationSystem: Destination reached for some time. Clearing route.\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"NavigationSystem: Initializing...\"",
                "line": 43
            },
            {
                "callee_expression": "gen",
                "callee_args_str": "rd()",
                "line": 49
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"NavigationSystem: Map data loaded successfully.\"",
                "line": 52
            },
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"NavigationSystem: Failed to load map data! Navigation will be unavailable.\"",
                "line": 55
            },
            {
                "callee_expression": "simulateGPSFix",
                "callee_args_str": "",
                "line": 58
            },
            {
                "callee_expression": "address.c_str",
                "callee_args_str": ")",
                "line": 117
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"NavigationSystem: Looking up address: '%s' (simulated).\", address.c_str()",
                "line": 117
            },
            {
                "callee_expression": "address.c_str",
                "callee_args_str": ")",
                "line": 154
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"NavigationSystem: Set destination by address request: '%s'.\", address.c_str()",
                "line": 154
            },
            {
                "callee_expression": "findAddressCoordinates",
                "callee_args_str": "address",
                "line": 155
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"NavigationSystem: Cancel navigation request.\"",
                "line": 164
            },
            {
                "callee_expression": "destination_name_.c_str",
                "callee_args_str": ")",
                "line": 197
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"NavigationSystem: Already at destination '%s'. No route calculated.\", destination_name_.c_str()",
                "line": 197
            },
            {
                "callee_expression": "current_segment.instruction.c_str",
                "callee_args_str": ")",
                "line": 244
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"NavigationSystem: Approaching maneuver for segment: '%s'.\", current_segment.instruction.c_str()",
                "line": 244
            },
            {
                "callee_expression": "current_segment.instruction.c_str",
                "callee_args_str": ")",
                "line": 299
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"NavigationSystem: Maneuver '%s' completed.\", current_segment.instruction.c_str()",
                "line": 299
            },
            {
                "callee_expression": "destination_name_.c_str",
                "callee_args_str": ")",
                "line": 302
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"NavigationSystem: DESTINATION '%s' REACHED!\", destination_name_.c_str()",
                "line": 302
            },
            {
                "callee_expression": "current_route_.clear",
                "callee_args_str": "",
                "line": 304
            },
            {
                "callee_expression": "clear",
                "callee_args_str": "",
                "line": 304
            },
            {
                "callee_expression": "instruction.c_str",
                "callee_args_str": ")",
                "line": 307
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"NavigationSystem: Proceeding to next segment: '%s'.\", current_route_[current_route_segment_index_].instruction.c_str()",
                "line": 307
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"NavigationSystem: Attempting to recalculate route due to off-route condition.\"",
                "line": 355
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"NavigationSystem: Route successfully recalculated.\"",
                "line": 357
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"NavigationSystem: Destination reached for some time. Clearing route.\"",
                "line": 373
            },
            {
                "callee_expression": "cancelNavigation",
                "callee_args_str": "",
                "line": 374
            }
        ]
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::gen",
        "raw_name": "gen",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 48,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::if",
        "raw_name": "if",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 49,
        "end_line": 443,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "std::max",
                "callee_args_str": "0.0, current_route_[current_route_segment_index_].distance_km",
                "line": 417
            },
            {
                "callee_expression": "current_route_.size",
                "callee_args_str": "",
                "line": 418
            },
            {
                "callee_expression": "for",
                "callee_args_str": "size_t i = current_route_segment_index_ + 1; i < current_route_.size(",
                "line": 418
            },
            {
                "callee_expression": "LOG_VERBOSE",
                "callee_args_str": "\"NavigationSystem: getDistanceToDestinationKm() -> %.2f km\", total_remaining_dist",
                "line": 422
            },
            {
                "callee_expression": "current_location_.distanceTo",
                "callee_args_str": "destination_",
                "line": 427
            },
            {
                "callee_expression": "distanceTo",
                "callee_args_str": "destination_",
                "line": 427
            },
            {
                "callee_expression": "current_eta.count",
                "callee_args_str": ") < 0) current_eta = std::chrono::seconds(0",
                "line": 438
            },
            {
                "callee_expression": "if",
                "callee_args_str": "current_eta.count() < 0) current_eta = std::chrono::seconds(0",
                "line": 438
            },
            {
                "callee_expression": "current_eta.count",
                "callee_args_str": ")",
                "line": 439
            },
            {
                "callee_expression": "LOG_VERBOSE",
                "callee_args_str": "\"NavigationSystem: getEstimatedTimeOfArrivalSeconds() -> %llds\", current_eta.count()",
                "line": 439
            },
            {
                "callee_expression": "std::chrono::seconds",
                "callee_args_str": "0",
                "line": 442
            }
        ]
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::LOG_ERROR",
        "raw_name": "LOG_ERROR",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 54,
        "end_line": 359,
        "logs_in_order": [
            {
                "level": "ERROR",
                "message_args_str": "\"NavigationSystem: GPS module remains FAULTY after reset attempt.\"",
                "line": 78,
                "raw_log_statement": "LOG_ERROR(\"NavigationSystem: GPS module remains FAULTY after reset attempt.\");"
            },
            {
                "level": "ERROR",
                "message_args_str": "\"NavigationSystem: Failed to recalculate route. Check GPS and map data.\"",
                "line": 359,
                "raw_log_statement": "LOG_ERROR(\"NavigationSystem: Failed to recalculate route. Check GPS and map data.\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"NavigationSystem: GPS module remains FAULTY after reset attempt.\"",
                "line": 78
            },
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"NavigationSystem: Failed to recalculate route. Check GPS and map data.\"",
                "line": 359
            }
        ]
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::simulateGPSFix",
        "raw_name": "simulateGPSFix",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 57,
        "end_line": 328,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "simulateGPSFix",
                "callee_args_str": "",
                "line": 327
            }
        ]
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::NavigationSystem::~NavigationSystem",
        "raw_name": "NavigationSystem::~NavigationSystem",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 59,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::NavigationSystem::simulateGPSFix",
        "raw_name": "NavigationSystem::simulateGPSFix",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 64,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::LOG_WARNING",
        "raw_name": "LOG_WARNING",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 72,
        "end_line": 261,
        "logs_in_order": [
            {
                "level": "WARNING",
                "message_args_str": "\"NavigationSystem: GPS module is FAULTY. Attempting reset (simulated)...\"",
                "line": 73,
                "raw_log_statement": "LOG_WARNING(\"NavigationSystem: GPS module is FAULTY. Attempting reset (simulated)...\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"NavigationSystem: GPS module fault cleared after reset (simulated). Now NO_FIX.\"",
                "line": 76,
                "raw_log_statement": "LOG_INFO(\"NavigationSystem: GPS module fault cleared after reset (simulated). Now NO_FIX.\");"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"NavigationSystem: Address '%s' not found in dummy database.\", address.c_str()",
                "line": 122,
                "raw_log_statement": "LOG_WARNING(\"NavigationSystem: Address '%s' not found in dummy database.\", address.c_str());"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"NavigationSystem: Guidance update requested but no valid route segment. Index: %d\", current_route_segment_index_",
                "line": 229,
                "raw_log_statement": "LOG_WARNING(\"NavigationSystem: Guidance update requested but no valid route segment. Index: %d\", current_route_segment_index_);"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"NavigationSystem: OFF ROUTE detected! Distance from track: %.2f km. Recalculating...\", dist_from_expected_track",
                "line": 258,
                "raw_log_statement": "LOG_WARNING(\"NavigationSystem: OFF ROUTE detected! Distance from track: %.2f km. Recalculating...\", dist_from_expected_track);"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"NavigationSystem: GPS module is FAULTY. Attempting reset (simulated)...\"",
                "line": 73
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"NavigationSystem: GPS module fault cleared after reset (simulated). Now NO_FIX.\"",
                "line": 76
            },
            {
                "callee_expression": "address.c_str",
                "callee_args_str": ")",
                "line": 122
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"NavigationSystem: Address '%s' not found in dummy database.\", address.c_str()",
                "line": 122
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"NavigationSystem: Guidance update requested but no valid route segment. Index: %d\", current_route_segment_index_",
                "line": 229
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"NavigationSystem: OFF ROUTE detected! Distance from track: %.2f km. Recalculating...\", dist_from_expected_track",
                "line": 258
            },
            {
                "callee_expression": "calculateRoute",
                "callee_args_str": "",
                "line": 260
            }
        ]
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::LOG_VERBOSE",
        "raw_name": "LOG_VERBOSE",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 105,
        "end_line": 106,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "LOG_VERBOSE",
                "callee_args_str": "\"NavigationSystem: GPS status remains %s.\", gpsStatusToString(gps_status_)",
                "line": 106
            }
        ]
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::reportNavigationError",
        "raw_name": "reportNavigationError",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 110,
        "end_line": 348,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "reportNavigationError",
                "callee_args_str": "NavigationStatus::ERROR_NO_GPS, \"Lost GPS signal during active guidance or route calculation.\"",
                "line": 111
            },
            {
                "callee_expression": "reportNavigationError",
                "callee_args_str": "NavigationStatus::ERROR_ROUTE_FAILED, \"Cannot set destination. Map data not available.\"",
                "line": 131
            },
            {
                "callee_expression": "reportNavigationError",
                "callee_args_str": "NavigationStatus::ERROR_ROUTE_FAILED, \"Invalid destination coordinates.\"",
                "line": 135
            },
            {
                "callee_expression": "reportNavigationError",
                "callee_args_str": "NavigationStatus::ERROR_NO_GPS, \"Cannot set destination. No valid GPS signal for current location.\"",
                "line": 139
            },
            {
                "callee_expression": "reportNavigationError",
                "callee_args_str": "NavigationStatus::ERROR_ROUTE_FAILED, \"Address lookup failed for: \" + address",
                "line": 157
            },
            {
                "callee_expression": "reportNavigationError",
                "callee_args_str": "NavigationStatus::ERROR_NO_GPS, \"Route calculation failed: No GPS fix.\"",
                "line": 193
            },
            {
                "callee_expression": "reportNavigationError",
                "callee_args_str": "NavigationStatus::ERROR_ROUTE_FAILED, \"Failed to calculate a route to \" + destination_name_",
                "line": 210
            },
            {
                "callee_expression": "reportNavigationError",
                "callee_args_str": "NavigationStatus::ERROR_ROUTE_FAILED, \"Route calculation aborted: Map data unavailable.\"",
                "line": 346
            },
            {
                "callee_expression": "reportNavigationError",
                "callee_args_str": "NavigationStatus::ERROR_NO_GPS, \"Route calculation aborted: No GPS fix.\"",
                "line": 348
            }
        ]
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::NavigationSystem::findAddressCoordinates",
        "raw_name": "NavigationSystem::findAddressCoordinates",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 114,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::NavigationSystem::setDestination",
        "raw_name": "NavigationSystem::setDestination",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 124,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::NavigationSystem::setDestinationByAddress",
        "raw_name": "NavigationSystem::setDestinationByAddress",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 151,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::setDestination",
        "raw_name": "setDestination",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 159,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::NavigationSystem::cancelNavigation",
        "raw_name": "NavigationSystem::cancelNavigation",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 161,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::LOG_DEBUG",
        "raw_name": "LOG_DEBUG",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 165,
        "end_line": 459,
        "logs_in_order": [
            {
                "level": "DEBUG",
                "message_args_str": "\"NavigationSystem: No active navigation to cancel.\"",
                "line": 166,
                "raw_log_statement": "LOG_DEBUG(\"NavigationSystem: No active navigation to cancel.\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"NavigationSystem: No GPS fix, cannot simulate location update meaningfully.\"",
                "line": 266,
                "raw_log_statement": "LOG_DEBUG(\"NavigationSystem: No GPS fix, cannot simulate location update meaningfully.\");"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"NavigationSystem: GPS signal temporarily lost. Location updates based on dead reckoning (simulated).\"",
                "line": 270,
                "raw_log_statement": "LOG_WARNING(\"NavigationSystem: GPS signal temporarily lost. Location updates based on dead reckoning (simulated).\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"NavigationSystem: getCurrentNavigationStatus() -> %s\", navStatusToString(nav_status_)",
                "line": 384,
                "raw_log_statement": "LOG_DEBUG(\"NavigationSystem: getCurrentNavigationStatus() -> %s\", navStatusToString(nav_status_));"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"NavigationSystem: getGPSSignalStatus() -> %s\", gpsStatusToString(gps_status_)",
                "line": 446,
                "raw_log_statement": "LOG_DEBUG(\"NavigationSystem: getGPSSignalStatus() -> %s\", gpsStatusToString(gps_status_));"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"NavigationSystem: isMapDataAvailable() -> %s\", map_data_loaded_ ? \"YES\" : \"NO\"",
                "line": 457,
                "raw_log_statement": "LOG_DEBUG(\"NavigationSystem: isMapDataAvailable() -> %s\", map_data_loaded_ ? \"YES\" : \"NO\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"NavigationSystem: No active navigation to cancel.\"",
                "line": 166
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"NavigationSystem: No GPS fix, cannot simulate location update meaningfully.\"",
                "line": 266
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"NavigationSystem: GPS signal temporarily lost. Location updates based on dead reckoning (simulated).\"",
                "line": 270
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"NavigationSystem: getCurrentNavigationStatus() -> %s\", navStatusToString(nav_status_)",
                "line": 384
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"NavigationSystem: getGPSSignalStatus() -> %s\", gpsStatusToString(gps_status_)",
                "line": 446
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"NavigationSystem: isMapDataAvailable() -> %s\", map_data_loaded_ ? \"YES\" : \"NO\"",
                "line": 457
            }
        ]
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::NavigationSystem::calculateRoute",
        "raw_name": "NavigationSystem::calculateRoute",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 177,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::std::this_thread::sleep_for",
        "raw_name": "std::this_thread::sleep_for",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 189,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::NavigationSystem::provideGuidanceUpdate",
        "raw_name": "NavigationSystem::provideGuidanceUpdate",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 225,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::getEstimatedTimeOfArrivalSeconds",
        "raw_name": "getEstimatedTimeOfArrivalSeconds",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 239,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::NavigationSystem::checkOffRoute",
        "raw_name": "NavigationSystem::checkOffRoute",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 247,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::NavigationSystem::simulateLocationUpdate",
        "raw_name": "NavigationSystem::simulateLocationUpdate",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 262,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::std::cos",
        "raw_name": "std::cos",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 281,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::std::min",
        "raw_name": "std::min",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 287,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::NavigationSystem::updateNavigationState",
        "raw_name": "NavigationSystem::updateNavigationState",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 313,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::simulateLocationUpdate",
        "raw_name": "simulateLocationUpdate",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 337,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::calculateRoute",
        "raw_name": "calculateRoute",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 349,
        "end_line": 350,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "calculateRoute",
                "callee_args_str": "",
                "line": 350
            }
        ]
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::provideGuidanceUpdate",
        "raw_name": "provideGuidanceUpdate",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 364,
        "end_line": 367,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "provideGuidanceUpdate",
                "callee_args_str": "vehicle_state.speed_kmh",
                "line": 365
            },
            {
                "callee_expression": "checkOffRoute",
                "callee_args_str": "vehicle_state.speed_kmh",
                "line": 366
            }
        ]
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::checkOffRoute",
        "raw_name": "checkOffRoute",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 365,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::cancelNavigation",
        "raw_name": "cancelNavigation",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 373,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::NavigationSystem::getCurrentNavigationStatus",
        "raw_name": "NavigationSystem::getCurrentNavigationStatus",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 380,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::NavigationSystem::getCurrentGuidanceInstruction",
        "raw_name": "NavigationSystem::getCurrentGuidanceInstruction",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 386,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::NavigationSystem::getDistanceToNextManeuverKm",
        "raw_name": "NavigationSystem::getDistanceToNextManeuverKm",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 398,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::std::max",
        "raw_name": "std::max",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 406,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::NavigationSystem::getDistanceToDestinationKm",
        "raw_name": "NavigationSystem::getDistanceToDestinationKm",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 410,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::for",
        "raw_name": "for",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 417,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::NavigationSystem::getEstimatedTimeOfArrivalSeconds",
        "raw_name": "NavigationSystem::getEstimatedTimeOfArrivalSeconds",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 430,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::std::chrono::seconds",
        "raw_name": "std::chrono::seconds",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 441,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::NavigationSystem::getGPSSignalStatus",
        "raw_name": "NavigationSystem::getGPSSignalStatus",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 443,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::NavigationSystem::getCurrentLocation",
        "raw_name": "NavigationSystem::getCurrentLocation",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 448,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::NavigationSystem::isMapDataAvailable",
        "raw_name": "NavigationSystem::isMapDataAvailable",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 454,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_cpp::NavigationSystem::reportNavigationError",
        "raw_name": "NavigationSystem::reportNavigationError",
        "file": "./ecu_infotainment/navigation_system.cpp",
        "line": 459,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::mediaSourceToString",
        "raw_name": "mediaSourceToString",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 8,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::switch",
        "raw_name": "switch",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 9,
        "end_line": 32,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::playbackStatusToString",
        "raw_name": "playbackStatusToString",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 21,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::current_am_frequency_",
        "raw_name": "current_am_frequency_",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 42,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::LOG_INFO",
        "raw_name": "LOG_INFO",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 44,
        "end_line": 439,
        "logs_in_order": [
            {
                "level": "INFO",
                "message_args_str": "\"MediaPlayer: Initializing. Default volume: %d%%.\", volume_level_",
                "line": 45,
                "raw_log_statement": "LOG_INFO(\"MediaPlayer: Initializing. Default volume: %d%%.\", volume_level_);"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MediaPlayer: Request to select source: %s.\", mediaSourceToString(new_source)",
                "line": 54,
                "raw_log_statement": "LOG_INFO(\"MediaPlayer: Request to select source: %s.\", mediaSourceToString(new_source));"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MediaPlayer: Play command received.\"",
                "line": 152,
                "raw_log_statement": "LOG_INFO(\"MediaPlayer: Play command received.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MediaPlayer: Pause command received.\"",
                "line": 201,
                "raw_log_statement": "LOG_INFO(\"MediaPlayer: Pause command received.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MediaPlayer: Stop command received.\"",
                "line": 222,
                "raw_log_statement": "LOG_INFO(\"MediaPlayer: Stop command received.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MediaPlayer: Stopped playback of track '%s'.\", current_playlist_[current_track_index_].title.c_str()",
                "line": 229,
                "raw_log_statement": "LOG_INFO(\"MediaPlayer: Stopped playback of track '%s'.\", current_playlist_[current_track_index_].title.c_str());"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MediaPlayer: Playback stopped on source %s.\", mediaSourceToString(current_source_)",
                "line": 231,
                "raw_log_statement": "LOG_INFO(\"MediaPlayer: Playback stopped on source %s.\", mediaSourceToString(current_source_));"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MediaPlayer: Playback stopped on source %s.\", mediaSourceToString(current_source_)",
                "line": 235,
                "raw_log_statement": "LOG_INFO(\"MediaPlayer: Playback stopped on source %s.\", mediaSourceToString(current_source_));"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MediaPlayer: Next track command received.\"",
                "line": 244,
                "raw_log_statement": "LOG_INFO(\"MediaPlayer: Next track command received.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MediaPlayer: Previous track command received.\"",
                "line": 258,
                "raw_log_statement": "LOG_INFO(\"MediaPlayer: Previous track command received.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MediaPlayer: Seek command received. Target position: %llds.\", position.count()",
                "line": 281,
                "raw_log_statement": "LOG_INFO(\"MediaPlayer: Seek command received. Target position: %llds.\", position.count());"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MediaPlayer: Volume set to %d%%. Unmuting device.\", volume_level_",
                "line": 320,
                "raw_log_statement": "LOG_INFO(\"MediaPlayer: Volume set to %d%%. Unmuting device.\", volume_level_);"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MediaPlayer: Volume set to 0%%. Muting device.\"",
                "line": 323,
                "raw_log_statement": "LOG_INFO(\"MediaPlayer: Volume set to 0%%. Muting device.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MediaPlayer: Mute command. Enable: %s.\", enable_mute ? \"YES\" : \"NO\"",
                "line": 336,
                "raw_log_statement": "LOG_INFO(\"MediaPlayer: Mute command. Enable: %s.\", enable_mute ? \"YES\" : \"NO\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MediaPlayer: Track '%s' ended.\", current_playlist_[current_track_index_].title.c_str()",
                "line": 427,
                "raw_log_statement": "LOG_INFO(\"MediaPlayer: Track '%s' ended.\", current_playlist_[current_track_index_].title.c_str());"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MediaPlayer: Playing next track in playlist.\"",
                "line": 433,
                "raw_log_statement": "LOG_INFO(\"MediaPlayer: Playing next track in playlist.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MediaPlayer: End of playlist. Repeating from beginning.\"",
                "line": 436,
                "raw_log_statement": "LOG_INFO(\"MediaPlayer: End of playlist. Repeating from beginning.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"MediaPlayer: End of playlist. Stopping playback.\"",
                "line": 439,
                "raw_log_statement": "LOG_INFO(\"MediaPlayer: End of playlist. Stopping playback.\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MediaPlayer: Initializing. Default volume: %d%%.\", volume_level_",
                "line": 45
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MediaPlayer: Request to select source: %s.\", mediaSourceToString(new_source)",
                "line": 54
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MediaPlayer: Play command received.\"",
                "line": 152
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MediaPlayer: Pause command received.\"",
                "line": 201
            },
            {
                "callee_expression": "paused_elapsed_time_.count",
                "callee_args_str": ")",
                "line": 211
            },
            {
                "callee_expression": "count",
                "callee_args_str": ")",
                "line": 211
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MediaPlayer: Stop command received.\"",
                "line": 222
            },
            {
                "callee_expression": "title.c_str",
                "callee_args_str": ")",
                "line": 229
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MediaPlayer: Stopped playback of track '%s'.\", current_playlist_[current_track_index_].title.c_str()",
                "line": 229
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MediaPlayer: Playback stopped on source %s.\", mediaSourceToString(current_source_)",
                "line": 231
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MediaPlayer: Playback stopped on source %s.\", mediaSourceToString(current_source_)",
                "line": 235
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MediaPlayer: Next track command received.\"",
                "line": 244
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MediaPlayer: Previous track command received.\"",
                "line": 258
            },
            {
                "callee_expression": "position.count",
                "callee_args_str": ")",
                "line": 281
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MediaPlayer: Seek command received. Target position: %llds.\", position.count()",
                "line": 281
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MediaPlayer: Volume set to %d%%. Unmuting device.\", volume_level_",
                "line": 320
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MediaPlayer: Volume set to 0%%. Muting device.\"",
                "line": 323
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MediaPlayer: Mute command. Enable: %s.\", enable_mute ? \"YES\" : \"NO\"",
                "line": 336
            },
            {
                "callee_expression": "title.c_str",
                "callee_args_str": ")",
                "line": 427
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MediaPlayer: Track '%s' ended.\", current_playlist_[current_track_index_].title.c_str()",
                "line": 427
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MediaPlayer: Playing next track in playlist.\"",
                "line": 433
            },
            {
                "callee_expression": "nextTrack",
                "callee_args_str": "",
                "line": 434
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MediaPlayer: End of playlist. Repeating from beginning.\"",
                "line": 436
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"MediaPlayer: End of playlist. Stopping playback.\"",
                "line": 439
            }
        ]
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::MediaPlayer::~MediaPlayer",
        "raw_name": "MediaPlayer::~MediaPlayer",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 46,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::MediaPlayer::selectSource",
        "raw_name": "MediaPlayer::selectSource",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 51,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::if",
        "raw_name": "if",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 54,
        "end_line": 401,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "elapsed.count",
                "callee_args_str": ")",
                "line": 374
            },
            {
                "callee_expression": "LOG_VERBOSE",
                "callee_args_str": "\"MediaPlayer: getCurrentTrackElapsedTime() -> %llds (PLAYING).\", elapsed.count()",
                "line": 374
            },
            {
                "callee_expression": "mediaSourceToString",
                "callee_args_str": "current_source_)",
                "line": 387
            },
            {
                "callee_expression": "playlist.size",
                "callee_args_str": "), mediaSourceToString(current_source_)",
                "line": 394
            },
            {
                "callee_expression": "size",
                "callee_args_str": "), mediaSourceToString(current_source_)",
                "line": 394
            }
        ]
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::LOG_DEBUG",
        "raw_name": "LOG_DEBUG",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 55,
        "end_line": 397,
        "logs_in_order": [
            {
                "level": "DEBUG",
                "message_args_str": "\"MediaPlayer: Source %s is already active.\", mediaSourceToString(new_source)",
                "line": 56,
                "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: Source %s is already active.\", mediaSourceToString(new_source));"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"MediaPlayer: getCurrentSource() -> %s.\", mediaSourceToString(current_source_)",
                "line": 122,
                "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: getCurrentSource() -> %s.\", mediaSourceToString(current_source_));"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"MediaPlayer: Player is muted. Sound will not be audible until unmuted.\"",
                "line": 154,
                "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: Player is muted. Sound will not be audible until unmuted.\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"MediaPlayer: Already playing.\"",
                "line": 160,
                "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: Already playing.\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"MediaPlayer: Already paused.\"",
                "line": 213,
                "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: Already paused.\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"MediaPlayer: Already stopped.\"",
                "line": 238,
                "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: Already stopped.\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"MediaPlayer: Restarting current track '%s'.\", current_playlist_[current_track_index_].title.c_str()",
                "line": 269,
                "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: Restarting current track '%s'.\", current_playlist_[current_track_index_].title.c_str());"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"MediaPlayer: Volume already at %d%%.\", level_percent",
                "line": 315,
                "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: Volume already at %d%%.\", level_percent);"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"MediaPlayer: getVolume() -> %d%%. Muted: %s.\", volume_level_, muted_ ? \"YES\" : \"NO\"",
                "line": 331,
                "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: getVolume() -> %d%%. Muted: %s.\", volume_level_, muted_ ? \"YES\" : \"NO\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"MediaPlayer: Mute state already %s.\", muted_ ? \"ON\" : \"OFF\"",
                "line": 338,
                "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: Mute state already %s.\", muted_ ? \"ON\" : \"OFF\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"MediaPlayer: isMuted() -> %s.\", muted_ ? \"YES\" : \"NO\"",
                "line": 348,
                "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: isMuted() -> %s.\", muted_ ? \"YES\" : \"NO\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"MediaPlayer: getPlaybackStatus() -> %s.\", playbackStatusToString(current_status_)",
                "line": 353,
                "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: getPlaybackStatus() -> %s.\", playbackStatusToString(current_status_));"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"MediaPlayer: getCurrentTrackInfo() for '%s'.\", current_playlist_[current_track_index_].title.c_str()",
                "line": 360,
                "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: getCurrentTrackInfo() for '%s'.\", current_playlist_[current_track_index_].title.c_str());"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"MediaPlayer: Playlist item %zu: '%s' by '%s'\", i+1, playlist[i].title.c_str(), playlist[i].artist.c_str()",
                "line": 396,
                "raw_log_statement": "LOG_DEBUG(\"MediaPlayer: Playlist item %zu: '%s' by '%s'\", i+1, playlist[i].title.c_str(), playlist[i].artist.c_str());"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"MediaPlayer: Source %s is already active.\", mediaSourceToString(new_source)",
                "line": 56
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"MediaPlayer: getCurrentSource() -> %s.\", mediaSourceToString(current_source_)",
                "line": 122
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"MediaPlayer: Player is muted. Sound will not be audible until unmuted.\"",
                "line": 154
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"MediaPlayer: Already playing.\"",
                "line": 160
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"MediaPlayer: Already paused.\"",
                "line": 213
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"MediaPlayer: Already stopped.\"",
                "line": 238
            },
            {
                "callee_expression": "title.c_str",
                "callee_args_str": ")",
                "line": 269
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"MediaPlayer: Restarting current track '%s'.\", current_playlist_[current_track_index_].title.c_str()",
                "line": 269
            },
            {
                "callee_expression": "playTrackAtIndex",
                "callee_args_str": "current_track_index_",
                "line": 270
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"MediaPlayer: Volume already at %d%%.\", level_percent",
                "line": 315
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"MediaPlayer: getVolume() -> %d%%. Muted: %s.\", volume_level_, muted_ ? \"YES\" : \"NO\"",
                "line": 331
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"MediaPlayer: Mute state already %s.\", muted_ ? \"ON\" : \"OFF\"",
                "line": 338
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"MediaPlayer: isMuted() -> %s.\", muted_ ? \"YES\" : \"NO\"",
                "line": 348
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"MediaPlayer: getPlaybackStatus() -> %s.\", playbackStatusToString(current_status_)",
                "line": 353
            },
            {
                "callee_expression": "title.c_str",
                "callee_args_str": ")",
                "line": 360
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"MediaPlayer: getCurrentTrackInfo() for '%s'.\", current_playlist_[current_track_index_].title.c_str()",
                "line": 360
            },
            {
                "callee_expression": "title.c_str",
                "callee_args_str": "), playlist[i].artist.c_str()",
                "line": 396
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"MediaPlayer: Playlist item %zu: '%s' by '%s'\", i+1, playlist[i].title.c_str(), playlist[i].artist.c_str()",
                "line": 396
            }
        ]
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::stop",
        "raw_name": "stop",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 58,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::gen",
        "raw_name": "gen",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 70,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::distrib",
        "raw_name": "distrib",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 71,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::reportPlaybackError",
        "raw_name": "reportPlaybackError",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 76,
        "end_line": 500,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "reportPlaybackError",
                "callee_args_str": "PlaybackStatus::ERROR_SOURCE_UNAVAILABLE, \"USB device not detected or unreadable.\"",
                "line": 77
            },
            {
                "callee_expression": "reportPlaybackError",
                "callee_args_str": "PlaybackStatus::ERROR_SOURCE_UNAVAILABLE, \"Bluetooth connection failed or device not paired.\"",
                "line": 90
            },
            {
                "callee_expression": "reportPlaybackError",
                "callee_args_str": "PlaybackStatus::ERROR_TRACK_UNREADABLE, \"Invalid track index: \" + std::to_string(index)",
                "line": 128
            },
            {
                "callee_expression": "reportPlaybackError",
                "callee_args_str": "PlaybackStatus::ERROR_TRACK_UNREADABLE, \"Cannot read track: \" + track.title + \" (simulated corruption).\"",
                "line": 135
            },
            {
                "callee_expression": "reportPlaybackError",
                "callee_args_str": "PlaybackStatus::ERROR_SOURCE_UNAVAILABLE, \"No playlist loaded for \" + std::string(mediaSourceToString(current_source_))",
                "line": 164
            },
            {
                "callee_expression": "reportPlaybackError",
                "callee_args_str": "PlaybackStatus::ERROR_SOURCE_UNAVAILABLE, \"No playlist loaded for next track.\"",
                "line": 250
            },
            {
                "callee_expression": "reportPlaybackError",
                "callee_args_str": "PlaybackStatus::ERROR_SOURCE_UNAVAILABLE, \"No playlist loaded for previous track.\"",
                "line": 264
            },
            {
                "callee_expression": "reportPlaybackError",
                "callee_args_str": "PlaybackStatus::ERROR_TRACK_UNREADABLE, \"No track loaded to seek in.\"",
                "line": 291
            },
            {
                "callee_expression": "reportPlaybackError",
                "callee_args_str": "PlaybackStatus::ERROR_SOURCE_UNAVAILABLE, \"USB device disconnected unexpectedly (simulated).\"",
                "line": 498
            },
            {
                "callee_expression": "stop",
                "callee_args_str": "",
                "line": 499
            }
        ]
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::tuneRadio",
        "raw_name": "tuneRadio",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 100,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::LOG_WARNING",
        "raw_name": "LOG_WARNING",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 113,
        "end_line": 289,
        "logs_in_order": [
            {
                "level": "WARNING",
                "message_args_str": "\"MediaPlayer: Cannot pause. Not playing a pausable track or source %s is not pausable.\", mediaSourceToString(current_source_)",
                "line": 215,
                "raw_log_statement": "LOG_WARNING(\"MediaPlayer: Cannot pause. Not playing a pausable track or source %s is not pausable.\", mediaSourceToString(current_source_));"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"MediaPlayer: Next track command ignored. Source %s does not support tracks.\", mediaSourceToString(current_source_)",
                "line": 246,
                "raw_log_statement": "LOG_WARNING(\"MediaPlayer: Next track command ignored. Source %s does not support tracks.\", mediaSourceToString(current_source_));"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"MediaPlayer: Previous track command ignored. Source %s does not support tracks.\", mediaSourceToString(current_source_)",
                "line": 260,
                "raw_log_statement": "LOG_WARNING(\"MediaPlayer: Previous track command ignored. Source %s does not support tracks.\", mediaSourceToString(current_source_));"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"MediaPlayer: Cannot seek. Not currently playing or paused on a track.\"",
                "line": 283,
                "raw_log_statement": "LOG_WARNING(\"MediaPlayer: Cannot seek. Not currently playing or paused on a track.\");"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"MediaPlayer: Seek command ignored. Source %s does not support seeking.\", mediaSourceToString(current_source_)",
                "line": 287,
                "raw_log_statement": "LOG_WARNING(\"MediaPlayer: Seek command ignored. Source %s does not support seeking.\", mediaSourceToString(current_source_));"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"MediaPlayer: Cannot pause. Not playing a pausable track or source %s is not pausable.\", mediaSourceToString(current_source_)",
                "line": 215
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"MediaPlayer: Next track command ignored. Source %s does not support tracks.\", mediaSourceToString(current_source_)",
                "line": 246
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"MediaPlayer: Previous track command ignored. Source %s does not support tracks.\", mediaSourceToString(current_source_)",
                "line": 260
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"MediaPlayer: Cannot seek. Not currently playing or paused on a track.\"",
                "line": 283
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"MediaPlayer: Seek command ignored. Source %s does not support seeking.\", mediaSourceToString(current_source_)",
                "line": 287
            }
        ]
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::MediaPlayer::getCurrentSource",
        "raw_name": "MediaPlayer::getCurrentSource",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 119,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::MediaPlayer::playTrackAtIndex",
        "raw_name": "MediaPlayer::playTrackAtIndex",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 124,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::MediaPlayer::play",
        "raw_name": "MediaPlayer::play",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 149,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::playTrackAtIndex",
        "raw_name": "playTrackAtIndex",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 175,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::MediaPlayer::pause",
        "raw_name": "MediaPlayer::pause",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 198,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::MediaPlayer::stop",
        "raw_name": "MediaPlayer::stop",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 219,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::MediaPlayer::nextTrack",
        "raw_name": "MediaPlayer::nextTrack",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 241,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::MediaPlayer::previousTrack",
        "raw_name": "MediaPlayer::previousTrack",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 255,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::MediaPlayer::seek",
        "raw_name": "MediaPlayer::seek",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 278,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::std::min",
        "raw_name": "std::min",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 299,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::MediaPlayer::setVolume",
        "raw_name": "MediaPlayer::setVolume",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 308,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::MediaPlayer::getVolume",
        "raw_name": "MediaPlayer::getVolume",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 328,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::MediaPlayer::mute",
        "raw_name": "MediaPlayer::mute",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 333,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::MediaPlayer::isMuted",
        "raw_name": "MediaPlayer::isMuted",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 345,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::MediaPlayer::getPlaybackStatus",
        "raw_name": "MediaPlayer::getPlaybackStatus",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 350,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::MediaPlayer::getCurrentTrackInfo",
        "raw_name": "MediaPlayer::getCurrentTrackInfo",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 355,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::MediaPlayer::getCurrentTrackElapsedTime",
        "raw_name": "MediaPlayer::getCurrentTrackElapsedTime",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 367,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::LOG_VERBOSE",
        "raw_name": "LOG_VERBOSE",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 373,
        "end_line": 496,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "paused_elapsed_time_.count",
                "callee_args_str": ")",
                "line": 377
            },
            {
                "callee_expression": "LOG_VERBOSE",
                "callee_args_str": "\"MediaPlayer: getCurrentTrackElapsedTime() -> %llds (PAUSED).\", paused_elapsed_time_.count()",
                "line": 377
            },
            {
                "callee_expression": "LOG_VERBOSE",
                "callee_args_str": "\"MediaPlayer: AUX playback ongoing.\"",
                "line": 469
            },
            {
                "callee_expression": "LOG_VERBOSE",
                "callee_args_str": "\"MediaPlayer: Updating playback state...\"",
                "line": 482
            },
            {
                "callee_expression": "simulateTimePassing",
                "callee_args_str": "",
                "line": 484
            },
            {
                "callee_expression": "gen",
                "callee_args_str": "rd()",
                "line": 495
            }
        ]
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::std::chrono::seconds",
        "raw_name": "std::chrono::seconds",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 380,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::MediaPlayer::loadPlaylist",
        "raw_name": "MediaPlayer::loadPlaylist",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 382,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::for",
        "raw_name": "for",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 394,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::MediaPlayer::tuneRadio",
        "raw_name": "MediaPlayer::tuneRadio",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 399,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::LOG_ERROR",
        "raw_name": "LOG_ERROR",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 402,
        "end_line": 405,
        "logs_in_order": [
            {
                "level": "ERROR",
                "message_args_str": "\"MediaPlayer: Invalid radio band specified for tuning: %s\", mediaSourceToString(radio_band)",
                "line": 403,
                "raw_log_statement": "LOG_ERROR(\"MediaPlayer: Invalid radio band specified for tuning: %s\", mediaSourceToString(radio_band));"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"MediaPlayer: Invalid radio band specified for tuning: %s\", mediaSourceToString(radio_band)",
                "line": 403
            }
        ]
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::MediaPlayer::handleTrackEnd",
        "raw_name": "MediaPlayer::handleTrackEnd",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 424,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::nextTrack",
        "raw_name": "nextTrack",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 433,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::MediaPlayer::simulateTimePassing",
        "raw_name": "MediaPlayer::simulateTimePassing",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 442,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::handleTrackEnd",
        "raw_name": "handleTrackEnd",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 461,
        "end_line": 463,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "handleTrackEnd",
                "callee_args_str": "",
                "line": 462
            }
        ]
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::MediaPlayer::reportPlaybackError",
        "raw_name": "MediaPlayer::reportPlaybackError",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 471,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::MediaPlayer::updatePlaybackState",
        "raw_name": "MediaPlayer::updatePlaybackState",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 479,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_cpp::simulateTimePassing",
        "raw_name": "simulateTimePassing",
        "file": "./ecu_infotainment/media_player.cpp",
        "line": 483,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_h::MediaPlayer",
        "raw_name": "MediaPlayer",
        "file": "./ecu_infotainment/media_player.h",
        "line": 39,
        "end_line": 95,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "MediaPlayer",
                "callee_args_str": "",
                "line": 41
            },
            {
                "callee_expression": "MediaPlayer",
                "callee_args_str": "",
                "line": 42
            },
            {
                "callee_expression": "selectSource",
                "callee_args_str": "MediaSource new_source",
                "line": 45
            },
            {
                "callee_expression": "play",
                "callee_args_str": "",
                "line": 49
            },
            {
                "callee_expression": "pause",
                "callee_args_str": "",
                "line": 50
            },
            {
                "callee_expression": "stop",
                "callee_args_str": "",
                "line": 51
            },
            {
                "callee_expression": "nextTrack",
                "callee_args_str": "",
                "line": 52
            },
            {
                "callee_expression": "previousTrack",
                "callee_args_str": "",
                "line": 53
            },
            {
                "callee_expression": "seek",
                "callee_args_str": "std::chrono::seconds position",
                "line": 54
            },
            {
                "callee_expression": "setVolume",
                "callee_args_str": "int level_percent",
                "line": 57
            },
            {
                "callee_expression": "mute",
                "callee_args_str": "bool enable_mute",
                "line": 59
            },
            {
                "callee_expression": "loadPlaylist",
                "callee_args_str": "const std::vector<TrackInfo>& playlist",
                "line": 68
            },
            {
                "callee_expression": "tuneRadio",
                "callee_args_str": "double frequency, MediaSource radio_band",
                "line": 69
            },
            {
                "callee_expression": "updatePlaybackState",
                "callee_args_str": "",
                "line": 72
            },
            {
                "callee_expression": "playTrackAtIndex",
                "callee_args_str": "int index",
                "line": 91
            },
            {
                "callee_expression": "simulateTimePassing",
                "callee_args_str": "",
                "line": 92
            },
            {
                "callee_expression": "handleTrackEnd",
                "callee_args_str": "",
                "line": 93
            },
            {
                "callee_expression": "reportPlaybackError",
                "callee_args_str": "PlaybackStatus error_status, const std::string& details",
                "line": 94
            }
        ]
    },
    {
        "signature": "ecu_infotainment_media_player_h::~MediaPlayer",
        "raw_name": "~MediaPlayer",
        "file": "./ecu_infotainment/media_player.h",
        "line": 41,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_h::selectSource",
        "raw_name": "selectSource",
        "file": "./ecu_infotainment/media_player.h",
        "line": 44,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_h::getCurrentSource",
        "raw_name": "getCurrentSource",
        "file": "./ecu_infotainment/media_player.h",
        "line": 45,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_h::play",
        "raw_name": "play",
        "file": "./ecu_infotainment/media_player.h",
        "line": 48,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_h::pause",
        "raw_name": "pause",
        "file": "./ecu_infotainment/media_player.h",
        "line": 49,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_h::stop",
        "raw_name": "stop",
        "file": "./ecu_infotainment/media_player.h",
        "line": 50,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_h::nextTrack",
        "raw_name": "nextTrack",
        "file": "./ecu_infotainment/media_player.h",
        "line": 51,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_h::previousTrack",
        "raw_name": "previousTrack",
        "file": "./ecu_infotainment/media_player.h",
        "line": 52,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_h::seek",
        "raw_name": "seek",
        "file": "./ecu_infotainment/media_player.h",
        "line": 53,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_h::setVolume",
        "raw_name": "setVolume",
        "file": "./ecu_infotainment/media_player.h",
        "line": 56,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_h::getVolume",
        "raw_name": "getVolume",
        "file": "./ecu_infotainment/media_player.h",
        "line": 57,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_h::mute",
        "raw_name": "mute",
        "file": "./ecu_infotainment/media_player.h",
        "line": 58,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_h::isMuted",
        "raw_name": "isMuted",
        "file": "./ecu_infotainment/media_player.h",
        "line": 59,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_h::getPlaybackStatus",
        "raw_name": "getPlaybackStatus",
        "file": "./ecu_infotainment/media_player.h",
        "line": 62,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_h::getCurrentTrackInfo",
        "raw_name": "getCurrentTrackInfo",
        "file": "./ecu_infotainment/media_player.h",
        "line": 63,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_h::getCurrentTrackElapsedTime",
        "raw_name": "getCurrentTrackElapsedTime",
        "file": "./ecu_infotainment/media_player.h",
        "line": 64,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_h::loadPlaylist",
        "raw_name": "loadPlaylist",
        "file": "./ecu_infotainment/media_player.h",
        "line": 67,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_h::tuneRadio",
        "raw_name": "tuneRadio",
        "file": "./ecu_infotainment/media_player.h",
        "line": 68,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_h::updatePlaybackState",
        "raw_name": "updatePlaybackState",
        "file": "./ecu_infotainment/media_player.h",
        "line": 71,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_h::playTrackAtIndex",
        "raw_name": "playTrackAtIndex",
        "file": "./ecu_infotainment/media_player.h",
        "line": 90,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_h::simulateTimePassing",
        "raw_name": "simulateTimePassing",
        "file": "./ecu_infotainment/media_player.h",
        "line": 91,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_h::handleTrackEnd",
        "raw_name": "handleTrackEnd",
        "file": "./ecu_infotainment/media_player.h",
        "line": 92,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_media_player_h::reportPlaybackError",
        "raw_name": "reportPlaybackError",
        "file": "./ecu_infotainment/media_player.h",
        "line": 93,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_h::isValid",
        "raw_name": "isValid",
        "file": "./ecu_infotainment/navigation_system.h",
        "line": 17,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_h::distanceTo",
        "raw_name": "distanceTo",
        "file": "./ecu_infotainment/navigation_system.h",
        "line": 23,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_h::NavigationSystem",
        "raw_name": "NavigationSystem",
        "file": "./ecu_infotainment/navigation_system.h",
        "line": 56,
        "end_line": 105,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "NavigationSystem",
                "callee_args_str": "",
                "line": 58
            },
            {
                "callee_expression": "NavigationSystem",
                "callee_args_str": "",
                "line": 59
            },
            {
                "callee_expression": "setDestination",
                "callee_args_str": "const MapCoordinate& dest, const std::string& dest_name = \"\"",
                "line": 62
            },
            {
                "callee_expression": "setDestinationByAddress",
                "callee_args_str": "const std::string& address",
                "line": 63
            },
            {
                "callee_expression": "cancelNavigation",
                "callee_args_str": "",
                "line": 64
            },
            {
                "callee_expression": "updateNavigationState",
                "callee_args_str": "const VehicleState& vehicle_state",
                "line": 80
            },
            {
                "callee_expression": "simulateGPSFix",
                "callee_args_str": "",
                "line": 98
            },
            {
                "callee_expression": "calculateRoute",
                "callee_args_str": "",
                "line": 99
            },
            {
                "callee_expression": "provideGuidanceUpdate",
                "callee_args_str": "double speed_kmh",
                "line": 100
            },
            {
                "callee_expression": "checkOffRoute",
                "callee_args_str": "double speed_kmh",
                "line": 101
            },
            {
                "callee_expression": "simulateLocationUpdate",
                "callee_args_str": "double speed_kmh, double heading_degrees, std::chrono::seconds time_delta",
                "line": 102
            },
            {
                "callee_expression": "findAddressCoordinates",
                "callee_args_str": "const std::string& address",
                "line": 103
            },
            {
                "callee_expression": "reportNavigationError",
                "callee_args_str": "NavigationStatus error_status, const std::string& details",
                "line": 104
            }
        ]
    },
    {
        "signature": "ecu_infotainment_navigation_system_h::~NavigationSystem",
        "raw_name": "~NavigationSystem",
        "file": "./ecu_infotainment/navigation_system.h",
        "line": 58,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_h::setDestination",
        "raw_name": "setDestination",
        "file": "./ecu_infotainment/navigation_system.h",
        "line": 61,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_h::setDestinationByAddress",
        "raw_name": "setDestinationByAddress",
        "file": "./ecu_infotainment/navigation_system.h",
        "line": 62,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_h::cancelNavigation",
        "raw_name": "cancelNavigation",
        "file": "./ecu_infotainment/navigation_system.h",
        "line": 63,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_h::getCurrentNavigationStatus",
        "raw_name": "getCurrentNavigationStatus",
        "file": "./ecu_infotainment/navigation_system.h",
        "line": 66,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_h::getCurrentGuidanceInstruction",
        "raw_name": "getCurrentGuidanceInstruction",
        "file": "./ecu_infotainment/navigation_system.h",
        "line": 67,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_h::getDistanceToNextManeuverKm",
        "raw_name": "getDistanceToNextManeuverKm",
        "file": "./ecu_infotainment/navigation_system.h",
        "line": 68,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_h::getDistanceToDestinationKm",
        "raw_name": "getDistanceToDestinationKm",
        "file": "./ecu_infotainment/navigation_system.h",
        "line": 69,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_h::getEstimatedTimeOfArrivalSeconds",
        "raw_name": "getEstimatedTimeOfArrivalSeconds",
        "file": "./ecu_infotainment/navigation_system.h",
        "line": 70,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_h::getGPSSignalStatus",
        "raw_name": "getGPSSignalStatus",
        "file": "./ecu_infotainment/navigation_system.h",
        "line": 73,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_h::getCurrentLocation",
        "raw_name": "getCurrentLocation",
        "file": "./ecu_infotainment/navigation_system.h",
        "line": 74,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_h::isMapDataAvailable",
        "raw_name": "isMapDataAvailable",
        "file": "./ecu_infotainment/navigation_system.h",
        "line": 75,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_h::updateNavigationState",
        "raw_name": "updateNavigationState",
        "file": "./ecu_infotainment/navigation_system.h",
        "line": 79,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_h::simulateGPSFix",
        "raw_name": "simulateGPSFix",
        "file": "./ecu_infotainment/navigation_system.h",
        "line": 97,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_h::calculateRoute",
        "raw_name": "calculateRoute",
        "file": "./ecu_infotainment/navigation_system.h",
        "line": 98,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_h::provideGuidanceUpdate",
        "raw_name": "provideGuidanceUpdate",
        "file": "./ecu_infotainment/navigation_system.h",
        "line": 99,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_h::checkOffRoute",
        "raw_name": "checkOffRoute",
        "file": "./ecu_infotainment/navigation_system.h",
        "line": 100,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_h::simulateLocationUpdate",
        "raw_name": "simulateLocationUpdate",
        "file": "./ecu_infotainment/navigation_system.h",
        "line": 101,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_h::findAddressCoordinates",
        "raw_name": "findAddressCoordinates",
        "file": "./ecu_infotainment/navigation_system.h",
        "line": 102,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_infotainment_navigation_system_h::reportNavigationError",
        "raw_name": "reportNavigationError",
        "file": "./ecu_infotainment/navigation_system.h",
        "line": 103,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::absStateToString",
        "raw_name": "absStateToString",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 9,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::switch",
        "raw_name": "switch",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 10,
        "end_line": 19,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::fault_code_",
        "raw_name": "fault_code_",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 26,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::LOG_INFO",
        "raw_name": "LOG_INFO",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 28,
        "end_line": 399,
        "logs_in_order": [
            {
                "level": "INFO",
                "message_args_str": "\"ABSControl: Initializing...\"",
                "line": 29,
                "raw_log_statement": "LOG_INFO(\"ABSControl: Initializing...\");"
            },
            {
                "level": "FATAL",
                "message_args_str": "\"ABSControl: BrakeActuatorInterface is NULL! ABS cannot function.\"",
                "line": 31,
                "raw_log_statement": "LOG_FATAL(\"ABSControl: BrakeActuatorInterface is NULL! ABS cannot function.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"ABSControl: Shutting down. Final state: %s.\", absStateToString(current_abs_state_)",
                "line": 39,
                "raw_log_statement": "LOG_INFO(\"ABSControl: Shutting down. Final state: %s.\", absStateToString(current_abs_state_));"
            },
            {
                "level": "INFO",
                "message_args_str": "\"ABSControl: Performing system initialization and self-checks.\"",
                "line": 43,
                "raw_log_statement": "LOG_INFO(\"ABSControl: Performing system initialization and self-checks.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"ABSControl: INTERVENTION - Releasing brake pressure for wheel %d.\", wheel.wheel_id",
                "line": 150,
                "raw_log_statement": "LOG_INFO(\"ABSControl: INTERVENTION - Releasing brake pressure for wheel %d.\", wheel.wheel_id);"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"ABSControl: Wheel %d pressure reduced to %.1f bar.\", wheel.wheel_id, wheel.applied_brake_pressure_bar",
                "line": 155,
                "raw_log_statement": "LOG_DEBUG(\"ABSControl: Wheel %d pressure reduced to %.1f bar.\", wheel.wheel_id, wheel.applied_brake_pressure_bar);"
            },
            {
                "level": "INFO",
                "message_args_str": "\"ABSControl: INTERVENTION - Reapplying brake pressure for wheel %d.\", wheel.wheel_id",
                "line": 165,
                "raw_log_statement": "LOG_INFO(\"ABSControl: INTERVENTION - Reapplying brake pressure for wheel %d.\", wheel.wheel_id);"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"ABSControl: Wheel %d pressure increased to %.1f bar.\", wheel.wheel_id, wheel.applied_brake_pressure_bar",
                "line": 171,
                "raw_log_statement": "LOG_DEBUG(\"ABSControl: Wheel %d pressure increased to %.1f bar.\", wheel.wheel_id, wheel.applied_brake_pressure_bar);"
            },
            {
                "level": "INFO",
                "message_args_str": "\"ABSControl: System still initializing. Braking commands ignored for this cycle.\"",
                "line": 270,
                "raw_log_statement": "LOG_INFO(\"ABSControl: System still initializing. Braking commands ignored for this cycle.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"ABSControl: Conditions no longer require ABS intervention (speed or pressure too low). Transitioning to INACTIVE.\"",
                "line": 290,
                "raw_log_statement": "LOG_INFO(\"ABSControl: Conditions no longer require ABS intervention (speed or pressure too low). Transitioning to INACTIVE.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"ABSControl: Conditions (Speed: %.1f, Pedal: %.1f) warrant ABS MONITORING.\", vehicle_reference_speed_kmh_, brake_pedal_pressure_input",
                "line": 294,
                "raw_log_statement": "LOG_INFO(\"ABSControl: Conditions (Speed: %.1f, Pedal: %.1f) warrant ABS MONITORING.\", vehicle_reference_speed_kmh_, brake_pedal_pressure_input);"
            },
            {
                "level": "INFO",
                "message_args_str": "\"ABSControl: INTERVENTION complete after %d cycles. Transitioning to MONITORING/INACTIVE.\", cycles_since_last_intervention_",
                "line": 351,
                "raw_log_statement": "LOG_INFO(\"ABSControl: INTERVENTION complete after %d cycles. Transitioning to MONITORING/INACTIVE.\", cycles_since_last_intervention_);"
            },
            {
                "level": "INFO",
                "message_args_str": "\"ABSControl: Running system diagnostics...\"",
                "line": 392,
                "raw_log_statement": "LOG_INFO(\"ABSControl: Running system diagnostics...\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"ABSControl: Initializing...\"",
                "line": 29
            },
            {
                "callee_expression": "LOG_FATAL",
                "callee_args_str": "\"ABSControl: BrakeActuatorInterface is NULL! ABS cannot function.\"",
                "line": 31
            },
            {
                "callee_expression": "initialize",
                "callee_args_str": "",
                "line": 35
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"ABSControl: Shutting down. Final state: %s.\", absStateToString(current_abs_state_)",
                "line": 39
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"ABSControl: Performing system initialization and self-checks.\"",
                "line": 43
            },
            {
                "callee_expression": "wheel_data_.clear",
                "callee_args_str": "",
                "line": 45
            },
            {
                "callee_expression": "clear",
                "callee_args_str": "",
                "line": 45
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"ABSControl: INTERVENTION - Releasing brake pressure for wheel %d.\", wheel.wheel_id",
                "line": 150
            },
            {
                "callee_expression": "std::max",
                "callee_args_str": "0.0, wheel.applied_brake_pressure_bar - 50.0",
                "line": 153
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"ABSControl: Wheel %d pressure reduced to %.1f bar.\", wheel.wheel_id, wheel.applied_brake_pressure_bar",
                "line": 155
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"ABSControl: INTERVENTION - Reapplying brake pressure for wheel %d.\", wheel.wheel_id",
                "line": 165
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"ABSControl: Wheel %d pressure increased to %.1f bar.\", wheel.wheel_id, wheel.applied_brake_pressure_bar",
                "line": 171
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"ABSControl: System still initializing. Braking commands ignored for this cycle.\"",
                "line": 270
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"ABSControl: Conditions no longer require ABS intervention (speed or pressure too low). Transitioning to INACTIVE.\"",
                "line": 290
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"ABSControl: Conditions (Speed: %.1f, Pedal: %.1f) warrant ABS MONITORING.\", vehicle_reference_speed_kmh_, brake_pedal_pressure_input",
                "line": 294
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"ABSControl: INTERVENTION complete after %d cycles. Transitioning to MONITORING/INACTIVE.\", cycles_since_last_intervention_",
                "line": 351
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"ABSControl: Running system diagnostics...\"",
                "line": 392
            },
            {
                "callee_expression": "std::this_thread::sleep_for",
                "callee_args_str": "std::chrono::milliseconds(20)",
                "line": 397
            }
        ]
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::LOG_FATAL",
        "raw_name": "LOG_FATAL",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 31,
        "end_line": 240,
        "logs_in_order": [
            {
                "level": "FATAL",
                "message_args_str": "\"ABSControl: FAULT - All wheel speed sensors are providing invalid data or no data! ABS disabled.\"",
                "line": 236,
                "raw_log_statement": "LOG_FATAL(\"ABSControl: FAULT - All wheel speed sensors are providing invalid data or no data! ABS disabled.\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_FATAL",
                "callee_args_str": "\"ABSControl: FAULT - All wheel speed sensors are providing invalid data or no data! ABS disabled.\"",
                "line": 236
            }
        ]
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::initialize",
        "raw_name": "initialize",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 34,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::ABSControl::~ABSControl",
        "raw_name": "ABSControl::~ABSControl",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 36,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::ABSControl::initialize",
        "raw_name": "ABSControl::initialize",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 40,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::for",
        "raw_name": "for",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 45,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::LOG_DEBUG",
        "raw_name": "LOG_DEBUG",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 47,
        "end_line": 429,
        "logs_in_order": [
            {
                "level": "DEBUG",
                "message_args_str": "\"ABSControl: Initialized data for wheel %d.\", i",
                "line": 48,
                "raw_log_statement": "LOG_DEBUG(\"ABSControl: Initialized data for wheel %d.\", i);"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"ABSControl: State is %s. Analyzing wheel speeds for lockup.\", absStateToString(current_abs_state_)",
                "line": 302,
                "raw_log_statement": "LOG_DEBUG(\"ABSControl: State is %s. Analyzing wheel speeds for lockup.\", absStateToString(current_abs_state_));"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"ABSControl: getCurrentState() -> %s.\", absStateToString(current_abs_state_)",
                "line": 381,
                "raw_log_statement": "LOG_DEBUG(\"ABSControl: getCurrentState() -> %s.\", absStateToString(current_abs_state_));"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"ABSControl: Wheel speed sensor connectivity OK.\"",
                "line": 405,
                "raw_log_statement": "LOG_DEBUG(\"ABSControl: Wheel speed sensor connectivity OK.\");"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"ABSControl: Actuator checks PASSED (simulated).\"",
                "line": 429,
                "raw_log_statement": "LOG_DEBUG(\"ABSControl: Actuator checks PASSED (simulated).\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"ABSControl: Initialized data for wheel %d.\", i",
                "line": 48
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"ABSControl: State is %s. Analyzing wheel speeds for lockup.\", absStateToString(current_abs_state_)",
                "line": 302
            },
            {
                "callee_expression": "wheel_data_.size",
                "callee_args_str": "",
                "line": 303
            },
            {
                "callee_expression": "for",
                "callee_args_str": "size_t i = 0; i < wheel_data_.size(",
                "line": 303
            },
            {
                "callee_expression": "detectWheelLockup",
                "callee_args_str": "wheel_data_[i], 1.0 /*g threshold, placeholder*/",
                "line": 310
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"ABSControl: getCurrentState() -> %s.\", absStateToString(current_abs_state_)",
                "line": 381
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"ABSControl: Wheel speed sensor connectivity OK.\"",
                "line": 405
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"ABSControl: Actuator checks PASSED (simulated).\"",
                "line": 429
            }
        ]
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::std::this_thread::sleep_for",
        "raw_name": "std::this_thread::sleep_for",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 49,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::runDiagnostics",
        "raw_name": "runDiagnostics",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 50,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::if",
        "raw_name": "if",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 52,
        "end_line": 418,
        "logs_in_order": [
            {
                "level": "DEBUG",
                "message_args_str": "\"ABSControl: Wheel %d high deceleration detected, potential lockup.\", wheel.wheel_id",
                "line": 139,
                "raw_log_statement": "LOG_DEBUG(\"ABSControl: Wheel %d high deceleration detected, potential lockup.\", wheel.wheel_id);"
            },
            {
                "level": "ERROR",
                "message_args_str": "\"ABSControl: DIAGNOSTIC FAULT - Brake actuator self-test failed. Code: %d\", brake_actuator_->getLastErrorCode()",
                "line": 411,
                "raw_log_statement": "LOG_ERROR(\"ABSControl: DIAGNOSTIC FAULT - Brake actuator self-test failed. Code: %d\", brake_actuator_->getLastErrorCode());"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"ABSControl: Brake actuator self-test PASSED.\"",
                "line": 415,
                "raw_log_statement": "LOG_DEBUG(\"ABSControl: Brake actuator self-test PASSED.\");"
            },
            {
                "level": "FATAL",
                "message_args_str": "\"ABSControl: BrakeActuatorInterface is NULL during diagnostics! This is a critical configuration fault.\"",
                "line": 418,
                "raw_log_statement": "LOG_FATAL(\"ABSControl: BrakeActuatorInterface is NULL during diagnostics! This is a critical configuration fault.\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"ABSControl: Wheel %d high deceleration detected, potential lockup.\", wheel.wheel_id",
                "line": 139
            },
            {
                "callee_expression": "brake_actuator_->getLastErrorCode",
                "callee_args_str": ")",
                "line": 411
            },
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"ABSControl: DIAGNOSTIC FAULT - Brake actuator self-test failed. Code: %d\", brake_actuator_->getLastErrorCode()",
                "line": 411
            },
            {
                "callee_expression": "brake_actuator_->getLastErrorCode",
                "callee_args_str": "",
                "line": 413
            },
            {
                "callee_expression": "getLastErrorCode",
                "callee_args_str": "",
                "line": 413
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"ABSControl: Brake actuator self-test PASSED.\"",
                "line": 415
            },
            {
                "callee_expression": "LOG_FATAL",
                "callee_args_str": "\"ABSControl: BrakeActuatorInterface is NULL during diagnostics! This is a critical configuration fault.\"",
                "line": 418
            }
        ]
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::LOG_ERROR",
        "raw_name": "LOG_ERROR",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 57,
        "end_line": 427,
        "logs_in_order": [
            {
                "level": "ERROR",
                "message_args_str": "\"ABSControl: Initialization failed due to fault %d found during diagnostics. System in FAULT_DETECTED state.\", fault_code_",
                "line": 58,
                "raw_log_statement": "LOG_ERROR(\"ABSControl: Initialization failed due to fault %d found during diagnostics. System in FAULT_DETECTED state.\", fault_code_);"
            },
            {
                "level": "ERROR",
                "message_args_str": "\"ABSControl: FAULT detected during cycle. Aborting ABS logic for this cycle. Fault code: %d\", fault_code_",
                "line": 281,
                "raw_log_statement": "LOG_ERROR(\"ABSControl: FAULT detected during cycle. Aborting ABS logic for this cycle. Fault code: %d\", fault_code_);"
            },
            {
                "level": "ERROR",
                "message_args_str": "\"ABSControl: DIAGNOSTIC FAULT - Wheel speed sensor connectivity check failed. Sensor_ID: %d\", (rand()%4)",
                "line": 401,
                "raw_log_statement": "LOG_ERROR(\"ABSControl: DIAGNOSTIC FAULT - Wheel speed sensor connectivity check failed. Sensor_ID: %d\", (rand()%4));"
            },
            {
                "level": "ERROR",
                "message_args_str": "\"ABSControl: DIAGNOSTIC FAULT - ABS hydraulic unit/valve check failed (simulated).\"",
                "line": 425,
                "raw_log_statement": "LOG_ERROR(\"ABSControl: DIAGNOSTIC FAULT - ABS hydraulic unit/valve check failed (simulated).\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"ABSControl: Initialization failed due to fault %d found during diagnostics. System in FAULT_DETECTED state.\", fault_code_",
                "line": 58
            },
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"ABSControl: FAULT detected during cycle. Aborting ABS logic for this cycle. Fault code: %d\", fault_code_",
                "line": 281
            },
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"ABSControl: DIAGNOSTIC FAULT - Wheel speed sensor connectivity check failed. Sensor_ID: %d\", (rand()%4)",
                "line": 401
            },
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"ABSControl: DIAGNOSTIC FAULT - ABS hydraulic unit/valve check failed (simulated).\"",
                "line": 425
            }
        ]
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::ABSControl::updateVehicleReferenceSpeed",
        "raw_name": "ABSControl::updateVehicleReferenceSpeed",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 60,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::LOG_WARNING",
        "raw_name": "LOG_WARNING",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 81,
        "end_line": 438,
        "logs_in_order": [
            {
                "level": "WARNING",
                "message_args_str": "\"ABSControl: Invalid speed reading (%.2f km/h) for wheel %d.\", wheel_speed_sensors[i].value, static_cast<int>(i)",
                "line": 82,
                "raw_log_statement": "LOG_WARNING(\"ABSControl: Invalid speed reading (%.2f km/h) for wheel %d.\", wheel_speed_sensors[i].value, static_cast<int>(i));"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"ABSControl: No valid wheel speed sensors to calculate reference speed. Using last known or zero.\"",
                "line": 101,
                "raw_log_statement": "LOG_WARNING(\"ABSControl: No valid wheel speed sensors to calculate reference speed. Using last known or zero.\");"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"ABSControl: System in FAULT state. ABS intervention disabled. Pedal Pressure: %.1f\", brake_pedal_pressure_input",
                "line": 261,
                "raw_log_statement": "LOG_WARNING(\"ABSControl: System in FAULT state. ABS intervention disabled. Pedal Pressure: %.1f\", brake_pedal_pressure_input);"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"ABSControl: Transitioning to INTERVENING state due to wheel lockup!\"",
                "line": 318,
                "raw_log_statement": "LOG_WARNING(\"ABSControl: Transitioning to INTERVENING state due to wheel lockup!\");"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"ABSControl: Diagnostics complete. FAULT DETECTED. Code: %d. System remains in FAULT_DETECTED state.\", fault_code_",
                "line": 434,
                "raw_log_statement": "LOG_WARNING(\"ABSControl: Diagnostics complete. FAULT DETECTED. Code: %d. System remains in FAULT_DETECTED state.\", fault_code_);"
            },
            {
                "level": "INFO",
                "message_args_str": "\"ABSControl: Diagnostics complete. All systems nominal. System is INACTIVE.\"",
                "line": 437,
                "raw_log_statement": "LOG_INFO(\"ABSControl: Diagnostics complete. All systems nominal. System is INACTIVE.\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"ABSControl: Invalid speed reading (%.2f km/h) for wheel %d.\", wheel_speed_sensors[i].value, static_cast<int>(i)",
                "line": 82
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"ABSControl: No valid wheel speed sensors to calculate reference speed. Using last known or zero.\"",
                "line": 101
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"ABSControl: System in FAULT state. ABS intervention disabled. Pedal Pressure: %.1f\", brake_pedal_pressure_input",
                "line": 261
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"ABSControl: Transitioning to INTERVENING state due to wheel lockup!\"",
                "line": 318
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"ABSControl: Diagnostics complete. FAULT DETECTED. Code: %d. System remains in FAULT_DETECTED state.\", fault_code_",
                "line": 434
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"ABSControl: Diagnostics complete. All systems nominal. System is INACTIVE.\"",
                "line": 437
            }
        ]
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::LOG_VERBOSE",
        "raw_name": "LOG_VERBOSE",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 107,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::ABSControl::detectWheelLockup",
        "raw_name": "ABSControl::detectWheelLockup",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 109,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::ABSControl::releasePressure",
        "raw_name": "ABSControl::releasePressure",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 147,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::ABSControl::holdPressure",
        "raw_name": "ABSControl::holdPressure",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 156,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::ABSControl::reapplyPressure",
        "raw_name": "ABSControl::reapplyPressure",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 162,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::ABSControl::modulateBrakePressure",
        "raw_name": "ABSControl::modulateBrakePressure",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 172,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::releasePressure",
        "raw_name": "releasePressure",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 183,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::holdPressure",
        "raw_name": "holdPressure",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 191,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::reapplyPressure",
        "raw_name": "reapplyPressure",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 194,
        "end_line": 345,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "reapplyPressure",
                "callee_args_str": "wd",
                "line": 340
            },
            {
                "callee_expression": "std::min",
                "callee_args_str": "wd.applied_brake_pressure_bar, brake_pedal_pressure_input",
                "line": 341
            }
        ]
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::std::min",
        "raw_name": "std::min",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 199,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::ABSControl::checkForSystemFaults",
        "raw_name": "ABSControl::checkForSystemFaults",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 200,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::updateVehicleReferenceSpeed",
        "raw_name": "updateVehicleReferenceSpeed",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 275,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::checkForSystemFaults",
        "raw_name": "checkForSystemFaults",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 278,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::modulateBrakePressure",
        "raw_name": "modulateBrakePressure",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 323,
        "end_line": 330,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "modulateBrakePressure",
                "callee_args_str": "wd",
                "line": 324
            },
            {
                "callee_expression": "LOG_VERBOSE",
                "callee_args_str": "\"ABSControl: Wheel %d not locking, applying pedal pressure %.1f bar.\", wd.wheel_id, brake_pedal_pressure_input",
                "line": 329
            }
        ]
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::ABSControl::getCurrentState",
        "raw_name": "ABSControl::getCurrentState",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 377,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::ABSControl::isABSInterventionActive",
        "raw_name": "ABSControl::isABSInterventionActive",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 383,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_cpp::ABSControl::runDiagnostics",
        "raw_name": "ABSControl::runDiagnostics",
        "file": "./ecu_safety_systems/abs_control.cpp",
        "line": 389,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_h::AirbagControl",
        "raw_name": "AirbagControl",
        "file": "./ecu_safety_systems/airbag_control.h",
        "line": 49,
        "end_line": 76,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "AirbagControl",
                "callee_args_str": "",
                "line": 51
            },
            {
                "callee_expression": "AirbagControl",
                "callee_args_str": "",
                "line": 52
            },
            {
                "callee_expression": "processImpactData",
                "callee_args_str": "const CrashSensorInput& impact_data, const VehicleState& vehicle_state",
                "line": 55
            },
            {
                "callee_expression": "runSystemCheck",
                "callee_args_str": "",
                "line": 59
            },
            {
                "callee_expression": "initializeSystem",
                "callee_args_str": "",
                "line": 70
            },
            {
                "callee_expression": "evaluateCrashSeverity",
                "callee_args_str": "const CrashSensorInput& impact_data, const VehicleState& vehicle_state",
                "line": 71
            },
            {
                "callee_expression": "triggerDeploymentSequence",
                "callee_args_str": "const CrashSensorInput& impact_data",
                "line": 72
            },
            {
                "callee_expression": "fireAirbag",
                "callee_args_str": "AirbagID airbag_to_fire, int event_id",
                "line": 73
            },
            {
                "callee_expression": "enterPostCrashSafeMode",
                "callee_args_str": "int event_id",
                "line": 74
            },
            {
                "callee_expression": "detectSystemFaults",
                "callee_args_str": "const CrashSensorInput& impact_data",
                "line": 75
            }
        ]
    },
    {
        "signature": "ecu_safety_systems_airbag_control_h::~AirbagControl",
        "raw_name": "~AirbagControl",
        "file": "./ecu_safety_systems/airbag_control.h",
        "line": 51,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_h::processImpactData",
        "raw_name": "processImpactData",
        "file": "./ecu_safety_systems/airbag_control.h",
        "line": 54,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_h::getSystemState",
        "raw_name": "getSystemState",
        "file": "./ecu_safety_systems/airbag_control.h",
        "line": 55,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_h::getDeployedAirbags",
        "raw_name": "getDeployedAirbags",
        "file": "./ecu_safety_systems/airbag_control.h",
        "line": 57,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_h::runSystemCheck",
        "raw_name": "runSystemCheck",
        "file": "./ecu_safety_systems/airbag_control.h",
        "line": 58,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_h::initializeSystem",
        "raw_name": "initializeSystem",
        "file": "./ecu_safety_systems/airbag_control.h",
        "line": 69,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_h::evaluateCrashSeverity",
        "raw_name": "evaluateCrashSeverity",
        "file": "./ecu_safety_systems/airbag_control.h",
        "line": 70,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_h::triggerDeploymentSequence",
        "raw_name": "triggerDeploymentSequence",
        "file": "./ecu_safety_systems/airbag_control.h",
        "line": 71,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_h::fireAirbag",
        "raw_name": "fireAirbag",
        "file": "./ecu_safety_systems/airbag_control.h",
        "line": 72,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_h::enterPostCrashSafeMode",
        "raw_name": "enterPostCrashSafeMode",
        "file": "./ecu_safety_systems/airbag_control.h",
        "line": 73,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_h::detectSystemFaults",
        "raw_name": "detectSystemFaults",
        "file": "./ecu_safety_systems/airbag_control.h",
        "line": 74,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_h::ABSControl",
        "raw_name": "ABSControl",
        "file": "./ecu_safety_systems/abs_control.h",
        "line": 31,
        "end_line": 63,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "ABSControl",
                "callee_args_str": "/* ecu_actuators::BrakeActuatorInterface* brake_actuator */",
                "line": 33
            },
            {
                "callee_expression": "ABSControl",
                "callee_args_str": "",
                "line": 34
            },
            {
                "callee_expression": "runDiagnostics",
                "callee_args_str": "",
                "line": 43
            },
            {
                "callee_expression": "initialize",
                "callee_args_str": "",
                "line": 55
            },
            {
                "callee_expression": "updateVehicleReferenceSpeed",
                "callee_args_str": "const std::vector<SensorData>& wheel_speed_sensors, double current_vehicle_speed",
                "line": 56
            },
            {
                "callee_expression": "detectWheelLockup",
                "callee_args_str": "const WheelSensorData& wheel, double deceleration_threshold",
                "line": 57
            },
            {
                "callee_expression": "modulateBrakePressure",
                "callee_args_str": "WheelSensorData& wheel_to_modulate",
                "line": 58
            },
            {
                "callee_expression": "releasePressure",
                "callee_args_str": "WheelSensorData& wheel",
                "line": 59
            },
            {
                "callee_expression": "holdPressure",
                "callee_args_str": "WheelSensorData& wheel",
                "line": 60
            },
            {
                "callee_expression": "reapplyPressure",
                "callee_args_str": "WheelSensorData& wheel",
                "line": 61
            },
            {
                "callee_expression": "checkForSystemFaults",
                "callee_args_str": "const std::vector<SensorData>& wheel_speed_sensors",
                "line": 62
            }
        ]
    },
    {
        "signature": "ecu_safety_systems_abs_control_h::~ABSControl",
        "raw_name": "~ABSControl",
        "file": "./ecu_safety_systems/abs_control.h",
        "line": 33,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_h::getCurrentState",
        "raw_name": "getCurrentState",
        "file": "./ecu_safety_systems/abs_control.h",
        "line": 39,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_h::isABSInterventionActive",
        "raw_name": "isABSInterventionActive",
        "file": "./ecu_safety_systems/abs_control.h",
        "line": 41,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_h::runDiagnostics",
        "raw_name": "runDiagnostics",
        "file": "./ecu_safety_systems/abs_control.h",
        "line": 42,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_h::initialize",
        "raw_name": "initialize",
        "file": "./ecu_safety_systems/abs_control.h",
        "line": 54,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_h::updateVehicleReferenceSpeed",
        "raw_name": "updateVehicleReferenceSpeed",
        "file": "./ecu_safety_systems/abs_control.h",
        "line": 55,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_h::detectWheelLockup",
        "raw_name": "detectWheelLockup",
        "file": "./ecu_safety_systems/abs_control.h",
        "line": 56,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_h::modulateBrakePressure",
        "raw_name": "modulateBrakePressure",
        "file": "./ecu_safety_systems/abs_control.h",
        "line": 57,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_h::releasePressure",
        "raw_name": "releasePressure",
        "file": "./ecu_safety_systems/abs_control.h",
        "line": 58,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_h::holdPressure",
        "raw_name": "holdPressure",
        "file": "./ecu_safety_systems/abs_control.h",
        "line": 59,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_h::reapplyPressure",
        "raw_name": "reapplyPressure",
        "file": "./ecu_safety_systems/abs_control.h",
        "line": 60,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_abs_control_h::checkForSystemFaults",
        "raw_name": "checkForSystemFaults",
        "file": "./ecu_safety_systems/abs_control.h",
        "line": 61,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::airbagSysStateToString",
        "raw_name": "airbagSysStateToString",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 9,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::switch",
        "raw_name": "switch",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 10,
        "end_line": 22,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::airbagIdToString",
        "raw_name": "airbagIdToString",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 24,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::fault_code_",
        "raw_name": "fault_code_",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 43,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::LOG_INFO",
        "raw_name": "LOG_INFO",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 45,
        "end_line": 342,
        "logs_in_order": [
            {
                "level": "INFO",
                "message_args_str": "\"AirbagControl: Initializing Airbag Control Unit (ACU)...\"",
                "line": 46,
                "raw_log_statement": "LOG_INFO(\"AirbagControl: Initializing Airbag Control Unit (ACU)...\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"AirbagControl: Shutting down ACU. Final system state: %s.\", airbagSysStateToString(system_state_)",
                "line": 55,
                "raw_log_statement": "LOG_INFO(\"AirbagControl: Shutting down ACU. Final system state: %s.\", airbagSysStateToString(system_state_));"
            },
            {
                "level": "INFO",
                "message_args_str": "\"AirbagControl: Performing ACU power-on self-test (POST)...\"",
                "line": 59,
                "raw_log_statement": "LOG_INFO(\"AirbagControl: Performing ACU power-on self-test (POST)...\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"AirbagControl: Event ID %d: Initiating airbag deployment sequence based on impact data.\", crash_event_id_counter_",
                "line": 192,
                "raw_log_statement": "LOG_INFO(\"AirbagControl: Event ID %d: Initiating airbag deployment sequence based on impact data.\", crash_event_id_counter_);"
            },
            {
                "level": "INFO",
                "message_args_str": "\"AirbagControl: Event ID %d: Passenger front airbag NOT deployed (passenger seat unoccupied).\", crash_event_id_counter_",
                "line": 206,
                "raw_log_statement": "LOG_INFO(\"AirbagControl: Event ID %d: Passenger front airbag NOT deployed (passenger seat unoccupied).\", crash_event_id_counter_);"
            },
            {
                "level": "INFO",
                "message_args_str": "\"AirbagControl: Event ID %d: Rollover detected, deploying curtain airbags.\", crash_event_id_counter_",
                "line": 230,
                "raw_log_statement": "LOG_INFO(\"AirbagControl: Event ID %d: Rollover detected, deploying curtain airbags.\", crash_event_id_counter_);"
            },
            {
                "level": "INFO",
                "message_args_str": "\"AirbagControl: System is OFF or Inoperative. Impact data processing skipped.\"",
                "line": 278,
                "raw_log_statement": "LOG_INFO(\"AirbagControl: System is OFF or Inoperative. Impact data processing skipped.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"AirbagControl: System in POST_CRASH_SAFE mode. No further impact processing for this event.\"",
                "line": 300,
                "raw_log_statement": "LOG_INFO(\"AirbagControl: System in POST_CRASH_SAFE mode. No further impact processing for this event.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"AirbagControl: Performing ACU ad-hoc system check...\"",
                "line": 317,
                "raw_log_statement": "LOG_INFO(\"AirbagControl: Performing ACU ad-hoc system check...\");"
            },
            {
                "level": "ERROR",
                "message_args_str": "\"AirbagControl: AD-HOC CHECK FAULT: Main G-Sensor unresponsive. Code: %d\", fault_code_",
                "line": 329,
                "raw_log_statement": "LOG_ERROR(\"AirbagControl: AD-HOC CHECK FAULT: Main G-Sensor unresponsive. Code: %d\", fault_code_);"
            },
            {
                "level": "INFO",
                "message_args_str": "\"AirbagControl: AD-HOC CHECK: G-Sensors OK.\"",
                "line": 331,
                "raw_log_statement": "LOG_INFO(\"AirbagControl: AD-HOC CHECK: G-Sensors OK.\");"
            },
            {
                "level": "INFO",
                "message_args_str": "\"AirbagControl: AD-HOC CHECK: Squib circuits OK.\"",
                "line": 342,
                "raw_log_statement": "LOG_INFO(\"AirbagControl: AD-HOC CHECK: Squib circuits OK.\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"AirbagControl: Initializing Airbag Control Unit (ACU)...\"",
                "line": 46
            },
            {
                "callee_expression": "airbag_deployed_status_.resize",
                "callee_args_str": "static_cast<int>(AirbagID::PASSENGER_KNEE) + 1, false",
                "line": 50
            },
            {
                "callee_expression": "resize",
                "callee_args_str": "static_cast<int>(AirbagID::PASSENGER_KNEE) + 1, false",
                "line": 50
            },
            {
                "callee_expression": "initializeSystem",
                "callee_args_str": "",
                "line": 51
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"AirbagControl: Shutting down ACU. Final system state: %s.\", airbagSysStateToString(system_state_)",
                "line": 55
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"AirbagControl: Performing ACU power-on self-test (POST)...\"",
                "line": 59
            },
            {
                "callee_expression": "std::this_thread::sleep_for",
                "callee_args_str": "std::chrono::milliseconds(100)",
                "line": 63
            },
            {
                "callee_expression": "runSystemCheck",
                "callee_args_str": "",
                "line": 65
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"AirbagControl: Event ID %d: Initiating airbag deployment sequence based on impact data.\", crash_event_id_counter_",
                "line": 192
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"AirbagControl: Event ID %d: Passenger front airbag NOT deployed (passenger seat unoccupied).\", crash_event_id_counter_",
                "line": 206
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"AirbagControl: Event ID %d: Rollover detected, deploying curtain airbags.\", crash_event_id_counter_",
                "line": 230
            },
            {
                "callee_expression": "fireAirbag",
                "callee_args_str": "AirbagID::DRIVER_SIDE_CURTAIN, crash_event_id_counter_",
                "line": 231
            },
            {
                "callee_expression": "fireAirbag",
                "callee_args_str": "AirbagID::PASSENGER_SIDE_CURTAIN, crash_event_id_counter_",
                "line": 232
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"AirbagControl: System is OFF or Inoperative. Impact data processing skipped.\"",
                "line": 278
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"AirbagControl: System in POST_CRASH_SAFE mode. No further impact processing for this event.\"",
                "line": 300
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"AirbagControl: Performing ACU ad-hoc system check...\"",
                "line": 317
            },
            {
                "callee_expression": "gen",
                "callee_args_str": "rd()",
                "line": 323
            },
            {
                "callee_expression": "rand",
                "callee_args_str": ") % 10",
                "line": 327
            },
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"AirbagControl: AD-HOC CHECK FAULT: Main G-Sensor unresponsive. Code: %d\", fault_code_",
                "line": 329
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"AirbagControl: AD-HOC CHECK: G-Sensors OK.\"",
                "line": 331
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"AirbagControl: AD-HOC CHECK: Squib circuits OK.\"",
                "line": 342
            }
        ]
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::initializeSystem",
        "raw_name": "initializeSystem",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 50,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::AirbagControl::~AirbagControl",
        "raw_name": "AirbagControl::~AirbagControl",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 52,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::AirbagControl::initializeSystem",
        "raw_name": "AirbagControl::initializeSystem",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 56,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::std::this_thread::sleep_for",
        "raw_name": "std::this_thread::sleep_for",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 62,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::runSystemCheck",
        "raw_name": "runSystemCheck",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 63,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::LOG_FATAL",
        "raw_name": "LOG_FATAL",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 69,
        "end_line": 74,
        "logs_in_order": [
            {
                "level": "FATAL",
                "message_args_str": "\"AirbagControl: ACU POST FAILED. Fault Code: %d. Airbag system is INOPERATIVE.\", fault_code_",
                "line": 70,
                "raw_log_statement": "LOG_FATAL(\"AirbagControl: ACU POST FAILED. Fault Code: %d. Airbag system is INOPERATIVE.\", fault_code_);"
            },
            {
                "level": "INFO",
                "message_args_str": "\"AirbagControl: ACU POST successful. System is READY and ARMED.\"",
                "line": 73,
                "raw_log_statement": "LOG_INFO(\"AirbagControl: ACU POST successful. System is READY and ARMED.\");"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_FATAL",
                "callee_args_str": "\"AirbagControl: ACU POST FAILED. Fault Code: %d. Airbag system is INOPERATIVE.\", fault_code_",
                "line": 70
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"AirbagControl: ACU POST successful. System is READY and ARMED.\"",
                "line": 73
            }
        ]
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::AirbagControl::detectSystemFaults",
        "raw_name": "AirbagControl::detectSystemFaults",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 75,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::gen",
        "raw_name": "gen",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 80,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::if",
        "raw_name": "if",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 86,
        "end_line": 295,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::LOG_VERBOSE",
        "raw_name": "LOG_VERBOSE",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 112,
        "end_line": 285,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "LOG_VERBOSE",
                "callee_args_str": "\"AirbagControl: Vehicle speed %.1f km/h is very low. Crash sensitivity might be reduced.\", vehicle_state.speed_kmh",
                "line": 282
            }
        ]
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::AirbagControl::evaluateCrashSeverity",
        "raw_name": "AirbagControl::evaluateCrashSeverity",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 114,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::AirbagControl::fireAirbag",
        "raw_name": "AirbagControl::fireAirbag",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 160,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::LOG_ERROR",
        "raw_name": "LOG_ERROR",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 164,
        "end_line": 167,
        "logs_in_order": [
            {
                "level": "ERROR",
                "message_args_str": "\"AirbagControl: Event ID %d: Invalid AirbagID %d specified for firing.\", event_id, airbag_idx",
                "line": 165,
                "raw_log_statement": "LOG_ERROR(\"AirbagControl: Event ID %d: Invalid AirbagID %d specified for firing.\", event_id, airbag_idx);"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_ERROR",
                "callee_args_str": "\"AirbagControl: Event ID %d: Invalid AirbagID %d specified for firing.\", event_id, airbag_idx",
                "line": 165
            }
        ]
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::AirbagControl::triggerDeploymentSequence",
        "raw_name": "AirbagControl::triggerDeploymentSequence",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 189,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::fireAirbag",
        "raw_name": "fireAirbag",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 199,
        "end_line": 223,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "fireAirbag",
                "callee_args_str": "AirbagID::DRIVER_FRONT, crash_event_id_counter_",
                "line": 200
            },
            {
                "callee_expression": "fireAirbag",
                "callee_args_str": "AirbagID::PASSENGER_FRONT, crash_event_id_counter_",
                "line": 202
            },
            {
                "callee_expression": "fireAirbag",
                "callee_args_str": "AirbagID::DRIVER_KNEE, crash_event_id_counter_",
                "line": 210
            },
            {
                "callee_expression": "fireAirbag",
                "callee_args_str": "AirbagID::PASSENGER_KNEE, crash_event_id_counter_",
                "line": 212
            },
            {
                "callee_expression": "fireAirbag",
                "callee_args_str": "AirbagID::DRIVER_SIDE_THORAX, crash_event_id_counter_",
                "line": 220
            },
            {
                "callee_expression": "fireAirbag",
                "callee_args_str": "AirbagID::DRIVER_SIDE_CURTAIN, crash_event_id_counter_",
                "line": 221
            },
            {
                "callee_expression": "fireAirbag",
                "callee_args_str": "AirbagID::PASSENGER_SIDE_THORAX, crash_event_id_counter_",
                "line": 223
            }
        ]
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::LOG_WARNING",
        "raw_name": "LOG_WARNING",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 203,
        "end_line": 255,
        "logs_in_order": [
            {
                "level": "WARNING",
                "message_args_str": "\"AirbagControl: Event ID %d: Passenger front airbag NOT deployed (passenger unbelted - simplified rule).\", crash_event_id_counter_",
                "line": 204,
                "raw_log_statement": "LOG_WARNING(\"AirbagControl: Event ID %d: Passenger front airbag NOT deployed (passenger unbelted - simplified rule).\", crash_event_id_counter_);"
            },
            {
                "level": "WARNING",
                "message_args_str": "\"AirbagControl: Event ID %d: Entering POST-CRASH SAFE MODE.\", event_id",
                "line": 241,
                "raw_log_statement": "LOG_WARNING(\"AirbagControl: Event ID %d: Entering POST-CRASH SAFE MODE.\", event_id);"
            },
            {
                "level": "INFO",
                "message_args_str": "\"AirbagControl: Event ID %d: Simulating post-crash actions: Doors unlocked, Hazards ON, Fuel pump OFF, eCall initiated.\", event_id",
                "line": 249,
                "raw_log_statement": "LOG_INFO(\"AirbagControl: Event ID %d: Simulating post-crash actions: Doors unlocked, Hazards ON, Fuel pump OFF, eCall initiated.\", event_id);"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"AirbagControl: Event ID %d: Passenger front airbag NOT deployed (passenger unbelted - simplified rule).\", crash_event_id_counter_",
                "line": 204
            },
            {
                "callee_expression": "LOG_WARNING",
                "callee_args_str": "\"AirbagControl: Event ID %d: Entering POST-CRASH SAFE MODE.\", event_id",
                "line": 241
            },
            {
                "callee_expression": "LOG_INFO",
                "callee_args_str": "\"AirbagControl: Event ID %d: Simulating post-crash actions: Doors unlocked, Hazards ON, Fuel pump OFF, eCall initiated.\", event_id",
                "line": 249
            }
        ]
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::enterPostCrashSafeMode",
        "raw_name": "enterPostCrashSafeMode",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 236,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::AirbagControl::enterPostCrashSafeMode",
        "raw_name": "AirbagControl::enterPostCrashSafeMode",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 238,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::for",
        "raw_name": "for",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 256,
        "end_line": 260,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "deployed_airbags_list_.size",
                "callee_args_str": "",
                "line": 257
            },
            {
                "callee_expression": "for",
                "callee_args_str": "size_t i = 0; i < deployed_airbags_list_.size(",
                "line": 257
            },
            {
                "callee_expression": "airbagIdToString",
                "callee_args_str": "deployed_airbags_list_[i]",
                "line": 258
            }
        ]
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::AirbagControl::processImpactData",
        "raw_name": "AirbagControl::processImpactData",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 263,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::detectSystemFaults",
        "raw_name": "detectSystemFaults",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 271,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::triggerDeploymentSequence",
        "raw_name": "triggerDeploymentSequence",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 291,
        "end_line": 293,
        "logs_in_order": [],
        "calls_in_order": [
            {
                "callee_expression": "triggerDeploymentSequence",
                "callee_args_str": "impact_data",
                "line": 292
            }
        ]
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::LOG_DEBUG",
        "raw_name": "LOG_DEBUG",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 302,
        "end_line": 314,
        "logs_in_order": [
            {
                "level": "DEBUG",
                "message_args_str": "\"AirbagControl: getSystemState() -> %s\", airbagSysStateToString(system_state_)",
                "line": 307,
                "raw_log_statement": "LOG_DEBUG(\"AirbagControl: getSystemState() -> %s\", airbagSysStateToString(system_state_));"
            },
            {
                "level": "DEBUG",
                "message_args_str": "\"AirbagControl: getDeployedAirbags() called. Count: %zu\", deployed_airbags_list_.size()",
                "line": 312,
                "raw_log_statement": "LOG_DEBUG(\"AirbagControl: getDeployedAirbags() called. Count: %zu\", deployed_airbags_list_.size());"
            }
        ],
        "calls_in_order": [
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"AirbagControl: getSystemState() -> %s\", airbagSysStateToString(system_state_)",
                "line": 307
            },
            {
                "callee_expression": "deployed_airbags_list_.size",
                "callee_args_str": ")",
                "line": 312
            },
            {
                "callee_expression": "LOG_DEBUG",
                "callee_args_str": "\"AirbagControl: getDeployedAirbags() called. Count: %zu\", deployed_airbags_list_.size()",
                "line": 312
            }
        ]
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::AirbagControl::getSystemState",
        "raw_name": "AirbagControl::getSystemState",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 304,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::AirbagControl::getDeployedAirbags",
        "raw_name": "AirbagControl::getDeployedAirbags",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 309,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    },
    {
        "signature": "ecu_safety_systems_airbag_control_cpp::AirbagControl::runSystemCheck",
        "raw_name": "AirbagControl::runSystemCheck",
        "file": "./ecu_safety_systems/airbag_control.cpp",
        "line": 314,
        "end_line": -1,
        "logs_in_order": [],
        "calls_in_order": []
    }
]