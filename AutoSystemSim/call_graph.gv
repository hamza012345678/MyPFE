// AutoSystemSim Call Graph
digraph {
	rankdir=LR size="8,5"
	"engine_manager.cpp::if" [label="engine_manager.cpp::if\n(engine_manager.cpp:37)"]
	"engine_manager.cpp::EngineManager::checkSystemPower" [label="EngineManager::checkSystemPower\n(engine_manager.cpp:45)"]
	"engine_manager.cpp::EngineManager::performIgnitionSequence" [label="EngineManager::performIgnitionSequence\n(engine_manager.cpp:62)"]
	"engine_manager.cpp::EngineManager::checkOilPressure" [label="EngineManager::checkOilPressure\n(engine_manager.cpp:94)"]
	"engine_manager.cpp::EngineManager::startEngine" [label="EngineManager::startEngine\n(engine_manager.cpp:106)"]
	"engine_manager.cpp::EngineManager::stopEngine" [label="EngineManager::stopEngine\n(engine_manager.cpp:156)"]
	"engine_manager.cpp::EngineManager::setTargetRPM" [label="EngineManager::setTargetRPM\n(engine_manager.cpp:190)"]
	"engine_manager.cpp::EngineManager::getCurrentRPM" [label="EngineManager::getCurrentRPM\n(engine_manager.cpp:219)"]
	"engine_manager.cpp::EngineManager::getEngineTemperature" [label="EngineManager::getEngineTemperature\n(engine_manager.cpp:224)"]
	"engine_manager.cpp::EngineManager::getEngineState" [label="EngineManager::getEngineState\n(engine_manager.cpp:229)"]
	"engine_manager.cpp::EngineManager::updateEngineParameters" [label="EngineManager::updateEngineParameters\n(engine_manager.cpp:238)"]
	"engine_manager.cpp::EngineManager::reportCriticalFault" [label="EngineManager::reportCriticalFault\n(engine_manager.cpp:277)"]
	"fuel_system.cpp::pump_primed_" [label="fuel_system.cpp::pump_primed_\n(fuel_system.cpp:8)"]
	"fuel_system.cpp::FuelSystem::primePump" [label="FuelSystem::primePump\n(fuel_system.cpp:16)"]
	"fuel_system.cpp::FuelSystem::checkFuelPressure" [label="FuelSystem::checkFuelPressure\n(fuel_system.cpp:24)"]
	"fuel_system.cpp::FuelSystem::injectFuel" [label="FuelSystem::injectFuel\n(fuel_system.cpp:40)"]
	"fuel_system.cpp::FuelSystem::getFuelLevel" [label="FuelSystem::getFuelLevel\n(fuel_system.cpp:68)"]
	"fuel_system.cpp::FuelSystem::simulateFuelConsumption" [label="FuelSystem::simulateFuelConsumption\n(fuel_system.cpp:73)"]
	"transmission_manager.cpp::if" [label="transmission_manager.cpp::if\n(transmission_manager.cpp:21)"]
	"transmission_manager.cpp::TransmissionManager::canShiftToMode" [label="TransmissionManager::canShiftToMode\n(transmission_manager.cpp:32)"]
	"transmission_manager.cpp::TransmissionManager::setTransmissionMode" [label="TransmissionManager::setTransmissionMode\n(transmission_manager.cpp:87)"]
	"transmission_manager.cpp::TransmissionManager::performGearShift" [label="TransmissionManager::performGearShift\n(transmission_manager.cpp:145)"]
	"transmission_manager.cpp::TransmissionManager::canShiftGear" [label="TransmissionManager::canShiftGear\n(transmission_manager.cpp:200)"]
	"transmission_manager.cpp::TransmissionManager::shiftUp" [label="TransmissionManager::shiftUp\n(transmission_manager.cpp:238)"]
	"transmission_manager.cpp::TransmissionManager::shiftDown" [label="TransmissionManager::shiftDown\n(transmission_manager.cpp:259)"]
	"transmission_manager.cpp::TransmissionManager::requestNeutral" [label="TransmissionManager::requestNeutral\n(transmission_manager.cpp:280)"]
	"transmission_manager.cpp::TransmissionManager::getCurrentMode" [label="TransmissionManager::getCurrentMode\n(transmission_manager.cpp:292)"]
	"transmission_manager.cpp::TransmissionManager::getCurrentGear" [label="TransmissionManager::getCurrentGear\n(transmission_manager.cpp:297)"]
	"transmission_manager.cpp::TransmissionManager::isShiftInProgress" [label="TransmissionManager::isShiftInProgress\n(transmission_manager.cpp:302)"]
	"transmission_manager.cpp::TransmissionManager::manageAutomaticShifting" [label="TransmissionManager::manageAutomaticShifting\n(transmission_manager.cpp:306)"]
	"transmission_manager.cpp::TransmissionManager::updateTransmissionTemperature" [label="TransmissionManager::updateTransmissionTemperature\n(transmission_manager.cpp:342)"]
	"transmission_manager.cpp::TransmissionManager::checkTransmissionHealth" [label="TransmissionManager::checkTransmissionHealth\n(transmission_manager.cpp:373)"]
	"transmission_manager.cpp::TransmissionManager::updateState" [label="TransmissionManager::updateState\n(transmission_manager.cpp:393)"]
	"power_monitor.cpp::PowerMonitor::isPowerStable" [label="PowerMonitor::isPowerStable\n(power_monitor.cpp:22)"]
	"power_monitor.cpp::PowerMonitor::getBatteryVoltage" [label="PowerMonitor::getBatteryVoltage\n(power_monitor.cpp:31)"]
	"power_monitor.cpp::PowerMonitor::checkVoltageLevels" [label="PowerMonitor::checkVoltageLevels\n(power_monitor.cpp:36)"]
	"power_monitor.cpp::PowerMonitor::assessSystemStability" [label="PowerMonitor::assessSystemStability\n(power_monitor.cpp:61)"]
	"power_monitor.cpp::PowerMonitor::updatePowerStatus" [label="PowerMonitor::updatePowerStatus\n(power_monitor.cpp:80)"]
	"power_monitor.cpp::PowerMonitor::simulateHighLoadEvent" [label="PowerMonitor::simulateHighLoadEvent\n(power_monitor.cpp:97)"]
	"lighting_control.h::BulbState" [label="lighting_control.h::BulbState\n(lighting_control.h:41)"]
	"window_control.h::obstruction_counter" [label="window_control.h::obstruction_counter\n(window_control.h:43)"]
	"calimate_control.cpp::airDistModeToString" [label="calimate_control.cpp::airDistModeToString\n(calimate_control.cpp:10)"]
	"calimate_control.cpp::acStatusToString" [label="calimate_control.cpp::acStatusToString\n(calimate_control.cpp:23)"]
	"calimate_control.cpp::if" [label="calimate_control.cpp::if\n(calimate_control.cpp:50)"]
	"calimate_control.cpp::ClimateControl::setTargetTemperature" [label="ClimateControl::setTargetTemperature\n(calimate_control.cpp:60)"]
	"calimate_control.cpp::ClimateControl::setFanSpeed" [label="ClimateControl::setFanSpeed\n(calimate_control.cpp:76)"]
	"calimate_control.cpp::ClimateControl::setAirDistribution" [label="ClimateControl::setAirDistribution\n(calimate_control.cpp:95)"]
	"calimate_control.cpp::ClimateControl::setACActive" [label="ClimateControl::setACActive\n(calimate_control.cpp:113)"]
	"calimate_control.cpp::ClimateControl::setRecirculationActive" [label="ClimateControl::setRecirculationActive\n(calimate_control.cpp:128)"]
	"calimate_control.cpp::ClimateControl::setAutoMode" [label="ClimateControl::setAutoMode\n(calimate_control.cpp:143)"]
	"calimate_control.cpp::ClimateControl::getCurrentInteriorTemp" [label="ClimateControl::getCurrentInteriorTemp\n(calimate_control.cpp:159)"]
	"calimate_control.cpp::ClimateControl::getTargetTemperature" [label="ClimateControl::getTargetTemperature\n(calimate_control.cpp:163)"]
	"calimate_control.cpp::ClimateControl::getFanSpeed" [label="ClimateControl::getFanSpeed\n(calimate_control.cpp:167)"]
	"calimate_control.cpp::ClimateControl::getAirDistribution" [label="ClimateControl::getAirDistribution\n(calimate_control.cpp:171)"]
	"calimate_control.cpp::ClimateControl::isACActive" [label="ClimateControl::isACActive\n(calimate_control.cpp:175)"]
	"calimate_control.cpp::ClimateControl::getACCompressorStatus" [label="ClimateControl::getACCompressorStatus\n(calimate_control.cpp:181)"]
	"calimate_control.cpp::ClimateControl::isRecirculationActive" [label="ClimateControl::isRecirculationActive\n(calimate_control.cpp:185)"]
	"calimate_control.cpp::ClimateControl::isAutoModeEnabled" [label="ClimateControl::isAutoModeEnabled\n(calimate_control.cpp:189)"]
	"calimate_control.cpp::ClimateControl::canActivateAC" [label="ClimateControl::canActivateAC\n(calimate_control.cpp:195)"]
	"calimate_control.cpp::ClimateControl::controlACCompressor" [label="ClimateControl::controlACCompressor\n(calimate_control.cpp:222)"]
	"calimate_control.cpp::ClimateControl::adjustFanForTemperature" [label="ClimateControl::adjustFanForTemperature\n(calimate_control.cpp:279)"]
	"calimate_control.cpp::ClimateControl::adjustAirDistributionForMode" [label="ClimateControl::adjustAirDistributionForMode\n(calimate_control.cpp:309)"]
	"calimate_control.cpp::ClimateControl::manageAutomaticOperation" [label="ClimateControl::manageAutomaticOperation\n(calimate_control.cpp:330)"]
	"calimate_control.cpp::ClimateControl::simulateTemperatureChange" [label="ClimateControl::simulateTemperatureChange\n(calimate_control.cpp:363)"]
	"window_control.cpp::windowPosToString" [label="window_control.cpp::windowPosToString\n(window_control.cpp:11)"]
	"window_control.cpp::windowIdToString" [label="window_control.cpp::windowIdToString\n(window_control.cpp:24)"]
	"window_control.cpp::if" [label="window_control.cpp::if\n(window_control.cpp:40)"]
	"window_control.cpp::WindowControl::findWindow" [label="WindowControl::findWindow\n(window_control.cpp:57)"]
	"window_control.cpp::WindowControl::canOperateWindow" [label="WindowControl::canOperateWindow\n(window_control.cpp:77)"]
	"window_control.cpp::WindowControl::moveWindow" [label="WindowControl::moveWindow\n(window_control.cpp:107)"]
	"window_control.cpp::WindowControl::stopWindowMovement" [label="WindowControl::stopWindowMovement\n(window_control.cpp:161)"]
	"window_control.cpp::WindowControl::setChildLock" [label="WindowControl::setChildLock\n(window_control.cpp:180)"]
	"window_control.cpp::WindowControl::setAllWindowsLock" [label="WindowControl::setAllWindowsLock\n(window_control.cpp:192)"]
	"window_control.cpp::WindowControl::getWindowPosition" [label="WindowControl::getWindowPosition\n(window_control.cpp:208)"]
	"window_control.cpp::WindowControl::checkAntiPinch" [label="WindowControl::checkAntiPinch\n(window_control.cpp:218)"]
	"window_control.cpp::WindowControl::simulateMotorMovement" [label="WindowControl::simulateMotorMovement\n(window_control.cpp:245)"]
	"window_control.cpp::WindowControl::updateWindowStates" [label="WindowControl::updateWindowStates\n(window_control.cpp:293)"]
	"lighting_control.cpp::if" [label="lighting_control.cpp::if\n(lighting_control.cpp:16)"]
	"lighting_control.cpp::LightingControl::findBulb" [label="LightingControl::findBulb\n(lighting_control.cpp:42)"]
	"lighting_control.cpp::LightingControl::setSpecificLight" [label="LightingControl::setSpecificLight\n(lighting_control.cpp:64)"]
	"lighting_control.cpp::LightingControl::setLightState" [label="LightingControl::setLightState\n(lighting_control.cpp:117)"]
	"lighting_control.cpp::LightingControl::activateHazardLights" [label="LightingControl::activateHazardLights\n(lighting_control.cpp:145)"]
	"lighting_control.cpp::LightingControl::activateIndicator" [label="LightingControl::activateIndicator\n(lighting_control.cpp:176)"]
	"lighting_control.cpp::LightingControl::getLightStatus" [label="LightingControl::getLightStatus\n(lighting_control.cpp:195)"]
	"lighting_control.cpp::LightingControl::performBulbCheck" [label="LightingControl::performBulbCheck\n(lighting_control.cpp:205)"]
	"lighting_control.cpp::LightingControl::handleAutomaticHeadlights" [label="LightingControl::handleAutomaticHeadlights\n(lighting_control.cpp:244)"]
	"lighting_control.cpp::LightingControl::checkBrakeLights" [label="LightingControl::checkBrakeLights\n(lighting_control.cpp:272)"]
	"lighting_control.cpp::LightingControl::updateLighting" [label="LightingControl::updateLighting\n(lighting_control.cpp:310)"]
	"logger.h::getCurrentTimestamp" [label="logger.h::getCurrentTimestamp\n(logger.h:11)"]
	"main_vehicle_controller.cpp::for" [label="main_vehicle_controller.cpp::for\n(main_vehicle_controller.cpp:44)"]
	"main_vehicle_controller.cpp::if" [label="main_vehicle_controller.cpp::if\n(main_vehicle_controller.cpp:53)"]
	"main_vehicle_controller.cpp::MainVehicleController::initializeAllSystems" [label="MainVehicleController::initializeAllSystems\n(main_vehicle_controller.cpp:73)"]
	"main_vehicle_controller.cpp::MainVehicleController::updateVehicleStateInputs" [label="MainVehicleController::updateVehicleStateInputs\n(main_vehicle_controller.cpp:90)"]
	"main_vehicle_controller.cpp::MainVehicleController::periodicECUUpdates" [label="MainVehicleController::periodicECUUpdates\n(main_vehicle_controller.cpp:147)"]
	"main_vehicle_controller.cpp::MainVehicleController::checkSystemHealth" [label="MainVehicleController::checkSystemHealth\n(main_vehicle_controller.cpp:185)"]
	"main_vehicle_controller.cpp::MainVehicleController::runMainLoop" [label="MainVehicleController::runMainLoop\n(main_vehicle_controller.cpp:211)"]
	"main_vehicle_controller.cpp::MainVehicleController::handleIgnitionOn" [label="MainVehicleController::handleIgnitionOn\n(main_vehicle_controller.cpp:254)"]
	"main_vehicle_controller.cpp::MainVehicleController::handleIgnitionOff" [label="MainVehicleController::handleIgnitionOff\n(main_vehicle_controller.cpp:275)"]
	"main_vehicle_controller.cpp::MainVehicleController::simulateDrivingCycle" [label="MainVehicleController::simulateDrivingCycle\n(main_vehicle_controller.cpp:293)"]
	"main_vehicle_controller.cpp::MainVehicleController::shutdownAllSystems" [label="MainVehicleController::shutdownAllSystems\n(main_vehicle_controller.cpp:365)"]
	"main.cpp::main" [label="main.cpp::main\n(main.cpp:8)"]
	"navigation_system.cpp::gpsStatusToString" [label="navigation_system.cpp::gpsStatusToString\n(navigation_system.cpp:10)"]
	"navigation_system.cpp::navStatusToString" [label="navigation_system.cpp::navStatusToString\n(navigation_system.cpp:22)"]
	"navigation_system.cpp::if" [label="navigation_system.cpp::if\n(navigation_system.cpp:50)"]
	"navigation_system.cpp::NavigationSystem::simulateGPSFix" [label="NavigationSystem::simulateGPSFix\n(navigation_system.cpp:66)"]
	"navigation_system.cpp::NavigationSystem::findAddressCoordinates" [label="NavigationSystem::findAddressCoordinates\n(navigation_system.cpp:116)"]
	"navigation_system.cpp::NavigationSystem::setDestination" [label="NavigationSystem::setDestination\n(navigation_system.cpp:126)"]
	"navigation_system.cpp::NavigationSystem::setDestinationByAddress" [label="NavigationSystem::setDestinationByAddress\n(navigation_system.cpp:153)"]
	"navigation_system.cpp::NavigationSystem::cancelNavigation" [label="NavigationSystem::cancelNavigation\n(navigation_system.cpp:163)"]
	"navigation_system.cpp::NavigationSystem::calculateRoute" [label="NavigationSystem::calculateRoute\n(navigation_system.cpp:180)"]
	"navigation_system.cpp::NavigationSystem::provideGuidanceUpdate" [label="NavigationSystem::provideGuidanceUpdate\n(navigation_system.cpp:227)"]
	"navigation_system.cpp::NavigationSystem::checkOffRoute" [label="NavigationSystem::checkOffRoute\n(navigation_system.cpp:249)"]
	"navigation_system.cpp::NavigationSystem::simulateLocationUpdate" [label="NavigationSystem::simulateLocationUpdate\n(navigation_system.cpp:264)"]
	"navigation_system.cpp::NavigationSystem::updateNavigationState" [label="NavigationSystem::updateNavigationState\n(navigation_system.cpp:316)"]
	"navigation_system.cpp::NavigationSystem::getCurrentNavigationStatus" [label="NavigationSystem::getCurrentNavigationStatus\n(navigation_system.cpp:383)"]
	"navigation_system.cpp::NavigationSystem::getCurrentGuidanceInstruction" [label="NavigationSystem::getCurrentGuidanceInstruction\n(navigation_system.cpp:388)"]
	"navigation_system.cpp::NavigationSystem::getDistanceToNextManeuverKm" [label="NavigationSystem::getDistanceToNextManeuverKm\n(navigation_system.cpp:400)"]
	"navigation_system.cpp::NavigationSystem::getDistanceToDestinationKm" [label="NavigationSystem::getDistanceToDestinationKm\n(navigation_system.cpp:412)"]
	"navigation_system.cpp::NavigationSystem::getEstimatedTimeOfArrivalSeconds" [label="NavigationSystem::getEstimatedTimeOfArrivalSeconds\n(navigation_system.cpp:432)"]
	"navigation_system.cpp::NavigationSystem::getGPSSignalStatus" [label="NavigationSystem::getGPSSignalStatus\n(navigation_system.cpp:445)"]
	"navigation_system.cpp::NavigationSystem::getCurrentLocation" [label="NavigationSystem::getCurrentLocation\n(navigation_system.cpp:450)"]
	"navigation_system.cpp::NavigationSystem::isMapDataAvailable" [label="NavigationSystem::isMapDataAvailable\n(navigation_system.cpp:456)"]
	"navigation_system.cpp::NavigationSystem::reportNavigationError" [label="NavigationSystem::reportNavigationError\n(navigation_system.cpp:461)"]
	"media_player.cpp::mediaSourceToString" [label="media_player.cpp::mediaSourceToString\n(media_player.cpp:9)"]
	"media_player.cpp::playbackStatusToString" [label="media_player.cpp::playbackStatusToString\n(media_player.cpp:22)"]
	"media_player.cpp::MediaPlayer::selectSource" [label="MediaPlayer::selectSource\n(media_player.cpp:53)"]
	"media_player.cpp::MediaPlayer::getCurrentSource" [label="MediaPlayer::getCurrentSource\n(media_player.cpp:121)"]
	"media_player.cpp::MediaPlayer::playTrackAtIndex" [label="MediaPlayer::playTrackAtIndex\n(media_player.cpp:126)"]
	"media_player.cpp::MediaPlayer::play" [label="MediaPlayer::play\n(media_player.cpp:151)"]
	"media_player.cpp::MediaPlayer::pause" [label="MediaPlayer::pause\n(media_player.cpp:200)"]
	"media_player.cpp::MediaPlayer::stop" [label="MediaPlayer::stop\n(media_player.cpp:221)"]
	"media_player.cpp::MediaPlayer::nextTrack" [label="MediaPlayer::nextTrack\n(media_player.cpp:243)"]
	"media_player.cpp::MediaPlayer::previousTrack" [label="MediaPlayer::previousTrack\n(media_player.cpp:257)"]
	"media_player.cpp::MediaPlayer::seek" [label="MediaPlayer::seek\n(media_player.cpp:280)"]
	"media_player.cpp::MediaPlayer::setVolume" [label="MediaPlayer::setVolume\n(media_player.cpp:311)"]
	"media_player.cpp::MediaPlayer::getVolume" [label="MediaPlayer::getVolume\n(media_player.cpp:330)"]
	"media_player.cpp::MediaPlayer::mute" [label="MediaPlayer::mute\n(media_player.cpp:335)"]
	"media_player.cpp::MediaPlayer::isMuted" [label="MediaPlayer::isMuted\n(media_player.cpp:347)"]
	"media_player.cpp::MediaPlayer::getPlaybackStatus" [label="MediaPlayer::getPlaybackStatus\n(media_player.cpp:352)"]
	"media_player.cpp::MediaPlayer::getCurrentTrackInfo" [label="MediaPlayer::getCurrentTrackInfo\n(media_player.cpp:357)"]
	"media_player.cpp::MediaPlayer::getCurrentTrackElapsedTime" [label="MediaPlayer::getCurrentTrackElapsedTime\n(media_player.cpp:369)"]
	"media_player.cpp::MediaPlayer::loadPlaylist" [label="MediaPlayer::loadPlaylist\n(media_player.cpp:384)"]
	"media_player.cpp::MediaPlayer::tuneRadio" [label="MediaPlayer::tuneRadio\n(media_player.cpp:401)"]
	"media_player.cpp::MediaPlayer::handleTrackEnd" [label="MediaPlayer::handleTrackEnd\n(media_player.cpp:426)"]
	"media_player.cpp::MediaPlayer::simulateTimePassing" [label="MediaPlayer::simulateTimePassing\n(media_player.cpp:444)"]
	"media_player.cpp::MediaPlayer::reportPlaybackError" [label="MediaPlayer::reportPlaybackError\n(media_player.cpp:474)"]
	"media_player.cpp::MediaPlayer::updatePlaybackState" [label="MediaPlayer::updatePlaybackState\n(media_player.cpp:481)"]
	"navigation_system.h::isValid" [label="navigation_system.h::isValid\n(navigation_system.h:19)"]
	"navigation_system.h::distanceTo" [label="navigation_system.h::distanceTo\n(navigation_system.h:24)"]
	"abs_control.cpp::absStateToString" [label="abs_control.cpp::absStateToString\n(abs_control.cpp:10)"]
	"abs_control.cpp::ABSControl::initialize" [label="ABSControl::initialize\n(abs_control.cpp:42)"]
	"abs_control.cpp::ABSControl::updateVehicleReferenceSpeed" [label="ABSControl::updateVehicleReferenceSpeed\n(abs_control.cpp:63)"]
	"abs_control.cpp::ABSControl::detectWheelLockup" [label="ABSControl::detectWheelLockup\n(abs_control.cpp:112)"]
	"abs_control.cpp::ABSControl::releasePressure" [label="ABSControl::releasePressure\n(abs_control.cpp:149)"]
	"abs_control.cpp::ABSControl::holdPressure" [label="ABSControl::holdPressure\n(abs_control.cpp:158)"]
	"abs_control.cpp::ABSControl::reapplyPressure" [label="ABSControl::reapplyPressure\n(abs_control.cpp:164)"]
	"abs_control.cpp::ABSControl::modulateBrakePressure" [label="ABSControl::modulateBrakePressure\n(abs_control.cpp:175)"]
	"abs_control.cpp::ABSControl::checkForSystemFaults" [label="ABSControl::checkForSystemFaults\n(abs_control.cpp:203)"]
	"abs_control.cpp::if" [label="abs_control.cpp::if\n(abs_control.cpp:260)"]
	"abs_control.cpp::for" [label="abs_control.cpp::for\n(abs_control.cpp:372)"]
	"abs_control.cpp::ABSControl::getCurrentState" [label="ABSControl::getCurrentState\n(abs_control.cpp:380)"]
	"abs_control.cpp::ABSControl::isABSInterventionActive" [label="ABSControl::isABSInterventionActive\n(abs_control.cpp:385)"]
	"abs_control.cpp::ABSControl::runDiagnostics" [label="ABSControl::runDiagnostics\n(abs_control.cpp:391)"]
	"airbag_control.cpp::airbagSysStateToString" [label="airbag_control.cpp::airbagSysStateToString\n(airbag_control.cpp:10)"]
	"airbag_control.cpp::airbagIdToString" [label="airbag_control.cpp::airbagIdToString\n(airbag_control.cpp:25)"]
	"airbag_control.cpp::AirbagControl::initializeSystem" [label="AirbagControl::initializeSystem\n(airbag_control.cpp:58)"]
	"airbag_control.cpp::AirbagControl::detectSystemFaults" [label="AirbagControl::detectSystemFaults\n(airbag_control.cpp:77)"]
	"airbag_control.cpp::AirbagControl::evaluateCrashSeverity" [label="AirbagControl::evaluateCrashSeverity\n(airbag_control.cpp:117)"]
	"airbag_control.cpp::AirbagControl::fireAirbag" [label="AirbagControl::fireAirbag\n(airbag_control.cpp:162)"]
	"airbag_control.cpp::AirbagControl::triggerDeploymentSequence" [label="AirbagControl::triggerDeploymentSequence\n(airbag_control.cpp:191)"]
	"airbag_control.cpp::AirbagControl::enterPostCrashSafeMode" [label="AirbagControl::enterPostCrashSafeMode\n(airbag_control.cpp:240)"]
	"airbag_control.cpp::AirbagControl::processImpactData" [label="AirbagControl::processImpactData\n(airbag_control.cpp:266)"]
	"airbag_control.cpp::AirbagControl::getSystemState" [label="AirbagControl::getSystemState\n(airbag_control.cpp:306)"]
	"airbag_control.cpp::AirbagControl::getDeployedAirbags" [label="AirbagControl::getDeployedAirbags\n(airbag_control.cpp:311)"]
	"airbag_control.cpp::AirbagControl::runSystemCheck" [label="AirbagControl::runSystemCheck\n(airbag_control.cpp:316)"]
	LOG_WARNING [label=LOG_WARNING shape=box style=dashed]
	"engine_manager.cpp":"":if -> LOG_WARNING [style=dashed]
	"engine_manager.cpp":"":if -> LOG_WARNING [style=dashed]
	"engine_manager.cpp":"":if -> "engine_manager.cpp":"":EngineManager::stopEngine
	"engine_manager.cpp":"":if -> "engine_manager.cpp":"":EngineManager::stopEngine
	LOG_INFO [label=LOG_INFO shape=box style=dashed]
	"engine_manager.cpp":"":EngineManager::checkSystemPower -> LOG_INFO [style=dashed]
	"engine_manager.cpp":"":EngineManager::checkSystemPower -> LOG_INFO [style=dashed]
	LOG_ERROR [label=LOG_ERROR shape=box style=dashed]
	"engine_manager.cpp":"":EngineManager::checkSystemPower -> LOG_ERROR [style=dashed]
	"engine_manager.cpp":"":EngineManager::checkSystemPower -> LOG_ERROR [style=dashed]
	"power_monitor_service_->isPowerStable" [label="power_monitor_service_->isPowerStable" shape=box style=dashed]
	"engine_manager.cpp":"":EngineManager::checkSystemPower -> "power_monitor_service_->isPowerStable" [style=dashed]
	"engine_manager.cpp":"":EngineManager::checkSystemPower -> "power_monitor.cpp":"":PowerMonitor::isPowerStable
	"engine_manager.cpp":"":EngineManager::checkSystemPower -> LOG_INFO [style=dashed]
	"engine_manager.cpp":"":EngineManager::checkSystemPower -> LOG_INFO [style=dashed]
	"engine_manager.cpp":"":EngineManager::checkSystemPower -> LOG_WARNING [style=dashed]
	"engine_manager.cpp":"":EngineManager::checkSystemPower -> LOG_WARNING [style=dashed]
	"engine_manager.cpp":"":EngineManager::performIgnitionSequence -> LOG_INFO [style=dashed]
	"engine_manager.cpp":"":EngineManager::performIgnitionSequence -> LOG_INFO [style=dashed]
	"engine_manager.cpp":"":EngineManager::performIgnitionSequence -> LOG_ERROR [style=dashed]
	"engine_manager.cpp":"":EngineManager::performIgnitionSequence -> LOG_ERROR [style=dashed]
	LOG_DEBUG [label=LOG_DEBUG shape=box style=dashed]
	"engine_manager.cpp":"":EngineManager::performIgnitionSequence -> LOG_DEBUG [style=dashed]
	"engine_manager.cpp":"":EngineManager::performIgnitionSequence -> LOG_DEBUG [style=dashed]
	"engine_manager.cpp":"":EngineManager::performIgnitionSequence -> LOG_DEBUG [style=dashed]
	"engine_manager.cpp":"":EngineManager::performIgnitionSequence -> LOG_DEBUG [style=dashed]
	sleep_for [label=sleep_for shape=box style=dashed]
	"engine_manager.cpp":"":EngineManager::performIgnitionSequence -> sleep_for [style=dashed]
	"std::this_thread::sleep_for" [label="std::this_thread::sleep_for" shape=box style=dashed]
	"engine_manager.cpp":"":EngineManager::performIgnitionSequence -> std:"":this_thread::sleep_for [style=dashed]
	"engine_manager.cpp":"":EngineManager::performIgnitionSequence -> LOG_INFO [style=dashed]
	"engine_manager.cpp":"":EngineManager::performIgnitionSequence -> LOG_INFO [style=dashed]
	"engine_manager.cpp":"":EngineManager::performIgnitionSequence -> LOG_INFO [style=dashed]
	"engine_manager.cpp":"":EngineManager::performIgnitionSequence -> LOG_INFO [style=dashed]
	"engine_manager.cpp":"":EngineManager::performIgnitionSequence -> LOG_WARNING [style=dashed]
	"engine_manager.cpp":"":EngineManager::performIgnitionSequence -> LOG_WARNING [style=dashed]
	"engine_manager.cpp":"":EngineManager::performIgnitionSequence -> LOG_ERROR [style=dashed]
	"engine_manager.cpp":"":EngineManager::performIgnitionSequence -> LOG_ERROR [style=dashed]
	"engine_manager.cpp":"":EngineManager::checkOilPressure -> LOG_DEBUG [style=dashed]
	"engine_manager.cpp":"":EngineManager::checkOilPressure -> LOG_DEBUG [style=dashed]
	"engine_manager.cpp":"":EngineManager::checkOilPressure -> LOG_WARNING [style=dashed]
	"engine_manager.cpp":"":EngineManager::checkOilPressure -> LOG_WARNING [style=dashed]
	LOG_VERBOSE [label=LOG_VERBOSE shape=box style=dashed]
	"engine_manager.cpp":"":EngineManager::checkOilPressure -> LOG_VERBOSE [style=dashed]
	"engine_manager.cpp":"":EngineManager::checkOilPressure -> LOG_VERBOSE [style=dashed]
	"engine_manager.cpp":"":EngineManager::startEngine -> LOG_INFO [style=dashed]
	"engine_manager.cpp":"":EngineManager::startEngine -> LOG_INFO [style=dashed]
	"engine_manager.cpp":"":EngineManager::startEngine -> LOG_WARNING [style=dashed]
	"engine_manager.cpp":"":EngineManager::startEngine -> LOG_WARNING [style=dashed]
	"engine_manager.cpp":"":EngineManager::startEngine -> LOG_WARNING [style=dashed]
	"engine_manager.cpp":"":EngineManager::startEngine -> LOG_WARNING [style=dashed]
	"engine_manager.cpp":"":EngineManager::startEngine -> LOG_DEBUG [style=dashed]
	"engine_manager.cpp":"":EngineManager::startEngine -> LOG_DEBUG [style=dashed]
	"engine_manager.cpp":"":EngineManager::startEngine -> LOG_ERROR [style=dashed]
	"engine_manager.cpp":"":EngineManager::startEngine -> LOG_ERROR [style=dashed]
	"engine_manager.cpp":"":EngineManager::startEngine -> "engine_manager.cpp":"":EngineManager::reportCriticalFault
	"engine_manager.cpp":"":EngineManager::startEngine -> "engine_manager.cpp":"":EngineManager::reportCriticalFault
	"engine_manager.cpp":"":EngineManager::startEngine -> LOG_ERROR [style=dashed]
	"engine_manager.cpp":"":EngineManager::startEngine -> LOG_ERROR [style=dashed]
	"fuel_system_.primePump" [label="fuel_system_.primePump" shape=box style=dashed]
	"engine_manager.cpp":"":EngineManager::startEngine -> "fuel_system_.primePump" [style=dashed]
	"engine_manager.cpp":"":EngineManager::startEngine -> "fuel_system.cpp":"":FuelSystem::primePump
	"engine_manager.cpp":"":EngineManager::startEngine -> LOG_INFO [style=dashed]
	"engine_manager.cpp":"":EngineManager::startEngine -> LOG_INFO [style=dashed]
	"engine_manager.cpp":"":EngineManager::startEngine -> LOG_ERROR [style=dashed]
	"engine_manager.cpp":"":EngineManager::startEngine -> LOG_ERROR [style=dashed]
	"engine_manager.cpp":"":EngineManager::startEngine -> "engine_manager.cpp":"":EngineManager::reportCriticalFault
	"engine_manager.cpp":"":EngineManager::startEngine -> "engine_manager.cpp":"":EngineManager::reportCriticalFault
	"engine_manager.cpp":"":EngineManager::startEngine -> LOG_ERROR [style=dashed]
	"engine_manager.cpp":"":EngineManager::startEngine -> LOG_ERROR [style=dashed]
	"engine_manager.cpp":"":EngineManager::stopEngine -> LOG_INFO [style=dashed]
	"engine_manager.cpp":"":EngineManager::stopEngine -> LOG_INFO [style=dashed]
	"engine_manager.cpp":"":EngineManager::stopEngine -> LOG_WARNING [style=dashed]
	"engine_manager.cpp":"":EngineManager::stopEngine -> LOG_WARNING [style=dashed]
	"engine_manager.cpp":"":EngineManager::stopEngine -> LOG_WARNING [style=dashed]
	"engine_manager.cpp":"":EngineManager::stopEngine -> LOG_WARNING [style=dashed]
	"engine_manager.cpp":"":EngineManager::stopEngine -> LOG_INFO [style=dashed]
	"engine_manager.cpp":"":EngineManager::stopEngine -> LOG_INFO [style=dashed]
	"engine_manager.cpp":"":EngineManager::stopEngine -> LOG_DEBUG [style=dashed]
	"engine_manager.cpp":"":EngineManager::stopEngine -> LOG_DEBUG [style=dashed]
	"engine_manager.cpp":"":EngineManager::stopEngine -> sleep_for [style=dashed]
	"engine_manager.cpp":"":EngineManager::stopEngine -> std:"":this_thread::sleep_for [style=dashed]
	"engine_manager.cpp":"":EngineManager::stopEngine -> LOG_INFO [style=dashed]
	"engine_manager.cpp":"":EngineManager::stopEngine -> LOG_INFO [style=dashed]
	"fuel_system_.cutFuelSupply" [label="fuel_system_.cutFuelSupply" shape=box style=dashed]
	"engine_manager.cpp":"":EngineManager::stopEngine -> "fuel_system_.cutFuelSupply" [style=dashed]
	cutFuelSupply [label=cutFuelSupply shape=box style=dashed]
	"engine_manager.cpp":"":EngineManager::stopEngine -> cutFuelSupply [style=dashed]
	"engine_manager.cpp":"":EngineManager::stopEngine -> LOG_INFO [style=dashed]
	"engine_manager.cpp":"":EngineManager::stopEngine -> LOG_INFO [style=dashed]
	"engine_manager.cpp":"":EngineManager::setTargetRPM -> LOG_INFO [style=dashed]
	"engine_manager.cpp":"":EngineManager::setTargetRPM -> LOG_INFO [style=dashed]
	"engine_manager.cpp":"":EngineManager::setTargetRPM -> LOG_WARNING [style=dashed]
	"engine_manager.cpp":"":EngineManager::setTargetRPM -> LOG_WARNING [style=dashed]
	"engine_manager.cpp":"":EngineManager::setTargetRPM -> LOG_ERROR [style=dashed]
	"engine_manager.cpp":"":EngineManager::setTargetRPM -> LOG_ERROR [style=dashed]
	"engine_manager.cpp":"":EngineManager::setTargetRPM -> LOG_DEBUG [style=dashed]
	"engine_manager.cpp":"":EngineManager::setTargetRPM -> LOG_DEBUG [style=dashed]
	min [label=min shape=box style=dashed]
	"engine_manager.cpp":"":EngineManager::setTargetRPM -> min [style=dashed]
	"std::min" [label="std::min" shape=box style=dashed]
	"engine_manager.cpp":"":EngineManager::setTargetRPM -> std:"":min [style=dashed]
	max [label=max shape=box style=dashed]
	"engine_manager.cpp":"":EngineManager::setTargetRPM -> max [style=dashed]
	"std::max" [label="std::max" shape=box style=dashed]
	"engine_manager.cpp":"":EngineManager::setTargetRPM -> std:"":max [style=dashed]
	"engine_manager.cpp":"":EngineManager::setTargetRPM -> LOG_INFO [style=dashed]
	"engine_manager.cpp":"":EngineManager::setTargetRPM -> LOG_INFO [style=dashed]
	"engine_manager.cpp":"":EngineManager::setTargetRPM -> "engine_manager.cpp":"":EngineManager::updateEngineParameters
	"engine_manager.cpp":"":EngineManager::setTargetRPM -> "engine_manager.cpp":"":EngineManager::updateEngineParameters
	"engine_manager.cpp":"":EngineManager::getCurrentRPM -> LOG_DEBUG [style=dashed]
	"engine_manager.cpp":"":EngineManager::getCurrentRPM -> LOG_DEBUG [style=dashed]
	"engine_manager.cpp":"":EngineManager::getEngineTemperature -> LOG_DEBUG [style=dashed]
	"engine_manager.cpp":"":EngineManager::getEngineTemperature -> LOG_DEBUG [style=dashed]
	"engine_manager.cpp":"":EngineManager::getEngineState -> LOG_DEBUG [style=dashed]
	"engine_manager.cpp":"":EngineManager::getEngineState -> LOG_DEBUG [style=dashed]
	to_string [label=to_string shape=box style=dashed]
	"engine_manager.cpp":"":EngineManager::getEngineState -> to_string [style=dashed]
	"std::to_string" [label="std::to_string" shape=box style=dashed]
	"engine_manager.cpp":"":EngineManager::getEngineState -> std:"":to_string [style=dashed]
	"engine_manager.cpp":"":EngineManager::updateEngineParameters -> LOG_DEBUG [style=dashed]
	"engine_manager.cpp":"":EngineManager::updateEngineParameters -> LOG_DEBUG [style=dashed]
	"engine_manager.cpp":"":EngineManager::updateEngineParameters -> LOG_WARNING [style=dashed]
	"engine_manager.cpp":"":EngineManager::updateEngineParameters -> LOG_WARNING [style=dashed]
	"engine_manager.cpp":"":EngineManager::updateEngineParameters -> "engine_manager.cpp":"":EngineManager::reportCriticalFault
	"engine_manager.cpp":"":EngineManager::updateEngineParameters -> "engine_manager.cpp":"":EngineManager::reportCriticalFault
	LOG_FATAL [label=LOG_FATAL shape=box style=dashed]
	"engine_manager.cpp":"":EngineManager::updateEngineParameters -> LOG_FATAL [style=dashed]
	"engine_manager.cpp":"":EngineManager::updateEngineParameters -> LOG_FATAL [style=dashed]
	"engine_manager.cpp":"":EngineManager::updateEngineParameters -> "engine_manager.cpp":"":EngineManager::stopEngine
	"engine_manager.cpp":"":EngineManager::updateEngineParameters -> "engine_manager.cpp":"":EngineManager::stopEngine
	"engine_manager.cpp":"":EngineManager::updateEngineParameters -> LOG_WARNING [style=dashed]
	"engine_manager.cpp":"":EngineManager::updateEngineParameters -> LOG_WARNING [style=dashed]
	"engine_manager.cpp":"":EngineManager::updateEngineParameters -> LOG_VERBOSE [style=dashed]
	"engine_manager.cpp":"":EngineManager::updateEngineParameters -> LOG_VERBOSE [style=dashed]
	"fault_description.c_str" [label="fault_description.c_str" shape=box style=dashed]
	"engine_manager.cpp":"":EngineManager::reportCriticalFault -> "fault_description.c_str" [style=dashed]
	c_str [label=c_str shape=box style=dashed]
	"engine_manager.cpp":"":EngineManager::reportCriticalFault -> c_str [style=dashed]
	"engine_manager.cpp":"":EngineManager::reportCriticalFault -> LOG_INFO [style=dashed]
	"engine_manager.cpp":"":EngineManager::reportCriticalFault -> LOG_INFO [style=dashed]
	"fuel_system.cpp":"":pump_primed_ -> LOG_INFO [style=dashed]
	"fuel_system.cpp":"":pump_primed_ -> LOG_INFO [style=dashed]
	"fuel_system.cpp":"":FuelSystem::primePump -> LOG_DEBUG [style=dashed]
	"fuel_system.cpp":"":FuelSystem::primePump -> LOG_DEBUG [style=dashed]
	"fuel_system.cpp":"":FuelSystem::primePump -> sleep_for [style=dashed]
	"fuel_system.cpp":"":FuelSystem::primePump -> std:"":this_thread::sleep_for [style=dashed]
	"fuel_system.cpp":"":FuelSystem::primePump -> LOG_INFO [style=dashed]
	"fuel_system.cpp":"":FuelSystem::primePump -> LOG_INFO [style=dashed]
	"fuel_system.cpp":"":FuelSystem::checkFuelPressure -> LOG_DEBUG [style=dashed]
	"fuel_system.cpp":"":FuelSystem::checkFuelPressure -> LOG_DEBUG [style=dashed]
	"fuel_system.cpp":"":FuelSystem::checkFuelPressure -> LOG_WARNING [style=dashed]
	"fuel_system.cpp":"":FuelSystem::checkFuelPressure -> LOG_WARNING [style=dashed]
	rand [label=rand shape=box style=dashed]
	"fuel_system.cpp":"":FuelSystem::checkFuelPressure -> rand [style=dashed]
	"fuel_system.cpp":"":FuelSystem::checkFuelPressure -> rand [style=dashed]
	"fuel_system.cpp":"":FuelSystem::checkFuelPressure -> LOG_ERROR [style=dashed]
	"fuel_system.cpp":"":FuelSystem::checkFuelPressure -> LOG_ERROR [style=dashed]
	"fuel_system.cpp":"":FuelSystem::checkFuelPressure -> LOG_INFO [style=dashed]
	"fuel_system.cpp":"":FuelSystem::checkFuelPressure -> LOG_INFO [style=dashed]
	"fuel_system.cpp":"":FuelSystem::injectFuel -> LOG_DEBUG [style=dashed]
	"fuel_system.cpp":"":FuelSystem::injectFuel -> LOG_DEBUG [style=dashed]
	"fuel_system.cpp":"":FuelSystem::injectFuel -> LOG_ERROR [style=dashed]
	"fuel_system.cpp":"":FuelSystem::injectFuel -> LOG_ERROR [style=dashed]
	"fuel_system.cpp":"":FuelSystem::injectFuel -> LOG_WARNING [style=dashed]
	"fuel_system.cpp":"":FuelSystem::injectFuel -> LOG_WARNING [style=dashed]
	"fuel_system.cpp":"":FuelSystem::injectFuel -> "fuel_system.cpp":"":FuelSystem::primePump
	"fuel_system.cpp":"":FuelSystem::injectFuel -> "fuel_system.cpp":"":FuelSystem::primePump
	"fuel_system.cpp":"":FuelSystem::injectFuel -> LOG_ERROR [style=dashed]
	"fuel_system.cpp":"":FuelSystem::injectFuel -> LOG_ERROR [style=dashed]
	"fuel_system.cpp":"":FuelSystem::injectFuel -> LOG_ERROR [style=dashed]
	"fuel_system.cpp":"":FuelSystem::injectFuel -> LOG_ERROR [style=dashed]
	"fuel_system.cpp":"":FuelSystem::injectFuel -> LOG_INFO [style=dashed]
	"fuel_system.cpp":"":FuelSystem::injectFuel -> LOG_INFO [style=dashed]
	"fuel_system.cpp":"":FuelSystem::injectFuel -> "fuel_system.cpp":"":FuelSystem::simulateFuelConsumption
	"fuel_system.cpp":"":FuelSystem::injectFuel -> "fuel_system.cpp":"":FuelSystem::simulateFuelConsumption
	"fuel_system.cpp":"":FuelSystem::getFuelLevel -> LOG_DEBUG [style=dashed]
	"fuel_system.cpp":"":FuelSystem::getFuelLevel -> LOG_DEBUG [style=dashed]
	"fuel_system.cpp":"":FuelSystem::simulateFuelConsumption -> LOG_VERBOSE [style=dashed]
	"fuel_system.cpp":"":FuelSystem::simulateFuelConsumption -> LOG_VERBOSE [style=dashed]
	"transmission_manager.cpp":"":if -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":if -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::canShiftToMode -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::canShiftToMode -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::canShiftToMode -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::canShiftToMode -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::canShiftToMode -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::canShiftToMode -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::canShiftToMode -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::canShiftToMode -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::canShiftToMode -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::canShiftToMode -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::canShiftToMode -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::canShiftToMode -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::canShiftToMode -> LOG_ERROR [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::canShiftToMode -> LOG_ERROR [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::canShiftToMode -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::canShiftToMode -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::setTransmissionMode -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::setTransmissionMode -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::setTransmissionMode -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::setTransmissionMode -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::setTransmissionMode -> LOG_ERROR [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::setTransmissionMode -> LOG_ERROR [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::setTransmissionMode -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::setTransmissionMode -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::setTransmissionMode -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::setTransmissionMode -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::setTransmissionMode -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::setTransmissionMode -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::setTransmissionMode -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::setTransmissionMode -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::setTransmissionMode -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::setTransmissionMode -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::setTransmissionMode -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::setTransmissionMode -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::performGearShift -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::performGearShift -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::performGearShift -> LOG_DEBUG [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::performGearShift -> LOG_DEBUG [style=dashed]
	"engine_manager_->requestTorqueReduction" [label="engine_manager_->requestTorqueReduction" shape=box style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::performGearShift -> "engine_manager_->requestTorqueReduction" [style=dashed]
	requestTorqueReduction [label=requestTorqueReduction shape=box style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::performGearShift -> requestTorqueReduction [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::performGearShift -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::performGearShift -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::performGearShift -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::performGearShift -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::performGearShift -> LOG_DEBUG [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::performGearShift -> LOG_DEBUG [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::performGearShift -> sleep_for [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::performGearShift -> std:"":this_thread::sleep_for [style=dashed]
	"mt19937 gen" [label="mt19937 gen" shape=box style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::performGearShift -> "mt19937 gen" [style=dashed]
	gen [label=gen shape=box style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::performGearShift -> gen [style=dashed]
	distrib [label=distrib shape=box style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::performGearShift -> distrib [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::performGearShift -> distrib [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::performGearShift -> distrib [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::performGearShift -> distrib [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::performGearShift -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::performGearShift -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::performGearShift -> LOG_ERROR [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::performGearShift -> LOG_ERROR [style=dashed]
	"engine_manager_->reportSystemFault" [label="engine_manager_->reportSystemFault" shape=box style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::performGearShift -> "engine_manager_->reportSystemFault" [style=dashed]
	reportSystemFault [label=reportSystemFault shape=box style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::performGearShift -> reportSystemFault [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::performGearShift -> LOG_DEBUG [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::performGearShift -> LOG_DEBUG [style=dashed]
	"engine_manager_->restoreNormalTorque" [label="engine_manager_->restoreNormalTorque" shape=box style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::performGearShift -> "engine_manager_->restoreNormalTorque" [style=dashed]
	restoreNormalTorque [label=restoreNormalTorque shape=box style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::performGearShift -> restoreNormalTorque [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::canShiftGear -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::canShiftGear -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::canShiftGear -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::canShiftGear -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::canShiftGear -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::canShiftGear -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::canShiftGear -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::canShiftGear -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::canShiftGear -> LOG_DEBUG [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::canShiftGear -> LOG_DEBUG [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::shiftUp -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::shiftUp -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::shiftUp -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::shiftUp -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::shiftUp -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::shiftUp -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::shiftUp -> "transmission_manager.cpp":"":TransmissionManager::performGearShift
	"transmission_manager.cpp":"":TransmissionManager::shiftUp -> "transmission_manager.cpp":"":TransmissionManager::performGearShift
	"transmission_manager.cpp":"":TransmissionManager::shiftDown -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::shiftDown -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::shiftDown -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::shiftDown -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::shiftDown -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::shiftDown -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::shiftDown -> "transmission_manager.cpp":"":TransmissionManager::performGearShift
	"transmission_manager.cpp":"":TransmissionManager::shiftDown -> "transmission_manager.cpp":"":TransmissionManager::performGearShift
	"transmission_manager.cpp":"":TransmissionManager::requestNeutral -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::requestNeutral -> LOG_INFO [style=dashed]
	"return setTransmissionMode" [label="return setTransmissionMode" shape=box style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::requestNeutral -> "return setTransmissionMode" [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::requestNeutral -> "transmission_manager.cpp":"":TransmissionManager::setTransmissionMode
	"transmission_manager.cpp":"":TransmissionManager::requestNeutral -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::requestNeutral -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::getCurrentMode -> LOG_DEBUG [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::getCurrentMode -> LOG_DEBUG [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::getCurrentGear -> LOG_DEBUG [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::getCurrentGear -> LOG_DEBUG [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::manageAutomaticShifting -> "transmission_manager.cpp":"":TransmissionManager::performGearShift
	"transmission_manager.cpp":"":TransmissionManager::manageAutomaticShifting -> "transmission_manager.cpp":"":TransmissionManager::performGearShift
	"transmission_manager.cpp":"":TransmissionManager::manageAutomaticShifting -> "transmission_manager.cpp":"":TransmissionManager::performGearShift
	"transmission_manager.cpp":"":TransmissionManager::manageAutomaticShifting -> "transmission_manager.cpp":"":TransmissionManager::performGearShift
	"transmission_manager.cpp":"":TransmissionManager::updateTransmissionTemperature -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::updateTransmissionTemperature -> LOG_WARNING [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::updateTransmissionTemperature -> LOG_ERROR [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::updateTransmissionTemperature -> LOG_ERROR [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::updateTransmissionTemperature -> "engine_manager_->reportSystemFault" [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::updateTransmissionTemperature -> reportSystemFault [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::updateTransmissionTemperature -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::updateTransmissionTemperature -> LOG_INFO [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::updateTransmissionTemperature -> LOG_VERBOSE [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::updateTransmissionTemperature -> LOG_VERBOSE [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::checkTransmissionHealth -> LOG_DEBUG [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::checkTransmissionHealth -> LOG_DEBUG [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::checkTransmissionHealth -> "mt19937 gen" [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::checkTransmissionHealth -> gen [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::checkTransmissionHealth -> distrib [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::checkTransmissionHealth -> distrib [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::checkTransmissionHealth -> rand [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::checkTransmissionHealth -> rand [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::checkTransmissionHealth -> LOG_ERROR [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::checkTransmissionHealth -> LOG_ERROR [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::checkTransmissionHealth -> "engine_manager_->reportSystemFault" [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::checkTransmissionHealth -> reportSystemFault [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::checkTransmissionHealth -> LOG_VERBOSE [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::checkTransmissionHealth -> LOG_VERBOSE [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::updateState -> "transmission_manager.cpp":"":TransmissionManager::manageAutomaticShifting
	"transmission_manager.cpp":"":TransmissionManager::updateState -> "transmission_manager.cpp":"":TransmissionManager::manageAutomaticShifting
	"transmission_manager.cpp":"":TransmissionManager::updateState -> LOG_DEBUG [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::updateState -> LOG_DEBUG [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::updateState -> "transmission_manager.cpp":"":TransmissionManager::updateTransmissionTemperature
	"transmission_manager.cpp":"":TransmissionManager::updateState -> "transmission_manager.cpp":"":TransmissionManager::updateTransmissionTemperature
	"transmission_manager.cpp":"":TransmissionManager::updateState -> "transmission_manager.cpp":"":TransmissionManager::checkTransmissionHealth
	"transmission_manager.cpp":"":TransmissionManager::updateState -> "transmission_manager.cpp":"":TransmissionManager::checkTransmissionHealth
	"transmission_manager.cpp":"":TransmissionManager::updateState -> LOG_DEBUG [style=dashed]
	"transmission_manager.cpp":"":TransmissionManager::updateState -> LOG_DEBUG [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::isPowerStable -> LOG_DEBUG [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::isPowerStable -> LOG_DEBUG [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::isPowerStable -> LOG_WARNING [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::isPowerStable -> LOG_WARNING [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::getBatteryVoltage -> LOG_DEBUG [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::getBatteryVoltage -> LOG_DEBUG [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::checkVoltageLevels -> LOG_DEBUG [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::checkVoltageLevels -> LOG_DEBUG [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::checkVoltageLevels -> "mt19937 gen" [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::checkVoltageLevels -> gen [style=dashed]
	distr [label=distr shape=box style=dashed]
	"power_monitor.cpp":"":PowerMonitor::checkVoltageLevels -> distr [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::checkVoltageLevels -> distr [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::checkVoltageLevels -> distr [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::checkVoltageLevels -> distr [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::checkVoltageLevels -> LOG_WARNING [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::checkVoltageLevels -> LOG_WARNING [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::checkVoltageLevels -> LOG_INFO [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::checkVoltageLevels -> LOG_INFO [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::checkVoltageLevels -> LOG_VERBOSE [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::checkVoltageLevels -> LOG_VERBOSE [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::assessSystemStability -> LOG_DEBUG [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::assessSystemStability -> LOG_DEBUG [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::assessSystemStability -> LOG_ERROR [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::assessSystemStability -> LOG_ERROR [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::assessSystemStability -> LOG_WARNING [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::assessSystemStability -> LOG_WARNING [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::assessSystemStability -> LOG_INFO [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::assessSystemStability -> LOG_INFO [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::updatePowerStatus -> LOG_INFO [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::updatePowerStatus -> LOG_INFO [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::updatePowerStatus -> "power_monitor.cpp":"":PowerMonitor::checkVoltageLevels
	"power_monitor.cpp":"":PowerMonitor::updatePowerStatus -> "power_monitor.cpp":"":PowerMonitor::checkVoltageLevels
	"power_monitor.cpp":"":PowerMonitor::updatePowerStatus -> sleep_for [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::updatePowerStatus -> std:"":this_thread::sleep_for [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::updatePowerStatus -> LOG_DEBUG [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::updatePowerStatus -> LOG_DEBUG [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::updatePowerStatus -> "power_monitor.cpp":"":PowerMonitor::assessSystemStability
	"power_monitor.cpp":"":PowerMonitor::updatePowerStatus -> "power_monitor.cpp":"":PowerMonitor::assessSystemStability
	"power_monitor.cpp":"":PowerMonitor::updatePowerStatus -> LOG_INFO [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::updatePowerStatus -> LOG_INFO [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::updatePowerStatus -> LOG_WARNING [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::updatePowerStatus -> LOG_WARNING [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::simulateHighLoadEvent -> LOG_WARNING [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::simulateHighLoadEvent -> LOG_WARNING [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::simulateHighLoadEvent -> "power_monitor.cpp":"":PowerMonitor::checkVoltageLevels
	"power_monitor.cpp":"":PowerMonitor::simulateHighLoadEvent -> "power_monitor.cpp":"":PowerMonitor::checkVoltageLevels
	"power_monitor.cpp":"":PowerMonitor::simulateHighLoadEvent -> "power_monitor.cpp":"":PowerMonitor::assessSystemStability
	"power_monitor.cpp":"":PowerMonitor::simulateHighLoadEvent -> "power_monitor.cpp":"":PowerMonitor::assessSystemStability
	"power_monitor.cpp":"":PowerMonitor::simulateHighLoadEvent -> LOG_ERROR [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::simulateHighLoadEvent -> LOG_ERROR [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::simulateHighLoadEvent -> LOG_INFO [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::simulateHighLoadEvent -> LOG_INFO [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::simulateHighLoadEvent -> max [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::simulateHighLoadEvent -> std:"":max [style=dashed]
	"power_monitor.cpp":"":PowerMonitor::simulateHighLoadEvent -> "power_monitor.cpp":"":PowerMonitor::checkVoltageLevels
	"power_monitor.cpp":"":PowerMonitor::simulateHighLoadEvent -> "power_monitor.cpp":"":PowerMonitor::checkVoltageLevels
	"power_monitor.cpp":"":PowerMonitor::simulateHighLoadEvent -> "power_monitor.cpp":"":PowerMonitor::assessSystemStability
	"power_monitor.cpp":"":PowerMonitor::simulateHighLoadEvent -> "power_monitor.cpp":"":PowerMonitor::assessSystemStability
	"calimate_control.cpp":"":if -> LOG_WARNING [style=dashed]
	"calimate_control.cpp":"":if -> LOG_WARNING [style=dashed]
	"calimate_control.cpp":"":if -> "calimate_control.cpp":"":ClimateControl::manageAutomaticOperation
	"calimate_control.cpp":"":if -> "calimate_control.cpp":"":ClimateControl::manageAutomaticOperation
	"calimate_control.cpp":"":if -> "calimate_control.cpp":"":ClimateControl::simulateTemperatureChange
	"calimate_control.cpp":"":if -> "calimate_control.cpp":"":ClimateControl::simulateTemperatureChange
	"calimate_control.cpp":"":if -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":if -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setTargetTemperature -> max [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setTargetTemperature -> std:"":max [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setTargetTemperature -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setTargetTemperature -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setTargetTemperature -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setTargetTemperature -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setTargetTemperature -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setTargetTemperature -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setTargetTemperature -> "calimate_control.cpp":"":ClimateControl::manageAutomaticOperation
	"calimate_control.cpp":"":ClimateControl::setTargetTemperature -> "calimate_control.cpp":"":ClimateControl::manageAutomaticOperation
	"calimate_control.cpp":"":ClimateControl::setFanSpeed -> max [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setFanSpeed -> std:"":max [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setFanSpeed -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setFanSpeed -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setFanSpeed -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setFanSpeed -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setFanSpeed -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setFanSpeed -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setFanSpeed -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setFanSpeed -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setAirDistribution -> "calimate_control.cpp":"":airDistModeToString
	"calimate_control.cpp":"":ClimateControl::setAirDistribution -> "calimate_control.cpp":"":airDistModeToString
	"calimate_control.cpp":"":ClimateControl::setAirDistribution -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setAirDistribution -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setAirDistribution -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setAirDistribution -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setAirDistribution -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setAirDistribution -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setACActive -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setACActive -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setACActive -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setACActive -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setRecirculationActive -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setRecirculationActive -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setRecirculationActive -> LOG_WARNING [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setRecirculationActive -> LOG_WARNING [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setAutoMode -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setAutoMode -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setAutoMode -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setAutoMode -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setAutoMode -> "calimate_control.cpp":"":ClimateControl::manageAutomaticOperation
	"calimate_control.cpp":"":ClimateControl::setAutoMode -> "calimate_control.cpp":"":ClimateControl::manageAutomaticOperation
	"calimate_control.cpp":"":ClimateControl::setAutoMode -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::setAutoMode -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::getCurrentInteriorTemp -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::getCurrentInteriorTemp -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::getTargetTemperature -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::getTargetTemperature -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::getFanSpeed -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::getFanSpeed -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::getAirDistribution -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::getAirDistribution -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::isACActive -> "calimate_control.cpp":"":acStatusToString
	"calimate_control.cpp":"":ClimateControl::isACActive -> "calimate_control.cpp":"":acStatusToString
	"calimate_control.cpp":"":ClimateControl::getACCompressorStatus -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::getACCompressorStatus -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::isRecirculationActive -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::isRecirculationActive -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::isAutoModeEnabled -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::isAutoModeEnabled -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::canActivateAC -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::canActivateAC -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::canActivateAC -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::canActivateAC -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::canActivateAC -> LOG_WARNING [style=dashed]
	"calimate_control.cpp":"":ClimateControl::canActivateAC -> LOG_WARNING [style=dashed]
	"calimate_control.cpp":"":ClimateControl::canActivateAC -> LOG_WARNING [style=dashed]
	"calimate_control.cpp":"":ClimateControl::canActivateAC -> LOG_WARNING [style=dashed]
	"calimate_control.cpp":"":ClimateControl::canActivateAC -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::canActivateAC -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::controlACCompressor -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::controlACCompressor -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::controlACCompressor -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::controlACCompressor -> LOG_INFO [style=dashed]
	"power_monitor_->simulateHighLoadEvent" [label="power_monitor_->simulateHighLoadEvent" shape=box style=dashed]
	"calimate_control.cpp":"":ClimateControl::controlACCompressor -> "power_monitor_->simulateHighLoadEvent" [style=dashed]
	"calimate_control.cpp":"":ClimateControl::controlACCompressor -> "engine_manager.cpp":"":if
	"calimate_control.cpp":"":ClimateControl::controlACCompressor -> "power_monitor_->simulateHighLoadEvent" [style=dashed]
	"calimate_control.cpp":"":ClimateControl::controlACCompressor -> "power_monitor.cpp":"":PowerMonitor::simulateHighLoadEvent
	"calimate_control.cpp":"":ClimateControl::controlACCompressor -> "calimate_control.cpp":"":acStatusToString
	"calimate_control.cpp":"":ClimateControl::controlACCompressor -> "calimate_control.cpp":"":acStatusToString
	"calimate_control.cpp":"":ClimateControl::controlACCompressor -> LOG_ERROR [style=dashed]
	"calimate_control.cpp":"":ClimateControl::controlACCompressor -> LOG_ERROR [style=dashed]
	"calimate_control.cpp":"":ClimateControl::controlACCompressor -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::controlACCompressor -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::controlACCompressor -> "power_monitor_->simulateHighLoadEvent" [style=dashed]
	"calimate_control.cpp":"":ClimateControl::controlACCompressor -> "engine_manager.cpp":"":if
	"calimate_control.cpp":"":ClimateControl::controlACCompressor -> "calimate_control.cpp":"":acStatusToString
	"calimate_control.cpp":"":ClimateControl::controlACCompressor -> "calimate_control.cpp":"":acStatusToString
	"calimate_control.cpp":"":ClimateControl::adjustFanForTemperature -> min [style=dashed]
	"calimate_control.cpp":"":ClimateControl::adjustFanForTemperature -> std:"":min [style=dashed]
	"calimate_control.cpp":"":ClimateControl::adjustFanForTemperature -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::adjustFanForTemperature -> LOG_DEBUG [style=dashed]
	"calimate_control.cpp":"":ClimateControl::adjustAirDistributionForMode -> "calimate_control.cpp":"":airDistModeToString
	"calimate_control.cpp":"":ClimateControl::adjustAirDistributionForMode -> "calimate_control.cpp":"":airDistModeToString
	"calimate_control.cpp":"":ClimateControl::manageAutomaticOperation -> "calimate_control.cpp":"":ClimateControl::adjustFanForTemperature
	"calimate_control.cpp":"":ClimateControl::manageAutomaticOperation -> "calimate_control.cpp":"":ClimateControl::adjustFanForTemperature
	"calimate_control.cpp":"":ClimateControl::manageAutomaticOperation -> "calimate_control.cpp":"":ClimateControl::adjustAirDistributionForMode
	"calimate_control.cpp":"":ClimateControl::manageAutomaticOperation -> "calimate_control.cpp":"":ClimateControl::adjustAirDistributionForMode
	"calimate_control.cpp":"":ClimateControl::manageAutomaticOperation -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::manageAutomaticOperation -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::manageAutomaticOperation -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::manageAutomaticOperation -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::manageAutomaticOperation -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::manageAutomaticOperation -> LOG_INFO [style=dashed]
	"calimate_control.cpp":"":ClimateControl::simulateTemperatureChange -> LOG_VERBOSE [style=dashed]
	"calimate_control.cpp":"":ClimateControl::simulateTemperatureChange -> LOG_VERBOSE [style=dashed]
	"calimate_control.cpp":"":ClimateControl::simulateTemperatureChange -> LOG_VERBOSE [style=dashed]
	"calimate_control.cpp":"":ClimateControl::simulateTemperatureChange -> LOG_VERBOSE [style=dashed]
	"calimate_control.cpp":"":ClimateControl::simulateTemperatureChange -> max [style=dashed]
	"calimate_control.cpp":"":ClimateControl::simulateTemperatureChange -> std:"":max [style=dashed]
	"calimate_control.cpp":"":ClimateControl::simulateTemperatureChange -> "mt19937 gen" [style=dashed]
	"calimate_control.cpp":"":ClimateControl::simulateTemperatureChange -> gen [style=dashed]
	"calimate_control.cpp":"":ClimateControl::simulateTemperatureChange -> distr [style=dashed]
	"calimate_control.cpp":"":ClimateControl::simulateTemperatureChange -> distr [style=dashed]
	"calimate_control.cpp":"":ClimateControl::simulateTemperatureChange -> distr [style=dashed]
	"calimate_control.cpp":"":ClimateControl::simulateTemperatureChange -> distr [style=dashed]
	"window_control.cpp":"":if -> LOG_WARNING [style=dashed]
	"window_control.cpp":"":if -> LOG_WARNING [style=dashed]
	"window_control.cpp":"":WindowControl::findWindow -> LOG_WARNING [style=dashed]
	"window_control.cpp":"":WindowControl::findWindow -> LOG_WARNING [style=dashed]
	"window_control.cpp":"":WindowControl::findWindow -> LOG_WARNING [style=dashed]
	"window_control.cpp":"":WindowControl::findWindow -> LOG_WARNING [style=dashed]
	"window_control.cpp":"":WindowControl::canOperateWindow -> LOG_INFO [style=dashed]
	"window_control.cpp":"":WindowControl::canOperateWindow -> LOG_INFO [style=dashed]
	"window_control.cpp":"":WindowControl::canOperateWindow -> LOG_INFO [style=dashed]
	"window_control.cpp":"":WindowControl::canOperateWindow -> LOG_INFO [style=dashed]
	"window_control.cpp":"":WindowControl::canOperateWindow -> LOG_WARNING [style=dashed]
	"window_control.cpp":"":WindowControl::canOperateWindow -> LOG_WARNING [style=dashed]
	"power_monitor_->getBatteryVoltage" [label="power_monitor_->getBatteryVoltage" shape=box style=dashed]
	"window_control.cpp":"":WindowControl::canOperateWindow -> "power_monitor_->getBatteryVoltage" [style=dashed]
	"window_control.cpp":"":WindowControl::canOperateWindow -> "power_monitor.cpp":"":PowerMonitor::getBatteryVoltage
	"window_control.cpp":"":WindowControl::canOperateWindow -> "window_control.cpp":"":windowIdToString
	"window_control.cpp":"":WindowControl::canOperateWindow -> "window_control.cpp":"":windowIdToString
	"window_control.cpp":"":WindowControl::moveWindow -> "window_control.cpp":"":windowIdToString
	"window_control.cpp":"":WindowControl::moveWindow -> "window_control.cpp":"":windowIdToString
	"window_control.cpp":"":WindowControl::moveWindow -> "window_control.cpp":"":WindowControl::findWindow
	"window_control.cpp":"":WindowControl::moveWindow -> "window_control.cpp":"":WindowControl::findWindow
	"window_control.cpp":"":WindowControl::moveWindow -> LOG_WARNING [style=dashed]
	"window_control.cpp":"":WindowControl::moveWindow -> LOG_WARNING [style=dashed]
	"window_control.cpp":"":WindowControl::moveWindow -> "window_control.cpp":"":windowIdToString
	"window_control.cpp":"":WindowControl::moveWindow -> "window_control.cpp":"":windowIdToString
	"window_control.cpp":"":WindowControl::moveWindow -> "window_control.cpp":"":windowIdToString
	"window_control.cpp":"":WindowControl::moveWindow -> "window_control.cpp":"":windowIdToString
	"window_control.cpp":"":WindowControl::moveWindow -> LOG_DEBUG [style=dashed]
	"window_control.cpp":"":WindowControl::moveWindow -> LOG_DEBUG [style=dashed]
	"window_control.cpp":"":WindowControl::stopWindowMovement -> LOG_INFO [style=dashed]
	"window_control.cpp":"":WindowControl::stopWindowMovement -> LOG_INFO [style=dashed]
	"window_control.cpp":"":WindowControl::stopWindowMovement -> "window_control.cpp":"":WindowControl::findWindow
	"window_control.cpp":"":WindowControl::stopWindowMovement -> "window_control.cpp":"":WindowControl::findWindow
	"window_control.cpp":"":WindowControl::stopWindowMovement -> LOG_DEBUG [style=dashed]
	"window_control.cpp":"":WindowControl::stopWindowMovement -> LOG_DEBUG [style=dashed]
	"window_control.cpp":"":WindowControl::stopWindowMovement -> LOG_INFO [style=dashed]
	"window_control.cpp":"":WindowControl::stopWindowMovement -> LOG_INFO [style=dashed]
	"window_control.cpp":"":WindowControl::setChildLock -> "window_control.cpp":"":windowIdToString
	"window_control.cpp":"":WindowControl::setChildLock -> "window_control.cpp":"":windowIdToString
	"window_control.cpp":"":WindowControl::setChildLock -> LOG_WARNING [style=dashed]
	"window_control.cpp":"":WindowControl::setChildLock -> LOG_WARNING [style=dashed]
	"window_control.cpp":"":WindowControl::setAllWindowsLock -> LOG_INFO [style=dashed]
	"window_control.cpp":"":WindowControl::setAllWindowsLock -> LOG_INFO [style=dashed]
	"window_control.cpp":"":WindowControl::setAllWindowsLock -> LOG_DEBUG [style=dashed]
	"window_control.cpp":"":WindowControl::setAllWindowsLock -> LOG_DEBUG [style=dashed]
	"window_control.cpp":"":WindowControl::setAllWindowsLock -> LOG_INFO [style=dashed]
	"window_control.cpp":"":WindowControl::setAllWindowsLock -> LOG_INFO [style=dashed]
	"window_control.cpp":"":WindowControl::setAllWindowsLock -> "window_control.cpp":"":WindowControl::stopWindowMovement
	"window_control.cpp":"":WindowControl::setAllWindowsLock -> "window_control.cpp":"":WindowControl::stopWindowMovement
	"window_control.cpp":"":WindowControl::getWindowPosition -> "window_control.cpp":"":WindowControl::findWindow
	"window_control.cpp":"":WindowControl::getWindowPosition -> "window_control.cpp":"":WindowControl::findWindow
	"window_control.cpp":"":WindowControl::getWindowPosition -> LOG_DEBUG [style=dashed]
	"window_control.cpp":"":WindowControl::getWindowPosition -> LOG_DEBUG [style=dashed]
	"window_control.cpp":"":WindowControl::getWindowPosition -> LOG_WARNING [style=dashed]
	"window_control.cpp":"":WindowControl::getWindowPosition -> LOG_WARNING [style=dashed]
	"window_control.cpp":"":WindowControl::checkAntiPinch -> "mt19937 gen" [style=dashed]
	"window_control.cpp":"":WindowControl::checkAntiPinch -> gen [style=dashed]
	"window_control.cpp":"":WindowControl::checkAntiPinch -> distrib [style=dashed]
	"window_control.cpp":"":WindowControl::checkAntiPinch -> distrib [style=dashed]
	"window_control.cpp":"":WindowControl::checkAntiPinch -> LOG_WARNING [style=dashed]
	"window_control.cpp":"":WindowControl::checkAntiPinch -> LOG_WARNING [style=dashed]
	"window_control.cpp":"":WindowControl::checkAntiPinch -> "window_control.cpp":"":windowIdToString
	"window_control.cpp":"":WindowControl::checkAntiPinch -> "window_control.cpp":"":windowIdToString
	"window_control.cpp":"":WindowControl::simulateMotorMovement -> "window_control.cpp":"":windowIdToString
	"window_control.cpp":"":WindowControl::simulateMotorMovement -> "window_control.cpp":"":windowIdToString
	"window_control.cpp":"":WindowControl::simulateMotorMovement -> "window_control.cpp":"":windowIdToString
	"window_control.cpp":"":WindowControl::simulateMotorMovement -> "window_control.cpp":"":windowIdToString
	"window_control.cpp":"":WindowControl::simulateMotorMovement -> LOG_DEBUG [style=dashed]
	"window_control.cpp":"":WindowControl::simulateMotorMovement -> LOG_DEBUG [style=dashed]
	"window_control.cpp":"":WindowControl::simulateMotorMovement -> "window_control.cpp":"":windowPosToString
	"window_control.cpp":"":WindowControl::simulateMotorMovement -> "window_control.cpp":"":windowPosToString
	"window_control.cpp":"":WindowControl::updateWindowStates -> LOG_DEBUG [style=dashed]
	"window_control.cpp":"":WindowControl::updateWindowStates -> LOG_DEBUG [style=dashed]
	"window_control.cpp":"":WindowControl::updateWindowStates -> "power_monitor_->simulateHighLoadEvent" [style=dashed]
	"window_control.cpp":"":WindowControl::updateWindowStates -> "power_monitor.cpp":"":PowerMonitor::simulateHighLoadEvent
	"window_control.cpp":"":WindowControl::updateWindowStates -> LOG_INFO [style=dashed]
	"window_control.cpp":"":WindowControl::updateWindowStates -> LOG_INFO [style=dashed]
	"window_control.cpp":"":WindowControl::updateWindowStates -> "window_control.cpp":"":windowIdToString
	"window_control.cpp":"":WindowControl::updateWindowStates -> "window_control.cpp":"":windowIdToString
	"window_control.cpp":"":WindowControl::updateWindowStates -> LOG_DEBUG [style=dashed]
	"window_control.cpp":"":WindowControl::updateWindowStates -> LOG_DEBUG [style=dashed]
	"window_control.cpp":"":WindowControl::updateWindowStates -> "window_control.cpp":"":WindowControl::simulateMotorMovement
	"window_control.cpp":"":WindowControl::updateWindowStates -> "window_control.cpp":"":WindowControl::simulateMotorMovement
	"window_control.cpp":"":WindowControl::updateWindowStates -> "window_control.cpp":"":windowIdToString
	"window_control.cpp":"":WindowControl::updateWindowStates -> "window_control.cpp":"":windowIdToString
	"window_control.cpp":"":WindowControl::updateWindowStates -> "power_monitor_->simulateHighLoadEvent" [style=dashed]
	"window_control.cpp":"":WindowControl::updateWindowStates -> "power_monitor.cpp":"":PowerMonitor::simulateHighLoadEvent
	"window_control.cpp":"":WindowControl::updateWindowStates -> LOG_INFO [style=dashed]
	"window_control.cpp":"":WindowControl::updateWindowStates -> LOG_INFO [style=dashed]
	"window_control.cpp":"":WindowControl::updateWindowStates -> LOG_DEBUG [style=dashed]
	"window_control.cpp":"":WindowControl::updateWindowStates -> LOG_DEBUG [style=dashed]
	"lighting_control.cpp":"":if -> LOG_ERROR [style=dashed]
	"lighting_control.cpp":"":if -> LOG_ERROR [style=dashed]
	"lighting_control.cpp":"":LightingControl::findBulb -> LOG_WARNING [style=dashed]
	"lighting_control.cpp":"":LightingControl::findBulb -> LOG_WARNING [style=dashed]
	"lighting_control.cpp":"":LightingControl::findBulb -> LOG_WARNING [style=dashed]
	"lighting_control.cpp":"":LightingControl::findBulb -> LOG_WARNING [style=dashed]
	"lighting_control.cpp":"":LightingControl::setSpecificLight -> "lighting_control.cpp":"":LightingControl::findBulb
	"lighting_control.cpp":"":LightingControl::setSpecificLight -> "lighting_control.cpp":"":LightingControl::findBulb
	"lighting_control.cpp":"":LightingControl::setSpecificLight -> LOG_ERROR [style=dashed]
	"lighting_control.cpp":"":LightingControl::setSpecificLight -> LOG_ERROR [style=dashed]
	"lighting_control.cpp":"":LightingControl::setSpecificLight -> LOG_DEBUG [style=dashed]
	"lighting_control.cpp":"":LightingControl::setSpecificLight -> LOG_DEBUG [style=dashed]
	"lighting_control.cpp":"":LightingControl::setSpecificLight -> LOG_WARNING [style=dashed]
	"lighting_control.cpp":"":LightingControl::setSpecificLight -> LOG_WARNING [style=dashed]
	"lighting_control.cpp":"":LightingControl::setSpecificLight -> LOG_ERROR [style=dashed]
	"lighting_control.cpp":"":LightingControl::setSpecificLight -> LOG_ERROR [style=dashed]
	"lighting_control.cpp":"":LightingControl::setSpecificLight -> LOG_INFO [style=dashed]
	"lighting_control.cpp":"":LightingControl::setSpecificLight -> LOG_INFO [style=dashed]
	"lighting_control.cpp":"":LightingControl::setSpecificLight -> "lighting_control.cpp":"":LightingControl::findBulb
	"lighting_control.cpp":"":LightingControl::setSpecificLight -> "lighting_control.cpp":"":LightingControl::findBulb
	"lighting_control.cpp":"":LightingControl::setSpecificLight -> LOG_DEBUG [style=dashed]
	"lighting_control.cpp":"":LightingControl::setSpecificLight -> LOG_DEBUG [style=dashed]
	"lighting_control.cpp":"":LightingControl::setSpecificLight -> "lighting_control.cpp":"":LightingControl::setSpecificLight
	"lighting_control.cpp":"":LightingControl::setSpecificLight -> "lighting_control.cpp":"":LightingControl::setSpecificLight
	"lighting_control.cpp":"":LightingControl::setSpecificLight -> "lighting_control.cpp":"":LightingControl::findBulb
	"lighting_control.cpp":"":LightingControl::setSpecificLight -> "lighting_control.cpp":"":LightingControl::findBulb
	"lighting_control.cpp":"":LightingControl::setSpecificLight -> LOG_INFO [style=dashed]
	"lighting_control.cpp":"":LightingControl::setSpecificLight -> LOG_INFO [style=dashed]
	"lighting_control.cpp":"":LightingControl::setSpecificLight -> "lighting_control.cpp":"":LightingControl::setSpecificLight
	"lighting_control.cpp":"":LightingControl::setSpecificLight -> "lighting_control.cpp":"":LightingControl::setSpecificLight
	"lighting_control.cpp":"":LightingControl::setLightState -> LOG_DEBUG [style=dashed]
	"lighting_control.cpp":"":LightingControl::setLightState -> LOG_DEBUG [style=dashed]
	"lighting_control.cpp":"":LightingControl::setLightState -> LOG_INFO [style=dashed]
	"lighting_control.cpp":"":LightingControl::setLightState -> LOG_INFO [style=dashed]
	"lighting_control.cpp":"":LightingControl::setLightState -> "lighting_control.cpp":"":LightingControl::setSpecificLight
	"lighting_control.cpp":"":LightingControl::setLightState -> "engine_manager.cpp":"":if
	"lighting_control.cpp":"":LightingControl::setLightState -> "lighting_control.cpp":"":LightingControl::setSpecificLight
	"lighting_control.cpp":"":LightingControl::setLightState -> "engine_manager.cpp":"":if
	"lighting_control.cpp":"":LightingControl::setLightState -> "lighting_control.cpp":"":LightingControl::setSpecificLight
	"lighting_control.cpp":"":LightingControl::setLightState -> "lighting_control.cpp":"":LightingControl::setSpecificLight
	"lighting_control.cpp":"":LightingControl::activateHazardLights -> LOG_INFO [style=dashed]
	"lighting_control.cpp":"":LightingControl::activateHazardLights -> LOG_INFO [style=dashed]
	"lighting_control.cpp":"":LightingControl::activateHazardLights -> LOG_DEBUG [style=dashed]
	"lighting_control.cpp":"":LightingControl::activateHazardLights -> LOG_DEBUG [style=dashed]
	"lighting_control.cpp":"":LightingControl::activateHazardLights -> "lighting_control.cpp":"":LightingControl::setSpecificLight
	"lighting_control.cpp":"":LightingControl::activateHazardLights -> "lighting_control.cpp":"":LightingControl::setSpecificLight
	"lighting_control.cpp":"":LightingControl::activateHazardLights -> "lighting_control.cpp":"":LightingControl::setSpecificLight
	"lighting_control.cpp":"":LightingControl::activateHazardLights -> "lighting_control.cpp":"":LightingControl::setSpecificLight
	"lighting_control.cpp":"":LightingControl::activateHazardLights -> LOG_INFO [style=dashed]
	"lighting_control.cpp":"":LightingControl::activateHazardLights -> LOG_INFO [style=dashed]
	"lighting_control.cpp":"":LightingControl::activateHazardLights -> "lighting_control.cpp":"":LightingControl::setSpecificLight
	"lighting_control.cpp":"":LightingControl::activateHazardLights -> "lighting_control.cpp":"":LightingControl::setSpecificLight
	"lighting_control.cpp":"":LightingControl::activateHazardLights -> "lighting_control.cpp":"":LightingControl::setSpecificLight
	"lighting_control.cpp":"":LightingControl::activateHazardLights -> "lighting_control.cpp":"":LightingControl::setSpecificLight
	"lighting_control.cpp":"":LightingControl::activateHazardLights -> LOG_INFO [style=dashed]
	"lighting_control.cpp":"":LightingControl::activateHazardLights -> LOG_INFO [style=dashed]
	"lighting_control.cpp":"":LightingControl::activateHazardLights -> "lighting_control.cpp":"":LightingControl::setSpecificLight
	"lighting_control.cpp":"":LightingControl::activateHazardLights -> "lighting_control.cpp":"":LightingControl::setSpecificLight
	"lighting_control.cpp":"":LightingControl::activateHazardLights -> "lighting_control.cpp":"":LightingControl::setSpecificLight
	"lighting_control.cpp":"":LightingControl::activateHazardLights -> "lighting_control.cpp":"":LightingControl::setSpecificLight
	"lighting_control.cpp":"":LightingControl::activateIndicator -> LOG_ERROR [style=dashed]
	"lighting_control.cpp":"":LightingControl::activateIndicator -> LOG_ERROR [style=dashed]
	"return setLightState" [label="return setLightState" shape=box style=dashed]
	"lighting_control.cpp":"":LightingControl::activateIndicator -> "return setLightState" [style=dashed]
	"lighting_control.cpp":"":LightingControl::activateIndicator -> "lighting_control.cpp":"":LightingControl::setLightState
	"lighting_control.cpp":"":LightingControl::getLightStatus -> "lighting_control.cpp":"":LightingControl::findBulb
	"lighting_control.cpp":"":LightingControl::getLightStatus -> "lighting_control.cpp":"":LightingControl::findBulb
	"lighting_control.cpp":"":LightingControl::getLightStatus -> LOG_DEBUG [style=dashed]
	"lighting_control.cpp":"":LightingControl::getLightStatus -> LOG_DEBUG [style=dashed]
	"lighting_control.cpp":"":LightingControl::getLightStatus -> LOG_WARNING [style=dashed]
	"lighting_control.cpp":"":LightingControl::getLightStatus -> LOG_WARNING [style=dashed]
	"lighting_control.cpp":"":LightingControl::performBulbCheck -> LOG_INFO [style=dashed]
	"lighting_control.cpp":"":LightingControl::performBulbCheck -> LOG_INFO [style=dashed]
	"lighting_control.cpp":"":LightingControl::performBulbCheck -> "mt19937 gen" [style=dashed]
	"lighting_control.cpp":"":LightingControl::performBulbCheck -> gen [style=dashed]
	"lighting_control.cpp":"":LightingControl::performBulbCheck -> distrib [style=dashed]
	"lighting_control.cpp":"":LightingControl::performBulbCheck -> distrib [style=dashed]
	"lighting_control.cpp":"":LightingControl::performBulbCheck -> distrib [style=dashed]
	"lighting_control.cpp":"":LightingControl::performBulbCheck -> distrib [style=dashed]
	"lighting_control.cpp":"":LightingControl::performBulbCheck -> LOG_VERBOSE [style=dashed]
	"lighting_control.cpp":"":LightingControl::performBulbCheck -> LOG_VERBOSE [style=dashed]
	"lighting_control.cpp":"":LightingControl::performBulbCheck -> LOG_DEBUG [style=dashed]
	"lighting_control.cpp":"":LightingControl::performBulbCheck -> LOG_DEBUG [style=dashed]
	"lighting_control.cpp":"":LightingControl::performBulbCheck -> LOG_INFO [style=dashed]
	"lighting_control.cpp":"":LightingControl::performBulbCheck -> LOG_INFO [style=dashed]
	"lighting_control.cpp":"":LightingControl::handleAutomaticHeadlights -> "lighting_control.cpp":"":LightingControl::findBulb
	"lighting_control.cpp":"":LightingControl::handleAutomaticHeadlights -> "lighting_control.cpp":"":LightingControl::findBulb
	"lighting_control.cpp":"":LightingControl::handleAutomaticHeadlights -> LOG_WARNING [style=dashed]
	"lighting_control.cpp":"":LightingControl::handleAutomaticHeadlights -> LOG_WARNING [style=dashed]
	"lighting_control.cpp":"":LightingControl::handleAutomaticHeadlights -> LOG_INFO [style=dashed]
	"lighting_control.cpp":"":LightingControl::handleAutomaticHeadlights -> LOG_INFO [style=dashed]
	"lighting_control.cpp":"":LightingControl::handleAutomaticHeadlights -> "lighting_control.cpp":"":LightingControl::setSpecificLight
	"lighting_control.cpp":"":LightingControl::handleAutomaticHeadlights -> "lighting_control.cpp":"":LightingControl::setSpecificLight
	"lighting_control.cpp":"":LightingControl::handleAutomaticHeadlights -> LOG_INFO [style=dashed]
	"lighting_control.cpp":"":LightingControl::handleAutomaticHeadlights -> LOG_INFO [style=dashed]
	"lighting_control.cpp":"":LightingControl::handleAutomaticHeadlights -> "lighting_control.cpp":"":LightingControl::setSpecificLight
	"lighting_control.cpp":"":LightingControl::handleAutomaticHeadlights -> "lighting_control.cpp":"":LightingControl::setSpecificLight
	"lighting_control.cpp":"":LightingControl::handleAutomaticHeadlights -> LOG_VERBOSE [style=dashed]
	"lighting_control.cpp":"":LightingControl::handleAutomaticHeadlights -> LOG_VERBOSE [style=dashed]
	"lighting_control.cpp":"":LightingControl::checkBrakeLights -> LOG_DEBUG [style=dashed]
	"lighting_control.cpp":"":LightingControl::checkBrakeLights -> LOG_DEBUG [style=dashed]
	"lighting_control.cpp":"":LightingControl::checkBrakeLights -> LOG_INFO [style=dashed]
	"lighting_control.cpp":"":LightingControl::checkBrakeLights -> LOG_INFO [style=dashed]
	"lighting_control.cpp":"":LightingControl::checkBrakeLights -> LOG_INFO [style=dashed]
	"lighting_control.cpp":"":LightingControl::checkBrakeLights -> LOG_INFO [style=dashed]
	"lighting_control.cpp":"":LightingControl::checkBrakeLights -> "lighting_control.cpp":"":LightingControl::setSpecificLight
	"lighting_control.cpp":"":LightingControl::checkBrakeLights -> "lighting_control.cpp":"":LightingControl::setSpecificLight
	"lighting_control.cpp":"":LightingControl::checkBrakeLights -> LOG_INFO [style=dashed]
	"lighting_control.cpp":"":LightingControl::checkBrakeLights -> LOG_INFO [style=dashed]
	"lighting_control.cpp":"":LightingControl::checkBrakeLights -> "lighting_control.cpp":"":LightingControl::setSpecificLight
	"lighting_control.cpp":"":LightingControl::checkBrakeLights -> "lighting_control.cpp":"":LightingControl::setSpecificLight
	"power_monitor_->isPowerStable" [label="power_monitor_->isPowerStable" shape=box style=dashed]
	"lighting_control.cpp":"":LightingControl::updateLighting -> "power_monitor_->isPowerStable" [style=dashed]
	"lighting_control.cpp":"":LightingControl::updateLighting -> "power_monitor.cpp":"":PowerMonitor::isPowerStable
	"lighting_control.cpp":"":LightingControl::updateLighting -> LOG_WARNING [style=dashed]
	"lighting_control.cpp":"":LightingControl::updateLighting -> LOG_WARNING [style=dashed]
	"lighting_control.cpp":"":LightingControl::updateLighting -> "lighting_control.cpp":"":LightingControl::findBulb
	"lighting_control.cpp":"":LightingControl::updateLighting -> "lighting_control.cpp":"":LightingControl::findBulb
	"lighting_control.cpp":"":LightingControl::updateLighting -> LOG_INFO [style=dashed]
	"lighting_control.cpp":"":LightingControl::updateLighting -> LOG_INFO [style=dashed]
	"lighting_control.cpp":"":LightingControl::updateLighting -> LOG_WARNING [style=dashed]
	"lighting_control.cpp":"":LightingControl::updateLighting -> LOG_WARNING [style=dashed]
	"lighting_control.cpp":"":LightingControl::updateLighting -> "lighting_control.cpp":"":LightingControl::handleAutomaticHeadlights
	"lighting_control.cpp":"":LightingControl::updateLighting -> "lighting_control.cpp":"":LightingControl::handleAutomaticHeadlights
	"lighting_control.cpp":"":LightingControl::updateLighting -> "lighting_control.cpp":"":LightingControl::checkBrakeLights
	"lighting_control.cpp":"":LightingControl::updateLighting -> "lighting_control.cpp":"":LightingControl::checkBrakeLights
	"lighting_control.cpp":"":LightingControl::updateLighting -> LOG_DEBUG [style=dashed]
	"lighting_control.cpp":"":LightingControl::updateLighting -> LOG_DEBUG [style=dashed]
	"lighting_control.cpp":"":LightingControl::updateLighting -> "lighting_control.cpp":"":LightingControl::performBulbCheck
	"lighting_control.cpp":"":LightingControl::updateLighting -> "lighting_control.cpp":"":LightingControl::performBulbCheck
	"lighting_control.cpp":"":LightingControl::updateLighting -> LOG_INFO [style=dashed]
	"lighting_control.cpp":"":LightingControl::updateLighting -> LOG_INFO [style=dashed]
	now [label=now shape=box style=dashed]
	"logger.h":"":getCurrentTimestamp -> now [style=dashed]
	"std::chrono::system_clock::now" [label="std::chrono::system_clock::now" shape=box style=dashed]
	"logger.h":"":getCurrentTimestamp -> std:"":chrono::system_clock::now [style=dashed]
	to_time_t [label=to_time_t shape=box style=dashed]
	"logger.h":"":getCurrentTimestamp -> to_time_t [style=dashed]
	"std::chrono::system_clock::to_time_t" [label="std::chrono::system_clock::to_time_t" shape=box style=dashed]
	"logger.h":"":getCurrentTimestamp -> std:"":chrono::system_clock::to_time_t [style=dashed]
	put_time [label=put_time shape=box style=dashed]
	"logger.h":"":getCurrentTimestamp -> put_time [style=dashed]
	"std::put_time" [label="std::put_time" shape=box style=dashed]
	"logger.h":"":getCurrentTimestamp -> std:"":put_time [style=dashed]
	"ss.str" [label="ss.str" shape=box style=dashed]
	"logger.h":"":getCurrentTimestamp -> "ss.str" [style=dashed]
	str [label=str shape=box style=dashed]
	"logger.h":"":getCurrentTimestamp -> str [style=dashed]
	"main_vehicle_controller.cpp":"":if -> "main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOff
	"main_vehicle_controller.cpp":"":if -> "main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOff
	"main_vehicle_controller.cpp":"":MainVehicleController::initializeAllSystems -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::initializeAllSystems -> LOG_INFO [style=dashed]
	"abs_control_->runDiagnostics" [label="abs_control_->runDiagnostics" shape=box style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::initializeAllSystems -> "abs_control_->runDiagnostics" [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::initializeAllSystems -> "engine_manager.cpp":"":if
	"airbag_control_->runSystemCheck" [label="airbag_control_->runSystemCheck" shape=box style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::initializeAllSystems -> "airbag_control_->runSystemCheck" [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::initializeAllSystems -> "engine_manager.cpp":"":if
	"main_vehicle_controller.cpp":"":MainVehicleController::initializeAllSystems -> sleep_for [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::initializeAllSystems -> std:"":this_thread::sleep_for [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::initializeAllSystems -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::initializeAllSystems -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::updateVehicleStateInputs -> LOG_VERBOSE [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::updateVehicleStateInputs -> LOG_VERBOSE [style=dashed]
	"engine_manager_->getEngineState" [label="engine_manager_->getEngineState" shape=box style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::updateVehicleStateInputs -> "engine_manager_->getEngineState" [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::updateVehicleStateInputs -> "engine_manager.cpp":"":EngineManager::getEngineState
	"main_vehicle_controller.cpp":"":MainVehicleController::updateVehicleStateInputs -> min [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::updateVehicleStateInputs -> std:"":min [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::updateVehicleStateInputs -> "mt19937 gen" [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::updateVehicleStateInputs -> gen [style=dashed]
	speed_noise [label=speed_noise shape=box style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::updateVehicleStateInputs -> speed_noise [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::updateVehicleStateInputs -> speed_noise [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::updateVehicleStateInputs -> "main_vehicle_controller.cpp":"":for
	"main_vehicle_controller.cpp":"":MainVehicleController::updateVehicleStateInputs -> "main_vehicle_controller.cpp":"":for
	"main_vehicle_controller.cpp":"":MainVehicleController::updateVehicleStateInputs -> max [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::updateVehicleStateInputs -> std:"":max [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::updateVehicleStateInputs -> now [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::updateVehicleStateInputs -> std:"":chrono::system_clock::now [style=dashed]
	g_noise [label=g_noise shape=box style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::updateVehicleStateInputs -> g_noise [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::updateVehicleStateInputs -> g_noise [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::updateVehicleStateInputs -> g_noise [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::updateVehicleStateInputs -> g_noise [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::updateVehicleStateInputs -> g_noise [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::updateVehicleStateInputs -> g_noise [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::updateVehicleStateInputs -> g_noise [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::updateVehicleStateInputs -> g_noise [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::updateVehicleStateInputs -> rand [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::updateVehicleStateInputs -> rand [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::periodicECUUpdates -> LOG_DEBUG [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::periodicECUUpdates -> LOG_DEBUG [style=dashed]
	"power_monitor_->updatePowerStatus" [label="power_monitor_->updatePowerStatus" shape=box style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::periodicECUUpdates -> "power_monitor_->updatePowerStatus" [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::periodicECUUpdates -> "engine_manager.cpp":"":if
	"engine_manager_->updateEngineParameters" [label="engine_manager_->updateEngineParameters" shape=box style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::periodicECUUpdates -> "engine_manager_->updateEngineParameters" [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::periodicECUUpdates -> "engine_manager.cpp":"":if
	"transmission_manager_->updateState" [label="transmission_manager_->updateState" shape=box style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::periodicECUUpdates -> "transmission_manager_->updateState" [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::periodicECUUpdates -> "transmission_manager.cpp":"":TransmissionManager::updateState
	"climate_control_->updateClimateState" [label="climate_control_->updateClimateState" shape=box style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::periodicECUUpdates -> "climate_control_->updateClimateState" [style=dashed]
	updateClimateState [label=updateClimateState shape=box style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::periodicECUUpdates -> updateClimateState [style=dashed]
	"lighting_control_->updateLighting" [label="lighting_control_->updateLighting" shape=box style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::periodicECUUpdates -> "lighting_control_->updateLighting" [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::periodicECUUpdates -> "engine_manager.cpp":"":if
	"window_control_->updateWindowStates" [label="window_control_->updateWindowStates" shape=box style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::periodicECUUpdates -> "window_control_->updateWindowStates" [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::periodicECUUpdates -> "engine_manager.cpp":"":if
	"media_player_->updatePlaybackState" [label="media_player_->updatePlaybackState" shape=box style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::periodicECUUpdates -> "media_player_->updatePlaybackState" [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::periodicECUUpdates -> "engine_manager.cpp":"":if
	"navigation_system_->updateNavigationState" [label="navigation_system_->updateNavigationState" shape=box style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::periodicECUUpdates -> "navigation_system_->updateNavigationState" [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::periodicECUUpdates -> "engine_manager.cpp":"":if
	"abs_control_->processBraking" [label="abs_control_->processBraking" shape=box style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::periodicECUUpdates -> "abs_control_->processBraking" [style=dashed]
	processBraking [label=processBraking shape=box style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::periodicECUUpdates -> processBraking [style=dashed]
	"airbag_control_->processImpactData" [label="airbag_control_->processImpactData" shape=box style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::periodicECUUpdates -> "airbag_control_->processImpactData" [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::periodicECUUpdates -> "airbag_control.cpp":"":AirbagControl::processImpactData
	"main_vehicle_controller.cpp":"":MainVehicleController::periodicECUUpdates -> LOG_DEBUG [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::periodicECUUpdates -> LOG_DEBUG [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::checkSystemHealth -> LOG_DEBUG [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::checkSystemHealth -> LOG_DEBUG [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::checkSystemHealth -> LOG_WARNING [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::checkSystemHealth -> LOG_WARNING [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::checkSystemHealth -> LOG_WARNING [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::checkSystemHealth -> LOG_WARNING [style=dashed]
	"airbag_control_->getSystemState" [label="airbag_control_->getSystemState" shape=box style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::checkSystemHealth -> "airbag_control_->getSystemState" [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::checkSystemHealth -> "airbag_control.cpp":"":AirbagControl::getSystemState
	"main_vehicle_controller.cpp":"":MainVehicleController::checkSystemHealth -> LOG_WARNING [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::checkSystemHealth -> LOG_WARNING [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::checkSystemHealth -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::checkSystemHealth -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop -> LOG_WARNING [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop -> LOG_WARNING [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop -> now [style=dashed]
	"std::chrono::steady_clock::now" [label="std::chrono::steady_clock::now" shape=box style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop -> std:"":chrono::steady_clock::now [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop -> "main_vehicle_controller.cpp":"":MainVehicleController::updateVehicleStateInputs
	"main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop -> "main_vehicle_controller.cpp":"":MainVehicleController::updateVehicleStateInputs
	"main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop -> "main_vehicle_controller.cpp":"":MainVehicleController::periodicECUUpdates
	"main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop -> "main_vehicle_controller.cpp":"":MainVehicleController::periodicECUUpdates
	"main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop -> "main_vehicle_controller.cpp":"":MainVehicleController::checkSystemHealth
	"main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop -> "main_vehicle_controller.cpp":"":MainVehicleController::checkSystemHealth
	"main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop -> sleep_for [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop -> std:"":this_thread::sleep_for [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOn -> LOG_FATAL [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOn -> LOG_FATAL [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOn -> "power_monitor_->updatePowerStatus" [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOn -> "engine_manager.cpp":"":if
	"engine_manager_->primeFuelPump" [label="engine_manager_->primeFuelPump" shape=box style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOn -> "engine_manager_->primeFuelPump" [style=dashed]
	primeFuelPump [label=primeFuelPump shape=box style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOn -> primeFuelPump [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOn -> "airbag_control_->runSystemCheck" [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOn -> "engine_manager.cpp":"":if
	"main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOn -> "abs_control_->runDiagnostics" [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOn -> "engine_manager.cpp":"":if
	"media_player_->selectSource" [label="media_player_->selectSource" shape=box style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOn -> "media_player_->selectSource" [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOn -> "engine_manager.cpp":"":if
	"climate_control_->setAutoMode" [label="climate_control_->setAutoMode" shape=box style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOn -> "climate_control_->setAutoMode" [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOn -> "engine_manager.cpp":"":if
	"main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOn -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOn -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOff -> LOG_FATAL [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOff -> LOG_FATAL [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOff -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOff -> LOG_INFO [style=dashed]
	"engine_manager_->stopEngine" [label="engine_manager_->stopEngine" shape=box style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOff -> "engine_manager_->stopEngine" [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOff -> "engine_manager.cpp":"":EngineManager::stopEngine
	"media_player_->stop" [label="media_player_->stop" shape=box style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOff -> "media_player_->stop" [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOff -> "engine_manager.cpp":"":if
	"navigation_system_->cancelNavigation" [label="navigation_system_->cancelNavigation" shape=box style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOff -> "navigation_system_->cancelNavigation" [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOff -> "engine_manager.cpp":"":if
	"climate_control_->setFanSpeed" [label="climate_control_->setFanSpeed" shape=box style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOff -> "climate_control_->setFanSpeed" [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOff -> "engine_manager.cpp":"":if
	"main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOff -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOff -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_WARNING [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_WARNING [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> "main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOn
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> "main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOn
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_ERROR [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_ERROR [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> sleep_for [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> std:"":this_thread::sleep_for [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_INFO [style=dashed]
	"transmission_manager_->setTransmissionMode" [label="transmission_manager_->setTransmissionMode" shape=box style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> "transmission_manager_->setTransmissionMode" [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> "transmission_manager.cpp":"":TransmissionManager::setTransmissionMode
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> sleep_for [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> std:"":this_thread::sleep_for [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_INFO [style=dashed]
	"engine_manager_->setTargetRPM" [label="engine_manager_->setTargetRPM" shape=box style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> "engine_manager_->setTargetRPM" [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> "engine_manager.cpp":"":EngineManager::setTargetRPM
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> "main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> "main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> "engine_manager_->setTargetRPM" [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> "engine_manager.cpp":"":EngineManager::setTargetRPM
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> "main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> "main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> "main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> "main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_FATAL [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_FATAL [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> "main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> "main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> "engine_manager_->setTargetRPM" [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> "engine_manager.cpp":"":EngineManager::setTargetRPM
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> "main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> "main_vehicle_controller.cpp":"":MainVehicleController::runMainLoop
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> "transmission_manager_->setTransmissionMode" [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> "transmission_manager.cpp":"":TransmissionManager::setTransmissionMode
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> "engine_manager_->stopEngine" [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> "engine_manager.cpp":"":EngineManager::stopEngine
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_ERROR [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_ERROR [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> "main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOff
	"main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle -> "main_vehicle_controller.cpp":"":MainVehicleController::handleIgnitionOff
	"main_vehicle_controller.cpp":"":MainVehicleController::shutdownAllSystems -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::shutdownAllSystems -> LOG_INFO [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::shutdownAllSystems -> "media_player_->stop" [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::shutdownAllSystems -> "engine_manager.cpp":"":if
	"navigation_system_->saveCurrentSettings" [label="navigation_system_->saveCurrentSettings" shape=box style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::shutdownAllSystems -> "navigation_system_->saveCurrentSettings" [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::shutdownAllSystems -> "engine_manager.cpp":"":if
	"main_vehicle_controller.cpp":"":MainVehicleController::shutdownAllSystems -> LOG_DEBUG [style=dashed]
	"main_vehicle_controller.cpp":"":MainVehicleController::shutdownAllSystems -> LOG_DEBUG [style=dashed]
	"main.cpp":"":main -> LOG_INFO [style=dashed]
	"main.cpp":"":main -> LOG_INFO [style=dashed]
	"main.cpp":"":main -> LOG_INFO [style=dashed]
	"main.cpp":"":main -> LOG_INFO [style=dashed]
	"vehicle_controller.initializeAllSystems" [label="vehicle_controller.initializeAllSystems" shape=box style=dashed]
	"main.cpp":"":main -> "vehicle_controller.initializeAllSystems" [style=dashed]
	"main.cpp":"":main -> "main_vehicle_controller.cpp":"":MainVehicleController::initializeAllSystems
	"main.cpp":"":main -> LOG_INFO [style=dashed]
	"main.cpp":"":main -> LOG_INFO [style=dashed]
	"main.cpp":"":main -> LOG_INFO [style=dashed]
	"main.cpp":"":main -> LOG_INFO [style=dashed]
	"vehicle_controller.simulateDrivingCycle" [label="vehicle_controller.simulateDrivingCycle" shape=box style=dashed]
	"main.cpp":"":main -> "vehicle_controller.simulateDrivingCycle" [style=dashed]
	"main.cpp":"":main -> "main_vehicle_controller.cpp":"":MainVehicleController::simulateDrivingCycle
	"main.cpp":"":main -> LOG_INFO [style=dashed]
	"main.cpp":"":main -> LOG_INFO [style=dashed]
	"main.cpp":"":main -> LOG_INFO [style=dashed]
	"main.cpp":"":main -> LOG_INFO [style=dashed]
	"navigation_system.cpp":"":if -> LOG_INFO [style=dashed]
	"navigation_system.cpp":"":if -> LOG_INFO [style=dashed]
	"navigation_system.cpp":"":if -> LOG_ERROR [style=dashed]
	"navigation_system.cpp":"":if -> LOG_ERROR [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateGPSFix -> "mt19937 gen" [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateGPSFix -> gen [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateGPSFix -> LOG_WARNING [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateGPSFix -> LOG_WARNING [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateGPSFix -> LOG_INFO [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateGPSFix -> LOG_INFO [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateGPSFix -> LOG_ERROR [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateGPSFix -> LOG_ERROR [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateGPSFix -> LOG_ERROR [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateGPSFix -> LOG_ERROR [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateGPSFix -> "navigation_system.cpp":"":gpsStatusToString
	"navigation_system.cpp":"":NavigationSystem::simulateGPSFix -> "navigation_system.cpp":"":gpsStatusToString
	"navigation_system.cpp":"":NavigationSystem::simulateGPSFix -> LOG_VERBOSE [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateGPSFix -> LOG_VERBOSE [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateGPSFix -> "navigation_system.cpp":"":NavigationSystem::reportNavigationError
	"navigation_system.cpp":"":NavigationSystem::simulateGPSFix -> "navigation_system.cpp":"":NavigationSystem::reportNavigationError
	"navigation_system.cpp":"":NavigationSystem::findAddressCoordinates -> LOG_INFO [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::findAddressCoordinates -> LOG_INFO [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::findAddressCoordinates -> LOG_WARNING [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::findAddressCoordinates -> LOG_WARNING [style=dashed]
	"dest_name.empty" [label="dest_name.empty" shape=box style=dashed]
	"navigation_system.cpp":"":NavigationSystem::setDestination -> "dest_name.empty" [style=dashed]
	empty [label=empty shape=box style=dashed]
	"navigation_system.cpp":"":NavigationSystem::setDestination -> empty [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::setDestination -> "navigation_system.cpp":"":NavigationSystem::reportNavigationError
	"navigation_system.cpp":"":NavigationSystem::setDestination -> "navigation_system.cpp":"":NavigationSystem::reportNavigationError
	"navigation_system.cpp":"":NavigationSystem::setDestination -> "navigation_system.cpp":"":NavigationSystem::reportNavigationError
	"navigation_system.cpp":"":NavigationSystem::setDestination -> "navigation_system.cpp":"":NavigationSystem::reportNavigationError
	"navigation_system.cpp":"":NavigationSystem::setDestination -> "navigation_system.cpp":"":NavigationSystem::reportNavigationError
	"navigation_system.cpp":"":NavigationSystem::setDestination -> "navigation_system.cpp":"":NavigationSystem::reportNavigationError
	"navigation_system.cpp":"":NavigationSystem::setDestination -> LOG_INFO [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::setDestination -> LOG_INFO [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::setDestinationByAddress -> LOG_INFO [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::setDestinationByAddress -> LOG_INFO [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::setDestinationByAddress -> "navigation_system.cpp":"":NavigationSystem::findAddressCoordinates
	"navigation_system.cpp":"":NavigationSystem::setDestinationByAddress -> "navigation_system.cpp":"":NavigationSystem::findAddressCoordinates
	"navigation_system.cpp":"":NavigationSystem::setDestinationByAddress -> "navigation_system.cpp":"":NavigationSystem::reportNavigationError
	"navigation_system.cpp":"":NavigationSystem::setDestinationByAddress -> "navigation_system.cpp":"":NavigationSystem::reportNavigationError
	"return setDestination" [label="return setDestination" shape=box style=dashed]
	"navigation_system.cpp":"":NavigationSystem::setDestinationByAddress -> "return setDestination" [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::setDestinationByAddress -> "navigation_system.cpp":"":NavigationSystem::setDestination
	"navigation_system.cpp":"":NavigationSystem::cancelNavigation -> LOG_INFO [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::cancelNavigation -> LOG_INFO [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::cancelNavigation -> LOG_DEBUG [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::cancelNavigation -> LOG_DEBUG [style=dashed]
	"current_route_.clear" [label="current_route_.clear" shape=box style=dashed]
	"navigation_system.cpp":"":NavigationSystem::cancelNavigation -> "current_route_.clear" [style=dashed]
	clear [label=clear shape=box style=dashed]
	"navigation_system.cpp":"":NavigationSystem::cancelNavigation -> clear [style=dashed]
	seconds [label=seconds shape=box style=dashed]
	"navigation_system.cpp":"":NavigationSystem::cancelNavigation -> seconds [style=dashed]
	"std::chrono::seconds" [label="std::chrono::seconds" shape=box style=dashed]
	"navigation_system.cpp":"":NavigationSystem::cancelNavigation -> std:"":chrono::seconds [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::cancelNavigation -> LOG_INFO [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::cancelNavigation -> LOG_INFO [style=dashed]
	"destination_name_.c_str" [label="destination_name_.c_str" shape=box style=dashed]
	"navigation_system.cpp":"":NavigationSystem::calculateRoute -> "destination_name_.c_str" [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::calculateRoute -> c_str [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::calculateRoute -> "current_route_.clear" [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::calculateRoute -> clear [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::calculateRoute -> sleep_for [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::calculateRoute -> std:"":this_thread::sleep_for [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::calculateRoute -> "navigation_system.cpp":"":NavigationSystem::reportNavigationError
	"navigation_system.cpp":"":NavigationSystem::calculateRoute -> "navigation_system.cpp":"":NavigationSystem::reportNavigationError
	"navigation_system.cpp":"":NavigationSystem::calculateRoute -> LOG_INFO [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::calculateRoute -> LOG_INFO [style=dashed]
	"current_route_.push_back" [label="current_route_.push_back" shape=box style=dashed]
	"navigation_system.cpp":"":NavigationSystem::calculateRoute -> "current_route_.push_back" [style=dashed]
	push_back [label=push_back shape=box style=dashed]
	"navigation_system.cpp":"":NavigationSystem::calculateRoute -> push_back [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::calculateRoute -> "current_route_.push_back" [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::calculateRoute -> push_back [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::calculateRoute -> "current_route_.push_back" [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::calculateRoute -> push_back [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::calculateRoute -> "navigation_system.cpp":"":NavigationSystem::reportNavigationError
	"navigation_system.cpp":"":NavigationSystem::calculateRoute -> "navigation_system.cpp":"":NavigationSystem::reportNavigationError
	"navigation_system.cpp":"":NavigationSystem::calculateRoute -> now [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::calculateRoute -> std:"":chrono::steady_clock::now [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::calculateRoute -> seconds [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::calculateRoute -> std:"":chrono::seconds [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::calculateRoute -> "destination_name_.c_str" [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::calculateRoute -> c_str [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::provideGuidanceUpdate -> LOG_WARNING [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::provideGuidanceUpdate -> LOG_WARNING [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::provideGuidanceUpdate -> "navigation_system.cpp":"":NavigationSystem::getDistanceToNextManeuverKm
	"navigation_system.cpp":"":NavigationSystem::provideGuidanceUpdate -> "navigation_system.cpp":"":NavigationSystem::getDistanceToNextManeuverKm
	"navigation_system.cpp":"":NavigationSystem::provideGuidanceUpdate -> "navigation_system.cpp":"":NavigationSystem::getEstimatedTimeOfArrivalSeconds
	"navigation_system.cpp":"":NavigationSystem::provideGuidanceUpdate -> "navigation_system.cpp":"":NavigationSystem::getEstimatedTimeOfArrivalSeconds
	"navigation_system.cpp":"":NavigationSystem::provideGuidanceUpdate -> LOG_INFO [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::provideGuidanceUpdate -> LOG_INFO [style=dashed]
	"current_location_.distanceTo" [label="current_location_.distanceTo" shape=box style=dashed]
	"navigation_system.cpp":"":NavigationSystem::checkOffRoute -> "current_location_.distanceTo" [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::checkOffRoute -> "navigation_system.h":"":distanceTo
	"navigation_system.cpp":"":NavigationSystem::checkOffRoute -> LOG_WARNING [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::checkOffRoute -> LOG_WARNING [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::checkOffRoute -> "navigation_system.cpp":"":NavigationSystem::calculateRoute
	"navigation_system.cpp":"":NavigationSystem::checkOffRoute -> "navigation_system.cpp":"":NavigationSystem::calculateRoute
	"navigation_system.cpp":"":NavigationSystem::simulateLocationUpdate -> LOG_DEBUG [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateLocationUpdate -> LOG_DEBUG [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateLocationUpdate -> LOG_WARNING [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateLocationUpdate -> LOG_WARNING [style=dashed]
	cos [label=cos shape=box style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateLocationUpdate -> cos [style=dashed]
	"std::cos" [label="std::cos" shape=box style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateLocationUpdate -> std:"":cos [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateLocationUpdate -> cos [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateLocationUpdate -> std:"":cos [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateLocationUpdate -> max [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateLocationUpdate -> std:"":max [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateLocationUpdate -> max [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateLocationUpdate -> std:"":max [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateLocationUpdate -> LOG_INFO [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateLocationUpdate -> LOG_INFO [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateLocationUpdate -> LOG_INFO [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateLocationUpdate -> LOG_INFO [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateLocationUpdate -> "current_route_.clear" [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateLocationUpdate -> clear [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateLocationUpdate -> LOG_INFO [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::simulateLocationUpdate -> LOG_INFO [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> "navigation_system.cpp":"":navStatusToString
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> "navigation_system.cpp":"":navStatusToString
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> now [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> std:"":chrono::steady_clock::now [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> now [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> std:"":chrono::steady_clock::now [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> "navigation_system.cpp":"":NavigationSystem::simulateGPSFix
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> "navigation_system.cpp":"":NavigationSystem::simulateGPSFix
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> "navigation_system.cpp":"":NavigationSystem::simulateLocationUpdate
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> "navigation_system.cpp":"":NavigationSystem::simulateLocationUpdate
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> "navigation_system.cpp":"":NavigationSystem::reportNavigationError
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> "navigation_system.cpp":"":NavigationSystem::reportNavigationError
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> "navigation_system.cpp":"":NavigationSystem::reportNavigationError
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> "navigation_system.cpp":"":NavigationSystem::reportNavigationError
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> "navigation_system.cpp":"":NavigationSystem::calculateRoute
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> "navigation_system.cpp":"":NavigationSystem::calculateRoute
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> LOG_INFO [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> LOG_INFO [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> LOG_INFO [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> LOG_INFO [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> LOG_ERROR [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> LOG_ERROR [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> "navigation_system.cpp":"":NavigationSystem::provideGuidanceUpdate
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> "navigation_system.cpp":"":NavigationSystem::provideGuidanceUpdate
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> "navigation_system.cpp":"":NavigationSystem::checkOffRoute
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> "navigation_system.cpp":"":NavigationSystem::checkOffRoute
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> LOG_INFO [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> LOG_INFO [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> "navigation_system.cpp":"":NavigationSystem::cancelNavigation
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> "navigation_system.cpp":"":NavigationSystem::cancelNavigation
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> LOG_DEBUG [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::updateNavigationState -> LOG_DEBUG [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::getCurrentNavigationStatus -> LOG_DEBUG [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::getCurrentNavigationStatus -> LOG_DEBUG [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::getCurrentGuidanceInstruction -> LOG_DEBUG [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::getCurrentGuidanceInstruction -> LOG_DEBUG [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::getCurrentGuidanceInstruction -> LOG_DEBUG [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::getCurrentGuidanceInstruction -> LOG_DEBUG [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::getDistanceToNextManeuverKm -> LOG_VERBOSE [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::getDistanceToNextManeuverKm -> LOG_VERBOSE [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::getDistanceToNextManeuverKm -> max [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::getDistanceToNextManeuverKm -> std:"":max [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::getDistanceToDestinationKm -> max [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::getDistanceToDestinationKm -> std:"":max [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::getDistanceToDestinationKm -> "main_vehicle_controller.cpp":"":for
	"navigation_system.cpp":"":NavigationSystem::getDistanceToDestinationKm -> "main_vehicle_controller.cpp":"":for
	"navigation_system.cpp":"":NavigationSystem::getDistanceToDestinationKm -> LOG_VERBOSE [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::getDistanceToDestinationKm -> LOG_VERBOSE [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::getDistanceToDestinationKm -> "current_location_.distanceTo" [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::getDistanceToDestinationKm -> "navigation_system.h":"":distanceTo
	"current_eta.count" [label="current_eta.count" shape=box style=dashed]
	"navigation_system.cpp":"":NavigationSystem::getEstimatedTimeOfArrivalSeconds -> "current_eta.count" [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::getEstimatedTimeOfArrivalSeconds -> "engine_manager.cpp":"":if
	"navigation_system.cpp":"":NavigationSystem::getEstimatedTimeOfArrivalSeconds -> LOG_VERBOSE [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::getEstimatedTimeOfArrivalSeconds -> LOG_VERBOSE [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::getEstimatedTimeOfArrivalSeconds -> seconds [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::getEstimatedTimeOfArrivalSeconds -> std:"":chrono::seconds [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::getGPSSignalStatus -> LOG_DEBUG [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::getGPSSignalStatus -> LOG_DEBUG [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::getCurrentLocation -> "navigation_system.cpp":"":gpsStatusToString
	"navigation_system.cpp":"":NavigationSystem::getCurrentLocation -> "navigation_system.cpp":"":gpsStatusToString
	"navigation_system.cpp":"":NavigationSystem::isMapDataAvailable -> LOG_DEBUG [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::isMapDataAvailable -> LOG_DEBUG [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::reportNavigationError -> "navigation_system.cpp":"":navStatusToString
	"navigation_system.cpp":"":NavigationSystem::reportNavigationError -> "navigation_system.cpp":"":navStatusToString
	"navigation_system.cpp":"":NavigationSystem::reportNavigationError -> "current_route_.clear" [style=dashed]
	"navigation_system.cpp":"":NavigationSystem::reportNavigationError -> clear [style=dashed]
	"media_player.cpp":"":MediaPlayer::selectSource -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::selectSource -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::selectSource -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::selectSource -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::selectSource -> "media_player.cpp":"":MediaPlayer::stop
	"media_player.cpp":"":MediaPlayer::selectSource -> "media_player.cpp":"":MediaPlayer::stop
	"current_playlist_.clear" [label="current_playlist_.clear" shape=box style=dashed]
	"media_player.cpp":"":MediaPlayer::selectSource -> "current_playlist_.clear" [style=dashed]
	"media_player.cpp":"":MediaPlayer::selectSource -> clear [style=dashed]
	"media_player.cpp":"":MediaPlayer::selectSource -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::selectSource -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::selectSource -> "mt19937 gen" [style=dashed]
	"media_player.cpp":"":MediaPlayer::selectSource -> gen [style=dashed]
	"media_player.cpp":"":MediaPlayer::selectSource -> distrib [style=dashed]
	"media_player.cpp":"":MediaPlayer::selectSource -> distrib [style=dashed]
	"media_player.cpp":"":MediaPlayer::selectSource -> "media_player.cpp":"":MediaPlayer::reportPlaybackError
	"media_player.cpp":"":MediaPlayer::selectSource -> "media_player.cpp":"":MediaPlayer::reportPlaybackError
	"media_player.cpp":"":MediaPlayer::selectSource -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::selectSource -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::selectSource -> "media_player.cpp":"":MediaPlayer::reportPlaybackError
	"media_player.cpp":"":MediaPlayer::selectSource -> "media_player.cpp":"":MediaPlayer::reportPlaybackError
	"media_player.cpp":"":MediaPlayer::selectSource -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::selectSource -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::selectSource -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::selectSource -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::selectSource -> "media_player.cpp":"":MediaPlayer::tuneRadio
	"media_player.cpp":"":MediaPlayer::selectSource -> "media_player.cpp":"":MediaPlayer::tuneRadio
	"media_player.cpp":"":MediaPlayer::selectSource -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::selectSource -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::selectSource -> "media_player.cpp":"":MediaPlayer::tuneRadio
	"media_player.cpp":"":MediaPlayer::selectSource -> "media_player.cpp":"":MediaPlayer::tuneRadio
	"media_player.cpp":"":MediaPlayer::selectSource -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::selectSource -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::selectSource -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::selectSource -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::selectSource -> LOG_WARNING [style=dashed]
	"media_player.cpp":"":MediaPlayer::selectSource -> LOG_WARNING [style=dashed]
	"media_player.cpp":"":MediaPlayer::getCurrentSource -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::getCurrentSource -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::playTrackAtIndex -> "media_player.cpp":"":MediaPlayer::reportPlaybackError
	"media_player.cpp":"":MediaPlayer::playTrackAtIndex -> "media_player.cpp":"":MediaPlayer::reportPlaybackError
	"media_player.cpp":"":MediaPlayer::playTrackAtIndex -> "media_player.cpp":"":MediaPlayer::reportPlaybackError
	"media_player.cpp":"":MediaPlayer::playTrackAtIndex -> "media_player.cpp":"":MediaPlayer::reportPlaybackError
	"media_player.cpp":"":MediaPlayer::playTrackAtIndex -> now [style=dashed]
	"media_player.cpp":"":MediaPlayer::playTrackAtIndex -> std:"":chrono::steady_clock::now [style=dashed]
	"media_player.cpp":"":MediaPlayer::playTrackAtIndex -> seconds [style=dashed]
	"media_player.cpp":"":MediaPlayer::playTrackAtIndex -> std:"":chrono::seconds [style=dashed]
	"track.title.c_str" [label="track.title.c_str" shape=box style=dashed]
	"media_player.cpp":"":MediaPlayer::playTrackAtIndex -> "track.title.c_str" [style=dashed]
	"media_player.cpp":"":MediaPlayer::playTrackAtIndex -> c_str [style=dashed]
	"media_player.cpp":"":MediaPlayer::play -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::play -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::play -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::play -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::play -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::play -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::play -> "media_player.cpp":"":MediaPlayer::reportPlaybackError
	"media_player.cpp":"":MediaPlayer::play -> "media_player.cpp":"":MediaPlayer::reportPlaybackError
	"media_player.cpp":"":MediaPlayer::play -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::play -> LOG_INFO [style=dashed]
	"return playTrackAtIndex" [label="return playTrackAtIndex" shape=box style=dashed]
	"media_player.cpp":"":MediaPlayer::play -> "return playTrackAtIndex" [style=dashed]
	"media_player.cpp":"":MediaPlayer::play -> "media_player.cpp":"":MediaPlayer::playTrackAtIndex
	"media_player.cpp":"":MediaPlayer::play -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::play -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::play -> "media_player.cpp":"":MediaPlayer::reportPlaybackError
	"media_player.cpp":"":MediaPlayer::play -> "media_player.cpp":"":MediaPlayer::reportPlaybackError
	"media_player.cpp":"":MediaPlayer::play -> LOG_WARNING [style=dashed]
	"media_player.cpp":"":MediaPlayer::play -> LOG_WARNING [style=dashed]
	"media_player.cpp":"":MediaPlayer::pause -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::pause -> LOG_INFO [style=dashed]
	"paused_elapsed_time_.count" [label="paused_elapsed_time_.count" shape=box style=dashed]
	"media_player.cpp":"":MediaPlayer::pause -> "paused_elapsed_time_.count" [style=dashed]
	count [label=count shape=box style=dashed]
	"media_player.cpp":"":MediaPlayer::pause -> count [style=dashed]
	"media_player.cpp":"":MediaPlayer::pause -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::pause -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::pause -> LOG_WARNING [style=dashed]
	"media_player.cpp":"":MediaPlayer::pause -> LOG_WARNING [style=dashed]
	"media_player.cpp":"":MediaPlayer::stop -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::stop -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::stop -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::stop -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::stop -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::stop -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::stop -> seconds [style=dashed]
	"media_player.cpp":"":MediaPlayer::stop -> std:"":chrono::seconds [style=dashed]
	"media_player.cpp":"":MediaPlayer::stop -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::stop -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::stop -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::stop -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::nextTrack -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::nextTrack -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::nextTrack -> LOG_WARNING [style=dashed]
	"media_player.cpp":"":MediaPlayer::nextTrack -> LOG_WARNING [style=dashed]
	"media_player.cpp":"":MediaPlayer::nextTrack -> "media_player.cpp":"":MediaPlayer::reportPlaybackError
	"media_player.cpp":"":MediaPlayer::nextTrack -> "media_player.cpp":"":MediaPlayer::reportPlaybackError
	"current_playlist_.size" [label="current_playlist_.size" shape=box style=dashed]
	"media_player.cpp":"":MediaPlayer::nextTrack -> "current_playlist_.size" [style=dashed]
	size [label=size shape=box style=dashed]
	"media_player.cpp":"":MediaPlayer::nextTrack -> size [style=dashed]
	"media_player.cpp":"":MediaPlayer::nextTrack -> "return playTrackAtIndex" [style=dashed]
	"media_player.cpp":"":MediaPlayer::nextTrack -> "media_player.cpp":"":MediaPlayer::playTrackAtIndex
	"media_player.cpp":"":MediaPlayer::previousTrack -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::previousTrack -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::previousTrack -> LOG_WARNING [style=dashed]
	"media_player.cpp":"":MediaPlayer::previousTrack -> LOG_WARNING [style=dashed]
	"media_player.cpp":"":MediaPlayer::previousTrack -> "media_player.cpp":"":MediaPlayer::reportPlaybackError
	"media_player.cpp":"":MediaPlayer::previousTrack -> "media_player.cpp":"":MediaPlayer::reportPlaybackError
	"media_player.cpp":"":MediaPlayer::previousTrack -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::previousTrack -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::previousTrack -> "return playTrackAtIndex" [style=dashed]
	"media_player.cpp":"":MediaPlayer::previousTrack -> "media_player.cpp":"":MediaPlayer::playTrackAtIndex
	"media_player.cpp":"":MediaPlayer::previousTrack -> "return playTrackAtIndex" [style=dashed]
	"media_player.cpp":"":MediaPlayer::previousTrack -> "media_player.cpp":"":MediaPlayer::playTrackAtIndex
	"media_player.cpp":"":MediaPlayer::seek -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::seek -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::seek -> LOG_WARNING [style=dashed]
	"media_player.cpp":"":MediaPlayer::seek -> LOG_WARNING [style=dashed]
	"media_player.cpp":"":MediaPlayer::seek -> LOG_WARNING [style=dashed]
	"media_player.cpp":"":MediaPlayer::seek -> LOG_WARNING [style=dashed]
	"media_player.cpp":"":MediaPlayer::seek -> "media_player.cpp":"":MediaPlayer::reportPlaybackError
	"media_player.cpp":"":MediaPlayer::seek -> "media_player.cpp":"":MediaPlayer::reportPlaybackError
	"position.count" [label="position.count" shape=box style=dashed]
	"media_player.cpp":"":MediaPlayer::seek -> "position.count" [style=dashed]
	"media_player.cpp":"":MediaPlayer::seek -> count [style=dashed]
	"media_player.cpp":"":MediaPlayer::seek -> max [style=dashed]
	"media_player.cpp":"":MediaPlayer::seek -> std:"":max [style=dashed]
	"media_player.cpp":"":MediaPlayer::seek -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::seek -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::setVolume -> max [style=dashed]
	"media_player.cpp":"":MediaPlayer::setVolume -> std:"":max [style=dashed]
	"media_player.cpp":"":MediaPlayer::setVolume -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::setVolume -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::setVolume -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::setVolume -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::setVolume -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::setVolume -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::setVolume -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::setVolume -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::setVolume -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::setVolume -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::getVolume -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::getVolume -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::mute -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::mute -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::mute -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::mute -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::isMuted -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::isMuted -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::getPlaybackStatus -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::getPlaybackStatus -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::getCurrentTrackInfo -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::getCurrentTrackInfo -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::getCurrentTrackInfo -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::getCurrentTrackInfo -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::getCurrentTrackElapsedTime -> LOG_VERBOSE [style=dashed]
	"media_player.cpp":"":MediaPlayer::getCurrentTrackElapsedTime -> LOG_VERBOSE [style=dashed]
	"media_player.cpp":"":MediaPlayer::getCurrentTrackElapsedTime -> LOG_VERBOSE [style=dashed]
	"media_player.cpp":"":MediaPlayer::getCurrentTrackElapsedTime -> LOG_VERBOSE [style=dashed]
	"media_player.cpp":"":MediaPlayer::getCurrentTrackElapsedTime -> LOG_VERBOSE [style=dashed]
	"media_player.cpp":"":MediaPlayer::getCurrentTrackElapsedTime -> LOG_VERBOSE [style=dashed]
	"media_player.cpp":"":MediaPlayer::getCurrentTrackElapsedTime -> seconds [style=dashed]
	"media_player.cpp":"":MediaPlayer::getCurrentTrackElapsedTime -> std:"":chrono::seconds [style=dashed]
	"media_player.cpp":"":MediaPlayer::loadPlaylist -> "media_player.cpp":"":mediaSourceToString
	"media_player.cpp":"":MediaPlayer::loadPlaylist -> "media_player.cpp":"":mediaSourceToString
	"playlist.size" [label="playlist.size" shape=box style=dashed]
	"media_player.cpp":"":MediaPlayer::loadPlaylist -> "playlist.size" [style=dashed]
	"media_player.cpp":"":MediaPlayer::loadPlaylist -> size [style=dashed]
	"media_player.cpp":"":MediaPlayer::loadPlaylist -> "main_vehicle_controller.cpp":"":for
	"media_player.cpp":"":MediaPlayer::loadPlaylist -> "main_vehicle_controller.cpp":"":for
	"media_player.cpp":"":MediaPlayer::loadPlaylist -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::loadPlaylist -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::tuneRadio -> LOG_ERROR [style=dashed]
	"media_player.cpp":"":MediaPlayer::tuneRadio -> LOG_ERROR [style=dashed]
	"media_player.cpp":"":MediaPlayer::tuneRadio -> "media_player.cpp":"":mediaSourceToString
	"media_player.cpp":"":MediaPlayer::tuneRadio -> "media_player.cpp":"":mediaSourceToString
	"media_player.cpp":"":MediaPlayer::tuneRadio -> "media_player.cpp":"":MediaPlayer::selectSource
	"media_player.cpp":"":MediaPlayer::tuneRadio -> "media_player.cpp":"":MediaPlayer::selectSource
	"media_player.cpp":"":MediaPlayer::tuneRadio -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::tuneRadio -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::tuneRadio -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::tuneRadio -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::tuneRadio -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::tuneRadio -> LOG_DEBUG [style=dashed]
	"media_player.cpp":"":MediaPlayer::handleTrackEnd -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::handleTrackEnd -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::handleTrackEnd -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::handleTrackEnd -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::handleTrackEnd -> "media_player.cpp":"":MediaPlayer::nextTrack
	"media_player.cpp":"":MediaPlayer::handleTrackEnd -> "media_player.cpp":"":MediaPlayer::nextTrack
	"media_player.cpp":"":MediaPlayer::handleTrackEnd -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::handleTrackEnd -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::handleTrackEnd -> "media_player.cpp":"":MediaPlayer::playTrackAtIndex
	"media_player.cpp":"":MediaPlayer::handleTrackEnd -> "media_player.cpp":"":MediaPlayer::playTrackAtIndex
	"media_player.cpp":"":MediaPlayer::handleTrackEnd -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::handleTrackEnd -> LOG_INFO [style=dashed]
	"media_player.cpp":"":MediaPlayer::handleTrackEnd -> "media_player.cpp":"":MediaPlayer::stop
	"media_player.cpp":"":MediaPlayer::handleTrackEnd -> "media_player.cpp":"":MediaPlayer::stop
	"media_player.cpp":"":MediaPlayer::simulateTimePassing -> "media_player.cpp":"":MediaPlayer::getCurrentTrackElapsedTime
	"media_player.cpp":"":MediaPlayer::simulateTimePassing -> "media_player.cpp":"":MediaPlayer::getCurrentTrackElapsedTime
	"media_player.cpp":"":MediaPlayer::simulateTimePassing -> seconds [style=dashed]
	"media_player.cpp":"":MediaPlayer::simulateTimePassing -> std:"":chrono::seconds [style=dashed]
	"current_track.title.c_str" [label="current_track.title.c_str" shape=box style=dashed]
	"media_player.cpp":"":MediaPlayer::simulateTimePassing -> "current_track.title.c_str" [style=dashed]
	"media_player.cpp":"":MediaPlayer::simulateTimePassing -> c_str [style=dashed]
	"media_player.cpp":"":MediaPlayer::simulateTimePassing -> "media_player.cpp":"":MediaPlayer::handleTrackEnd
	"media_player.cpp":"":MediaPlayer::simulateTimePassing -> "media_player.cpp":"":MediaPlayer::handleTrackEnd
	"media_player.cpp":"":MediaPlayer::simulateTimePassing -> LOG_VERBOSE [style=dashed]
	"media_player.cpp":"":MediaPlayer::simulateTimePassing -> LOG_VERBOSE [style=dashed]
	"media_player.cpp":"":MediaPlayer::simulateTimePassing -> LOG_VERBOSE [style=dashed]
	"media_player.cpp":"":MediaPlayer::simulateTimePassing -> LOG_VERBOSE [style=dashed]
	"media_player.cpp":"":MediaPlayer::reportPlaybackError -> "media_player.cpp":"":playbackStatusToString
	"media_player.cpp":"":MediaPlayer::reportPlaybackError -> "media_player.cpp":"":playbackStatusToString
	"media_player.cpp":"":MediaPlayer::updatePlaybackState -> LOG_VERBOSE [style=dashed]
	"media_player.cpp":"":MediaPlayer::updatePlaybackState -> LOG_VERBOSE [style=dashed]
	"media_player.cpp":"":MediaPlayer::updatePlaybackState -> "media_player.cpp":"":MediaPlayer::simulateTimePassing
	"media_player.cpp":"":MediaPlayer::updatePlaybackState -> "media_player.cpp":"":MediaPlayer::simulateTimePassing
	"media_player.cpp":"":MediaPlayer::updatePlaybackState -> "mt19937 gen" [style=dashed]
	"media_player.cpp":"":MediaPlayer::updatePlaybackState -> gen [style=dashed]
	"media_player.cpp":"":MediaPlayer::updatePlaybackState -> "media_player.cpp":"":MediaPlayer::reportPlaybackError
	"media_player.cpp":"":MediaPlayer::updatePlaybackState -> "media_player.cpp":"":MediaPlayer::reportPlaybackError
	"media_player.cpp":"":MediaPlayer::updatePlaybackState -> "media_player.cpp":"":MediaPlayer::stop
	"media_player.cpp":"":MediaPlayer::updatePlaybackState -> "media_player.cpp":"":MediaPlayer::stop
	"media_player.cpp":"":MediaPlayer::updatePlaybackState -> LOG_VERBOSE [style=dashed]
	"media_player.cpp":"":MediaPlayer::updatePlaybackState -> LOG_VERBOSE [style=dashed]
	"abs_control.cpp":"":ABSControl::initialize -> LOG_INFO [style=dashed]
	"abs_control.cpp":"":ABSControl::initialize -> LOG_INFO [style=dashed]
	"wheel_data_.clear" [label="wheel_data_.clear" shape=box style=dashed]
	"abs_control.cpp":"":ABSControl::initialize -> "wheel_data_.clear" [style=dashed]
	"abs_control.cpp":"":ABSControl::initialize -> clear [style=dashed]
	"wheel_data_.push_back" [label="wheel_data_.push_back" shape=box style=dashed]
	"abs_control.cpp":"":ABSControl::initialize -> "wheel_data_.push_back" [style=dashed]
	"abs_control.cpp":"":ABSControl::initialize -> push_back [style=dashed]
	"abs_control.cpp":"":ABSControl::initialize -> LOG_DEBUG [style=dashed]
	"abs_control.cpp":"":ABSControl::initialize -> LOG_DEBUG [style=dashed]
	"abs_control.cpp":"":ABSControl::initialize -> sleep_for [style=dashed]
	"abs_control.cpp":"":ABSControl::initialize -> std:"":this_thread::sleep_for [style=dashed]
	"abs_control.cpp":"":ABSControl::initialize -> "abs_control.cpp":"":ABSControl::runDiagnostics
	"abs_control.cpp":"":ABSControl::initialize -> "abs_control.cpp":"":ABSControl::runDiagnostics
	"abs_control.cpp":"":ABSControl::initialize -> LOG_INFO [style=dashed]
	"abs_control.cpp":"":ABSControl::initialize -> LOG_INFO [style=dashed]
	"abs_control.cpp":"":ABSControl::initialize -> LOG_ERROR [style=dashed]
	"abs_control.cpp":"":ABSControl::initialize -> LOG_ERROR [style=dashed]
	"abs_control.cpp":"":ABSControl::updateVehicleReferenceSpeed -> "main_vehicle_controller.cpp":"":for
	"abs_control.cpp":"":ABSControl::updateVehicleReferenceSpeed -> "main_vehicle_controller.cpp":"":for
	"abs_control.cpp":"":ABSControl::updateVehicleReferenceSpeed -> LOG_WARNING [style=dashed]
	"abs_control.cpp":"":ABSControl::updateVehicleReferenceSpeed -> LOG_WARNING [style=dashed]
	"abs_control.cpp":"":ABSControl::updateVehicleReferenceSpeed -> LOG_WARNING [style=dashed]
	"abs_control.cpp":"":ABSControl::updateVehicleReferenceSpeed -> LOG_WARNING [style=dashed]
	"abs_control.cpp":"":ABSControl::updateVehicleReferenceSpeed -> min [style=dashed]
	"abs_control.cpp":"":ABSControl::updateVehicleReferenceSpeed -> std:"":min [style=dashed]
	"abs_control.cpp":"":ABSControl::updateVehicleReferenceSpeed -> LOG_VERBOSE [style=dashed]
	"abs_control.cpp":"":ABSControl::updateVehicleReferenceSpeed -> LOG_VERBOSE [style=dashed]
	"abs_control.cpp":"":ABSControl::detectWheelLockup -> LOG_DEBUG [style=dashed]
	"abs_control.cpp":"":ABSControl::detectWheelLockup -> LOG_DEBUG [style=dashed]
	"abs_control.cpp":"":ABSControl::releasePressure -> LOG_INFO [style=dashed]
	"abs_control.cpp":"":ABSControl::releasePressure -> LOG_INFO [style=dashed]
	"abs_control.cpp":"":ABSControl::releasePressure -> max [style=dashed]
	"abs_control.cpp":"":ABSControl::releasePressure -> std:"":max [style=dashed]
	"abs_control.cpp":"":ABSControl::releasePressure -> LOG_DEBUG [style=dashed]
	"abs_control.cpp":"":ABSControl::releasePressure -> LOG_DEBUG [style=dashed]
	"abs_control.cpp":"":ABSControl::reapplyPressure -> LOG_INFO [style=dashed]
	"abs_control.cpp":"":ABSControl::reapplyPressure -> LOG_INFO [style=dashed]
	"abs_control.cpp":"":ABSControl::reapplyPressure -> LOG_DEBUG [style=dashed]
	"abs_control.cpp":"":ABSControl::reapplyPressure -> LOG_DEBUG [style=dashed]
	"abs_control.cpp":"":ABSControl::modulateBrakePressure -> "abs_control.cpp":"":ABSControl::releasePressure
	"abs_control.cpp":"":ABSControl::modulateBrakePressure -> "abs_control.cpp":"":ABSControl::releasePressure
	"abs_control.cpp":"":ABSControl::modulateBrakePressure -> "abs_control.cpp":"":ABSControl::holdPressure
	"abs_control.cpp":"":ABSControl::modulateBrakePressure -> "abs_control.cpp":"":ABSControl::holdPressure
	"abs_control.cpp":"":ABSControl::modulateBrakePressure -> "abs_control.cpp":"":ABSControl::reapplyPressure
	"abs_control.cpp":"":ABSControl::modulateBrakePressure -> "abs_control.cpp":"":ABSControl::reapplyPressure
	"abs_control.cpp":"":ABSControl::modulateBrakePressure -> max [style=dashed]
	"abs_control.cpp":"":ABSControl::modulateBrakePressure -> std:"":max [style=dashed]
	"abs_control.cpp":"":ABSControl::checkForSystemFaults -> "main_vehicle_controller.cpp":"":for
	"abs_control.cpp":"":ABSControl::checkForSystemFaults -> "main_vehicle_controller.cpp":"":for
	"wheel_speed_sensors.size" [label="wheel_speed_sensors.size" shape=box style=dashed]
	"abs_control.cpp":"":ABSControl::checkForSystemFaults -> "wheel_speed_sensors.size" [style=dashed]
	"abs_control.cpp":"":ABSControl::checkForSystemFaults -> size [style=dashed]
	"abs_control.cpp":"":ABSControl::checkForSystemFaults -> LOG_FATAL [style=dashed]
	"abs_control.cpp":"":ABSControl::checkForSystemFaults -> LOG_FATAL [style=dashed]
	"abs_control.cpp":"":ABSControl::checkForSystemFaults -> LOG_FATAL [style=dashed]
	"abs_control.cpp":"":ABSControl::checkForSystemFaults -> LOG_FATAL [style=dashed]
	"abs_control.cpp":"":ABSControl::checkForSystemFaults -> LOG_VERBOSE [style=dashed]
	"abs_control.cpp":"":ABSControl::checkForSystemFaults -> LOG_VERBOSE [style=dashed]
	"abs_control.cpp":"":if -> LOG_WARNING [style=dashed]
	"abs_control.cpp":"":if -> LOG_WARNING [style=dashed]
	"abs_control.cpp":"":if -> LOG_INFO [style=dashed]
	"abs_control.cpp":"":if -> LOG_INFO [style=dashed]
	"abs_control.cpp":"":if -> LOG_ERROR [style=dashed]
	"abs_control.cpp":"":if -> LOG_ERROR [style=dashed]
	"abs_control.cpp":"":if -> LOG_INFO [style=dashed]
	"abs_control.cpp":"":if -> LOG_INFO [style=dashed]
	"abs_control.cpp":"":if -> LOG_INFO [style=dashed]
	"abs_control.cpp":"":if -> LOG_INFO [style=dashed]
	"abs_control.cpp":"":if -> LOG_DEBUG [style=dashed]
	"abs_control.cpp":"":if -> LOG_DEBUG [style=dashed]
	"abs_control.cpp":"":if -> "main_vehicle_controller.cpp":"":for
	"abs_control.cpp":"":if -> "main_vehicle_controller.cpp":"":for
	"abs_control.cpp":"":if -> "abs_control.cpp":"":ABSControl::detectWheelLockup
	"abs_control.cpp":"":if -> "abs_control.cpp":"":ABSControl::detectWheelLockup
	"abs_control.cpp":"":if -> LOG_WARNING [style=dashed]
	"abs_control.cpp":"":if -> LOG_WARNING [style=dashed]
	"abs_control.cpp":"":if -> "abs_control.cpp":"":ABSControl::modulateBrakePressure
	"abs_control.cpp":"":if -> "abs_control.cpp":"":ABSControl::modulateBrakePressure
	"abs_control.cpp":"":if -> LOG_VERBOSE [style=dashed]
	"abs_control.cpp":"":if -> LOG_VERBOSE [style=dashed]
	"abs_control.cpp":"":if -> LOG_INFO [style=dashed]
	"abs_control.cpp":"":if -> LOG_INFO [style=dashed]
	"abs_control.cpp":"":if -> "abs_control.cpp":"":ABSControl::reapplyPressure
	"abs_control.cpp":"":if -> "abs_control.cpp":"":ABSControl::reapplyPressure
	"abs_control.cpp":"":if -> min [style=dashed]
	"abs_control.cpp":"":if -> std:"":min [style=dashed]
	"abs_control.cpp":"":if -> LOG_INFO [style=dashed]
	"abs_control.cpp":"":if -> LOG_INFO [style=dashed]
	"abs_control.cpp":"":if -> LOG_VERBOSE [style=dashed]
	"abs_control.cpp":"":if -> LOG_VERBOSE [style=dashed]
	"abs_control.cpp":"":if -> LOG_DEBUG [style=dashed]
	"abs_control.cpp":"":if -> LOG_DEBUG [style=dashed]
	"abs_control.cpp":"":for -> max [style=dashed]
	"abs_control.cpp":"":for -> std:"":max [style=dashed]
	"abs_control.cpp":"":ABSControl::getCurrentState -> LOG_DEBUG [style=dashed]
	"abs_control.cpp":"":ABSControl::getCurrentState -> LOG_DEBUG [style=dashed]
	"abs_control.cpp":"":ABSControl::isABSInterventionActive -> LOG_DEBUG [style=dashed]
	"abs_control.cpp":"":ABSControl::isABSInterventionActive -> LOG_DEBUG [style=dashed]
	"abs_control.cpp":"":ABSControl::runDiagnostics -> LOG_INFO [style=dashed]
	"abs_control.cpp":"":ABSControl::runDiagnostics -> LOG_INFO [style=dashed]
	"abs_control.cpp":"":ABSControl::runDiagnostics -> sleep_for [style=dashed]
	"abs_control.cpp":"":ABSControl::runDiagnostics -> std:"":this_thread::sleep_for [style=dashed]
	"abs_control.cpp":"":ABSControl::runDiagnostics -> LOG_ERROR [style=dashed]
	"abs_control.cpp":"":ABSControl::runDiagnostics -> LOG_ERROR [style=dashed]
	"abs_control.cpp":"":ABSControl::runDiagnostics -> LOG_DEBUG [style=dashed]
	"abs_control.cpp":"":ABSControl::runDiagnostics -> LOG_DEBUG [style=dashed]
	"abs_control.cpp":"":ABSControl::runDiagnostics -> LOG_ERROR [style=dashed]
	"abs_control.cpp":"":ABSControl::runDiagnostics -> LOG_ERROR [style=dashed]
	"brake_actuator_->getLastErrorCode" [label="brake_actuator_->getLastErrorCode" shape=box style=dashed]
	"abs_control.cpp":"":ABSControl::runDiagnostics -> "brake_actuator_->getLastErrorCode" [style=dashed]
	getLastErrorCode [label=getLastErrorCode shape=box style=dashed]
	"abs_control.cpp":"":ABSControl::runDiagnostics -> getLastErrorCode [style=dashed]
	"abs_control.cpp":"":ABSControl::runDiagnostics -> LOG_DEBUG [style=dashed]
	"abs_control.cpp":"":ABSControl::runDiagnostics -> LOG_DEBUG [style=dashed]
	"abs_control.cpp":"":ABSControl::runDiagnostics -> LOG_FATAL [style=dashed]
	"abs_control.cpp":"":ABSControl::runDiagnostics -> LOG_FATAL [style=dashed]
	"abs_control.cpp":"":ABSControl::runDiagnostics -> sleep_for [style=dashed]
	"abs_control.cpp":"":ABSControl::runDiagnostics -> std:"":this_thread::sleep_for [style=dashed]
	"abs_control.cpp":"":ABSControl::runDiagnostics -> LOG_ERROR [style=dashed]
	"abs_control.cpp":"":ABSControl::runDiagnostics -> LOG_ERROR [style=dashed]
	"abs_control.cpp":"":ABSControl::runDiagnostics -> LOG_DEBUG [style=dashed]
	"abs_control.cpp":"":ABSControl::runDiagnostics -> LOG_DEBUG [style=dashed]
	"abs_control.cpp":"":ABSControl::runDiagnostics -> LOG_WARNING [style=dashed]
	"abs_control.cpp":"":ABSControl::runDiagnostics -> LOG_WARNING [style=dashed]
	"abs_control.cpp":"":ABSControl::runDiagnostics -> LOG_INFO [style=dashed]
	"abs_control.cpp":"":ABSControl::runDiagnostics -> LOG_INFO [style=dashed]
	"airbag_names.find" [label="airbag_names.find" shape=box style=dashed]
	"airbag_control.cpp":"":airbagIdToString -> "airbag_names.find" [style=dashed]
	find [label=find shape=box style=dashed]
	"airbag_control.cpp":"":airbagIdToString -> find [style=dashed]
	"airbag_control.cpp":"":AirbagControl::initializeSystem -> LOG_INFO [style=dashed]
	"airbag_control.cpp":"":AirbagControl::initializeSystem -> LOG_INFO [style=dashed]
	"airbag_control.cpp":"":AirbagControl::initializeSystem -> sleep_for [style=dashed]
	"airbag_control.cpp":"":AirbagControl::initializeSystem -> std:"":this_thread::sleep_for [style=dashed]
	"airbag_control.cpp":"":AirbagControl::initializeSystem -> "airbag_control.cpp":"":AirbagControl::runSystemCheck
	"airbag_control.cpp":"":AirbagControl::initializeSystem -> "airbag_control.cpp":"":AirbagControl::runSystemCheck
	"airbag_control.cpp":"":AirbagControl::initializeSystem -> LOG_FATAL [style=dashed]
	"airbag_control.cpp":"":AirbagControl::initializeSystem -> LOG_FATAL [style=dashed]
	"airbag_control.cpp":"":AirbagControl::initializeSystem -> LOG_INFO [style=dashed]
	"airbag_control.cpp":"":AirbagControl::initializeSystem -> LOG_INFO [style=dashed]
	"airbag_control.cpp":"":AirbagControl::detectSystemFaults -> "mt19937 gen" [style=dashed]
	"airbag_control.cpp":"":AirbagControl::detectSystemFaults -> gen [style=dashed]
	"airbag_control.cpp":"":AirbagControl::detectSystemFaults -> "airbag_control.cpp":"":airbagSysStateToString
	"airbag_control.cpp":"":AirbagControl::detectSystemFaults -> "airbag_control.cpp":"":airbagSysStateToString
	"airbag_control.cpp":"":AirbagControl::detectSystemFaults -> rand [style=dashed]
	"airbag_control.cpp":"":AirbagControl::detectSystemFaults -> rand [style=dashed]
	"airbag_control.cpp":"":AirbagControl::detectSystemFaults -> rand [style=dashed]
	"airbag_control.cpp":"":AirbagControl::detectSystemFaults -> rand [style=dashed]
	"airbag_control.cpp":"":AirbagControl::detectSystemFaults -> rand [style=dashed]
	"airbag_control.cpp":"":AirbagControl::detectSystemFaults -> rand [style=dashed]
	"airbag_control.cpp":"":AirbagControl::detectSystemFaults -> "airbag_control.cpp":"":airbagIdToString
	"airbag_control.cpp":"":AirbagControl::detectSystemFaults -> "airbag_control.cpp":"":airbagIdToString
	"airbag_control.cpp":"":AirbagControl::detectSystemFaults -> LOG_VERBOSE [style=dashed]
	"airbag_control.cpp":"":AirbagControl::detectSystemFaults -> LOG_VERBOSE [style=dashed]
	"crash_type_desc.c_str" [label="crash_type_desc.c_str" shape=box style=dashed]
	"airbag_control.cpp":"":AirbagControl::evaluateCrashSeverity -> "crash_type_desc.c_str" [style=dashed]
	"airbag_control.cpp":"":AirbagControl::evaluateCrashSeverity -> c_str [style=dashed]
	"airbag_control.cpp":"":AirbagControl::fireAirbag -> LOG_ERROR [style=dashed]
	"airbag_control.cpp":"":AirbagControl::fireAirbag -> LOG_ERROR [style=dashed]
	"airbag_control.cpp":"":AirbagControl::fireAirbag -> "airbag_control.cpp":"":airbagIdToString
	"airbag_control.cpp":"":AirbagControl::fireAirbag -> "airbag_control.cpp":"":airbagIdToString
	"airbag_control.cpp":"":AirbagControl::fireAirbag -> sleep_for [style=dashed]
	"airbag_control.cpp":"":AirbagControl::fireAirbag -> std:"":this_thread::sleep_for [style=dashed]
	"deployed_airbags_list_.push_back" [label="deployed_airbags_list_.push_back" shape=box style=dashed]
	"airbag_control.cpp":"":AirbagControl::fireAirbag -> "deployed_airbags_list_.push_back" [style=dashed]
	"airbag_control.cpp":"":AirbagControl::fireAirbag -> push_back [style=dashed]
	"airbag_control.cpp":"":AirbagControl::fireAirbag -> "airbag_control.cpp":"":airbagIdToString
	"airbag_control.cpp":"":AirbagControl::fireAirbag -> "airbag_control.cpp":"":airbagIdToString
	"airbag_control.cpp":"":AirbagControl::fireAirbag -> "airbag_control.cpp":"":airbagIdToString
	"airbag_control.cpp":"":AirbagControl::fireAirbag -> "airbag_control.cpp":"":airbagIdToString
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> LOG_INFO [style=dashed]
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> LOG_INFO [style=dashed]
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> "airbag_control.cpp":"":AirbagControl::fireAirbag
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> "airbag_control.cpp":"":AirbagControl::fireAirbag
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> "airbag_control.cpp":"":AirbagControl::fireAirbag
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> "airbag_control.cpp":"":AirbagControl::fireAirbag
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> LOG_WARNING [style=dashed]
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> LOG_WARNING [style=dashed]
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> LOG_INFO [style=dashed]
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> LOG_INFO [style=dashed]
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> "airbag_control.cpp":"":AirbagControl::fireAirbag
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> "airbag_control.cpp":"":AirbagControl::fireAirbag
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> "airbag_control.cpp":"":AirbagControl::fireAirbag
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> "airbag_control.cpp":"":AirbagControl::fireAirbag
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> "airbag_control.cpp":"":AirbagControl::fireAirbag
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> "airbag_control.cpp":"":AirbagControl::fireAirbag
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> "airbag_control.cpp":"":AirbagControl::fireAirbag
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> "airbag_control.cpp":"":AirbagControl::fireAirbag
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> "airbag_control.cpp":"":AirbagControl::fireAirbag
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> "airbag_control.cpp":"":AirbagControl::fireAirbag
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> "airbag_control.cpp":"":AirbagControl::fireAirbag
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> "airbag_control.cpp":"":AirbagControl::fireAirbag
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> LOG_INFO [style=dashed]
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> LOG_INFO [style=dashed]
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> "airbag_control.cpp":"":AirbagControl::fireAirbag
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> "airbag_control.cpp":"":AirbagControl::fireAirbag
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> "airbag_control.cpp":"":AirbagControl::fireAirbag
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> "airbag_control.cpp":"":AirbagControl::fireAirbag
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> LOG_INFO [style=dashed]
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> LOG_INFO [style=dashed]
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> "airbag_control.cpp":"":AirbagControl::enterPostCrashSafeMode
	"airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence -> "airbag_control.cpp":"":AirbagControl::enterPostCrashSafeMode
	"airbag_control.cpp":"":AirbagControl::enterPostCrashSafeMode -> LOG_WARNING [style=dashed]
	"airbag_control.cpp":"":AirbagControl::enterPostCrashSafeMode -> LOG_WARNING [style=dashed]
	"airbag_control.cpp":"":AirbagControl::enterPostCrashSafeMode -> LOG_INFO [style=dashed]
	"airbag_control.cpp":"":AirbagControl::enterPostCrashSafeMode -> LOG_INFO [style=dashed]
	"airbag_control.cpp":"":AirbagControl::enterPostCrashSafeMode -> "main_vehicle_controller.cpp":"":for
	"airbag_control.cpp":"":AirbagControl::enterPostCrashSafeMode -> "main_vehicle_controller.cpp":"":for
	"airbag_control.cpp":"":AirbagControl::enterPostCrashSafeMode -> "airbag_control.cpp":"":airbagIdToString
	"airbag_control.cpp":"":AirbagControl::enterPostCrashSafeMode -> "airbag_control.cpp":"":airbagIdToString
	"airbag_control.cpp":"":AirbagControl::enterPostCrashSafeMode -> LOG_FATAL [style=dashed]
	"airbag_control.cpp":"":AirbagControl::enterPostCrashSafeMode -> LOG_FATAL [style=dashed]
	"airbag_control.cpp":"":AirbagControl::processImpactData -> "airbag_control.cpp":"":AirbagControl::detectSystemFaults
	"airbag_control.cpp":"":AirbagControl::processImpactData -> "airbag_control.cpp":"":AirbagControl::detectSystemFaults
	"airbag_control.cpp":"":AirbagControl::processImpactData -> LOG_INFO [style=dashed]
	"airbag_control.cpp":"":AirbagControl::processImpactData -> LOG_INFO [style=dashed]
	"airbag_control.cpp":"":AirbagControl::processImpactData -> LOG_VERBOSE [style=dashed]
	"airbag_control.cpp":"":AirbagControl::processImpactData -> LOG_VERBOSE [style=dashed]
	"airbag_control.cpp":"":AirbagControl::processImpactData -> "airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence
	"airbag_control.cpp":"":AirbagControl::processImpactData -> "airbag_control.cpp":"":AirbagControl::triggerDeploymentSequence
	"airbag_control.cpp":"":AirbagControl::processImpactData -> "airbag_control.cpp":"":airbagSysStateToString
	"airbag_control.cpp":"":AirbagControl::processImpactData -> "airbag_control.cpp":"":airbagSysStateToString
	"airbag_control.cpp":"":AirbagControl::processImpactData -> LOG_INFO [style=dashed]
	"airbag_control.cpp":"":AirbagControl::processImpactData -> LOG_INFO [style=dashed]
	"airbag_control.cpp":"":AirbagControl::processImpactData -> LOG_DEBUG [style=dashed]
	"airbag_control.cpp":"":AirbagControl::processImpactData -> LOG_DEBUG [style=dashed]
	"airbag_control.cpp":"":AirbagControl::getSystemState -> LOG_DEBUG [style=dashed]
	"airbag_control.cpp":"":AirbagControl::getSystemState -> LOG_DEBUG [style=dashed]
	"airbag_control.cpp":"":AirbagControl::getDeployedAirbags -> LOG_DEBUG [style=dashed]
	"airbag_control.cpp":"":AirbagControl::getDeployedAirbags -> LOG_DEBUG [style=dashed]
	"airbag_control.cpp":"":AirbagControl::runSystemCheck -> LOG_INFO [style=dashed]
	"airbag_control.cpp":"":AirbagControl::runSystemCheck -> LOG_INFO [style=dashed]
	"airbag_control.cpp":"":AirbagControl::runSystemCheck -> "mt19937 gen" [style=dashed]
	"airbag_control.cpp":"":AirbagControl::runSystemCheck -> gen [style=dashed]
	"airbag_control.cpp":"":AirbagControl::runSystemCheck -> rand [style=dashed]
	"airbag_control.cpp":"":AirbagControl::runSystemCheck -> rand [style=dashed]
	"airbag_control.cpp":"":AirbagControl::runSystemCheck -> LOG_ERROR [style=dashed]
	"airbag_control.cpp":"":AirbagControl::runSystemCheck -> LOG_ERROR [style=dashed]
	"airbag_control.cpp":"":AirbagControl::runSystemCheck -> LOG_INFO [style=dashed]
	"airbag_control.cpp":"":AirbagControl::runSystemCheck -> LOG_INFO [style=dashed]
	"airbag_control.cpp":"":AirbagControl::runSystemCheck -> rand [style=dashed]
	"airbag_control.cpp":"":AirbagControl::runSystemCheck -> rand [style=dashed]
	"airbag_control.cpp":"":AirbagControl::runSystemCheck -> "airbag_control.cpp":"":airbagIdToString
	"airbag_control.cpp":"":AirbagControl::runSystemCheck -> "airbag_control.cpp":"":airbagIdToString
	"airbag_control.cpp":"":AirbagControl::runSystemCheck -> LOG_INFO [style=dashed]
	"airbag_control.cpp":"":AirbagControl::runSystemCheck -> LOG_INFO [style=dashed]
	"airbag_control.cpp":"":AirbagControl::runSystemCheck -> "airbag_control.cpp":"":airbagSysStateToString
	"airbag_control.cpp":"":AirbagControl::runSystemCheck -> "airbag_control.cpp":"":airbagSysStateToString
	"airbag_control.cpp":"":AirbagControl::runSystemCheck -> LOG_INFO [style=dashed]
	"airbag_control.cpp":"":AirbagControl::runSystemCheck -> LOG_INFO [style=dashed]
}
